!function(){var e=window.__fuse=window.__fuse||{},t=e.modules=e.modules||{};e.dt=function(e){return e&&e.__esModule?e:{default:e}},e.bundle=function(e,s){for(var i in e)t[i]=e[i];s&&s()},e.c={},e.r=function(s){var i=e.c[s];if(i)return i.m.exports;var r=t[s];if(!r)throw new Error("Module "+s+" was not found");return(i=e.c[s]={}).exports={},i.m={exports:i.exports},r(e.r,i.exports,i.m),i.m.exports}}(),__fuse.bundle({1:function(e,t,s){t.__esModule=!0;var i=e(2),r=e(3),_=e(4),a=e(5),o=e(6),n=e(7);const l=async(e=n.DEFAULT_CONFIG)=>{let t="DATA",s=0,l=i.WidescreenMode.kWidescreenNone,h={...r.defaultScaleParameters},c=-1;console.log({scalerParameters:h}),console.log({config:e}),t=e.datapath||t,s=e.levelnum,((e,t)=>{const s=e.split("@");s.length>1&&(t.factor=Number(s[1])),t.name=e})(e.scaler,h);const u=[{lang:i.Language.LANG_FR,str:"FR"},{lang:i.Language.LANG_EN,str:"EN"},{lang:i.Language.LANG_DE,str:"DE"},{lang:i.Language.LANG_SP,str:"SP"},{lang:i.Language.LANG_IT,str:"IT"},{lang:i.Language.LANG_JP,str:"JP"}];for(let t=0;u[t].str;++t)if(u[t].str===e.language.toUpperCase()){c=u[t].lang;break}l=(e=>{const t=[{name:"adjacent",mode:i.WidescreenMode.kWidescreenAdjacentRooms},{name:"mirror",mode:i.WidescreenMode.kWidescreenMirrorRoom},{name:"blur",mode:i.WidescreenMode.kWidescreenBlur},{name:"none",mode:i.WidescreenMode.kWidescreenNone}];for(let s=0;t[s].name;++s)if(t[s].name===e)return t[s].mode;return console.warn(`Unhandled widecreen mode '${e}', defaults to 16:9 blur`),i.WidescreenMode.kWidescreenBlur})(e.widescreen),await(async()=>{n.g_options.bypass_protection=!0,n.g_options.enable_password_menu=!1,n.g_options.enable_language_selection=!0,n.g_options.fade_out_palette=!1,n.g_options.use_text_cutscenes=!1,n.g_options.use_seq_cutscenes=!0,n.g_options.use_words_protection=!1,n.g_options.use_white_tshirt=!1,n.g_options.play_asc_cutscene=!0,n.g_options.play_caillou_cutscene=!0,n.g_options.play_metro_cutscene=!1,n.g_options.play_serrure_cutscene=!1,n.g_options.play_carte_cutscene=!1,n.g_options.play_gamesaved_sound=!1})();const p=new a.FileSystem;await p.setRootDirectory(t);const d=await(async e=>{const t=[{filename:"DEMO_UK.ABA",type:i.ResourceType.kResourceTypeDOS,name:"DOS (Demo)"},{filename:"INTRO.SEQ",type:i.ResourceType.kResourceTypeDOS,name:"DOS CD"},{filename:"MENU1SSI.MAP",type:i.ResourceType.kResourceTypeDOS,name:"DOS SSI"},{filename:"LEVEL1.MAP",type:i.ResourceType.kResourceTypeDOS,name:"DOS"},{filename:"LEVEL1.BNQ",type:i.ResourceType.kResourceTypeDOS,name:"DOS (Demo)"},{filename:"LEVEL1.LEV",type:i.ResourceType.kResourceTypeAmiga,name:"Amiga"},{filename:"DEMO.LEV",type:i.ResourceType.kResourceTypeAmiga,name:"Amiga (Demo)"},{filename:"FLASHBACK.BIN",type:i.ResourceType.kResourceTypeMac,name:"Macintosh"},{filename:"FLASHBACK.RSRC",type:i.ResourceType.kResourceTypeMac,name:"Macintosh"}];for(let s=0;s<t.length;++s){const i=new _.File;if(await i.open(t[s].filename,"rb",e))return console.log(`Detected ${t[s].name} version`),t[s].type}return-1})(p);if(-1===d)throw"Unable to find data files, check that all required files are present";console.log("version",d);const f=-1===c?await(async e=>{const t=[{filename:"ENGCINE.TXT",language:i.Language.LANG_EN},{filename:"FR_CINE.TXT",language:i.Language.LANG_FR},{filename:"GERCINE.TXT",language:i.Language.LANG_DE},{filename:"SPACINE.TXT",language:i.Language.LANG_SP},{filename:"ITACINE.TXT",language:i.Language.LANG_IT},{filename:"FRCINE.TXT",language:i.Language.LANG_FR}];for(let s=0;t[s].filename;++s){const i=new _.File;if(await i.open(t[s].filename,"rb",e))return t[s].language}return console.warn("Unable to detect language, defaults to English"),i.Language.LANG_EN})(p):c,y=new r.SystemStub,m=new o.Game(y,p,".",s,d,f,l,!1);await y.init("REminiscence",m._vid._w,m._vid._h,!1,l,h),await m.run()};document.getElementById("play").addEventListener("click",(()=>{document.querySelector(".intro").style.display="none",document.querySelector(".main").classList.add("visible"),l()}))},2:function(e,t,s){var i,r,_;t.__esModule=!0,function(e){e[e.kResourceTypeAmiga=0]="kResourceTypeAmiga",e[e.kResourceTypeDOS=1]="kResourceTypeDOS",e[e.kResourceTypeMac=2]="kResourceTypeMac"}(i||(i={})),function(e){e[e.LANG_FR=0]="LANG_FR",e[e.LANG_EN=1]="LANG_EN",e[e.LANG_DE=2]="LANG_DE",e[e.LANG_SP=3]="LANG_SP",e[e.LANG_IT=4]="LANG_IT",e[e.LANG_JP=5]="LANG_JP"}(r||(r={})),function(e){e[e.kWidescreenNone=0]="kWidescreenNone",e[e.kWidescreenAdjacentRooms=1]="kWidescreenAdjacentRooms",e[e.kWidescreenMirrorRoom=2]="kWidescreenMirrorRoom",e[e.kWidescreenBlur=3]="kWidescreenBlur"}(_||(_={}));class a{constructor(e,t=0){this.buffer=e,this.offset=t}from(e){return new a(this.buffer,e+this.offset)}getUint8Array(){return new Uint8Array(this.buffer,this.offset)}}t.CreateObj=()=>({type:0,dx:0,dy:0,init_obj_type:0,opcode1:0,opcode2:0,flags:0,opcode3:0,init_obj_number:0,opcode_arg1:0,opcode_arg2:0,opcode_arg3:0}),t.CreatePGE=()=>({obj_type:0,pos_x:0,pos_y:0,anim_seq:0,room_location:0,life:0,counter_value:0,collision_slot:0,next_inventory_PGE:0,current_inventory_PGE:0,unkF:0,anim_number:0,flags:0,index:0,first_obj_number:0,next_PGE_in_room:null,init_PGE:null}),t.CreateInitPGE=()=>({type:0,pos_x:0,pos_y:0,obj_node_number:0,life:0,counter_values:[],object_type:0,init_room:0,room_location:0,init_flags:0,colliding_icon_num:0,icon_num:0,object_id:0,skill:0,mirror_x:0,flags:0,unk1C:0,text_num:0}),t.createLivePGE=()=>({obj_type:0,pos_x:0,pos_y:0,anim_seq:0,room_location:0,life:0,counter_value:0,collision_slot:0,next_inventory_PGE:0,current_inventory_PGE:0,unkF:0,anim_number:0,flags:0,index:0,first_obj_number:0,next_PGE_in_room:null,init_PGE:null}),t.ResourceType=i,t.Language=r,t.WidescreenMode=_,t.Skill={kSkillEasy:0,kSkillNormal:1,kSkillExpert:2},t.AnimBuffers=class{constructor(){this._states=[null,null,null,null],this._curPos=[0,0,0,0]}addState(e,t,s,i,r,_=0,a=0){if(e>=4)throw`Assertion failed: ${e} < 4`;const o=this._curPos[e],n=255===o?0:o+1,l=this._states[e][n];l.x=t,l.y=s,l.w=_,l.h=a,l.dataPtr=i,l.pge=r,this._curPos[e]=(this._curPos[e]+1)%256}},t.READ_BE_UINT16=(e,t=0)=>{if(e instanceof Uint8Array)return e[t]<<8|e[1+t];const s=e instanceof a?new DataView(e.buffer,e.offset+t):new DataView(e,t);return s.getUint8(0)<<8|s.getUint8(1)},t.READ_BE_UINT32=(e,t=0)=>{if(e instanceof Uint8Array)return(e[t]<<24|e[1+t]<<16|e[2+t]<<8|e[3+t])>>>0;const s=e instanceof a?new DataView(e.buffer,e.offset+t):new DataView(e,t);return(s.getUint8(0)<<24|s.getUint8(1)<<16|s.getUint8(2)<<8|s.getUint8(3))>>>0},t.READ_LE_UINT16=(e,t=0)=>{if(e instanceof Uint8Array)return e[1+t]<<8|e[t];const s=e instanceof a?new DataView(e.buffer,e.offset+t):new DataView(e,t);return s.getUint8(1)<<8|s.getUint8(0)},t.READ_LE_UINT32=(e,t=0)=>{if(e instanceof Uint8Array)return(e[3+t]<<24|e[2+t]<<16|e[1+t]<<8|e[t])>>>0;const s=e instanceof a?new DataView(e.buffer,e.offset+t):new DataView(e,t);return(s.getUint8(3)<<24|s.getUint8(2)<<16|s.getUint8(1)<<8|s.getUint8(0))>>>0},t.ARRAYSIZE=e=>e.length,t.CLIP=(e,t,s)=>e<t?t:e>s?s:e,t.Buffer=a,t.ADDC_S16=(e,t)=>((e+=t)<-32768?e=-32768:e>32767&&(e=32767),e),t.S8_to_S16=e=>{if(e<-128)return-32768;if(e>127)return 32767;{const t=128^e;return(t<<8|t)-32768}}},3:function(e,t,s){t.__esModule=!0;var i=e(2),r=e(8);const _={type:r.ScalerType.kScalerTypeInternal,name:"",factor:r._internalScaler.factorMin+(r._internalScaler.factorMax-r._internalScaler.factorMin)/2};t.defaultScaleParameters=_,t.SystemStub=class{constructor(){this._events=new Array,this._rgbPalette=new Uint8ClampedArray(1024),this._darkPalette=new Uint8ClampedArray(1024),this.resumeAudio=()=>{this._audioContext&&"suspended"===this._audioContext.state&&this._audioContext.resume()},this.onKeyDown=e=>{const{key:t}=e;switch(this.resumeAudio(),t){case" ":this._pi.space=!0;break;case"o":case"O":case"Escape":this._pi.escape=!0;break;case"Enter":this._pi.enter=!0;break;case"ArrowLeft":this._pi.dirMask|=4;break;case"ArrowRight":this._pi.dirMask|=8;break;case"ArrowUp":this._pi.dirMask|=1;break;case"ArrowDown":this._pi.dirMask|=2;break;case"Shift":this._pi.shift=!0;break;case"Tab":case"Backspace":this._pi.backspace=!0}},this.onKeyUp=e=>{const{key:t}=e;switch(t){case" ":this._pi.space=!1;break;case"Escape":case"o":case"O":this._pi.escape=!1;break;case"Enter":this._pi.enter=!1;break;case"ArrowLeft":this._pi.dirMask&=-5;break;case"ArrowRight":this._pi.dirMask&=-9;break;case"ArrowUp":this._pi.dirMask&=-2;break;case"ArrowDown":this._pi.dirMask&=-3;break;case"Shift":this._pi.shift=!1;break;case"f":this.goFullscreen()}},this.goFullscreen=()=>{if(this._canvas){this._canvas.classList.add("fullscreen"),this._canvas.offsetWidth;try{this._canvas.requestFullscreen()}catch(e){this._canvas.webkitRequestFullscreen()}}},this.onKbEvent=e=>{e.preventDefault(),this._events.push(e)},this.updateCanvasCSS=()=>{document.fullscreenElement||document.webkitFullscreenElement?this._canvas.classList.add("fullscreen"):this._canvas.classList.remove("fullscreen")},this.processEvent=e=>{switch(e.type){case"keydown":this.onKeyDown(e);break;case"keyup":this.onKeyUp(e)}}}initCanvas(e,t){const s=document.getElementById("root");s.width=e,s.height=t,this._canvas=s,this._context=s.getContext("2d");const i=`\n\t\tcanvas{\n\t\t\twidth: ${2*e}px;\n\t\t\theight: ${2*t}px;\n\t\t\tbox-shadow: 10px 10px 68px 0px rgba(0,0,0,0.75);\n\t\t\tborder-radius: 4px;\n\t\t\taspect-ratio: attr(width) / attr(height);\n\t\t\tmargin: auto;\n    \t\tdisplay: block;\n\t\t}\n\t\t`,r=document.createElement("style");r.type="text/css",r.textContent=i,document.head.append(r)}async initAudio(){try{this._audioContext=new window.AudioContext,this._kAudioHz=this._audioContext.sampleRate,await this._audioContext.audioWorklet.addModule("js/processors.js");const e=this._audioContext.createBiquadFilter();e.frequency.value=22050,this._sfxPlayer=new AudioWorkletNode(this._audioContext,"sfx-processor",{outputChannelCount:[1],numberOfInputs:0,numberOfOutputs:1}),this._sfxPlayer.port.onmessage=this.onSFXProcessorMessage.bind(this),this._sfxPlayer.port.start(),this._audioPlayer=new AudioWorkletNode(this._audioContext,"sound-processor",{outputChannelCount:[1],numberOfInputs:1,numberOfOutputs:1}),this._audioPlayer.port.onmessage=this.onSoundProcessorMessage.bind(this),this._audioPlayer.port.start(),this._sfxPlayer.connect(this._audioPlayer),this._audioPlayer.connect(e),e.connect(this._audioContext.destination),this.postMessageToSoundProcessor({message:"init",mixingRate:this._kAudioHz}),this.postMessageToSFXProcessor({message:"init",mixingRate:this._kAudioHz})}catch(e){console.error("error setting up audio"),console.dir(e)}}onSoundProcessorMessage(e){console.log("Message from sound processor",e)}onSFXProcessorMessage(e){console.log("Message from sfx processor",e)}postMessageToSoundProcessor(e){this._audioPlayer?this._audioPlayer.port.postMessage(e):console.warn("Cannot send message to sound processor: not available")}postMessageToSFXProcessor(e){this._sfxPlayer?this._sfxPlayer.port.postMessage(e):console.warn("Cannot send message to sound processor: not available")}initEvents(){document.addEventListener("keyup",this.onKbEvent),document.addEventListener("keydown",this.onKbEvent),document.addEventListener("click",this.resumeAudio),document.addEventListener("dblclick",this.toggleFullscreen),document.addEventListener("fullscreenchange",this.updateCanvasCSS),document.addEventListener("webkitfullscreenchange",this.updateCanvasCSS)}async init(e,t,s,i,_,a){this.initCanvas(t,s),await this.initAudio(),this.initEvents(),this._scaleFactor=1,this._pi={dirMask:0,enter:!1,space:!1,shift:!1,backspace:!1,escape:!1,lastChar:"",save:!1,load:!1,stateSlot:0,rewind:!1,dbgMask:0,quit:!1},this._screenBuffer=null,this._fadeOnUpdateScreen=!1,this._fullscreen=i,this._scalerType=r.ScalerType.kScalerTypeInternal,this._scaleFactor=1,this._scaler=null,a.name.length&&this.setScaler(a),this._rgbPalette=new Uint8ClampedArray(1024),this._darkPalette=new Uint8ClampedArray(1024),this._screenW=this._screenH=0,this._widescreenMode=_,this._wideMargin=0,this._enableWidescreen=!1,this.setScreenSize(t,s),this._screenshot=1}setScaler(e){const t=[{name:"point",type:r.ScalerType.kScalerTypePoint,scaler:null},{name:"linear",type:r.ScalerType.kScalerTypeLinear,scaler:null},{name:"scale",type:r.ScalerType.kScalerTypeInternal,scaler:r._internalScaler}];let s=!1;for(let i=0;i<t.length;++i)if(t[i].name===e.name.toLowerCase()){this._scalerType=t[i].type,this._scaler=t[i].scaler,s=!0;break}if(!s)throw"systemStub_web::setScalers scaler not found!";this._scaleFactor=this._scaler?i.CLIP(e.factor,this._scaler.factorMin,this._scaler.factorMax):1}setScreenSize(e,t){if(this._screenW===e&&this._screenH===t)return;this.cleanupGraphics(),this._screenBuffer&&(this._screenBuffer=null);if(this._imageData=this._context.createImageData(e,t),this._screenBuffer=this._imageData.data,!this._screenBuffer)throw`SystemStub_Web::setScreenSize() Unable to allocate offscreen buffer, w=${e}, h=${t}`;this._screenW=e,this._screenH=t,this.prepareGraphics()}setPaletteColor(e,t,s,i){const r=4*e;this._rgbPalette[r]=t,this._rgbPalette[r+1]=s,this._rgbPalette[r+2]=i,this._rgbPalette[r+3]=255,this._darkPalette[r]=Math.floor(t/4),this._darkPalette[r+1]=Math.floor(s/4),this._darkPalette[r+2]=Math.floor(i/4),this._darkPalette[r+3]=255}setPalette(e,t){if(t>256)throw`Assertion failed: ${t} < 256`;let s=0;for(let i=0;i<t;++i)this.setPaletteColor(i,e[s],e[s+1],e[s+2]),s+=3}setPaletteEntry(e,t){this.setPaletteColor(e,t.r,t.g,t.b)}getPaletteEntry(e,t){const s=4*e;t.r=this._rgbPalette[s],t.g=this._rgbPalette[s+1],t.b=this._rgbPalette[s+2]}copyRect(e,t,s,i,r,_){if(e<0)e=0;else if(e>=this._screenW)return;if(t<0)t=0;else if(t>=this._screenH)return;e+s>this._screenW&&(s=this._screenW-e),t+i>this._screenH&&(i=this._screenH-t);const a=this._rgbPalette,o=this._screenBuffer;let n=4*e+t*this._screenW*4,l=t*_+e;for(let e=0;e<i;++e){for(let e=0;e<s;++e){const t=4*e,s=4*r[l+e];o[n+t]=a[s],o[n+t+1]=a[s+1],o[n+t+2]=a[s+2],o[n+t+3]=a[s+3]}n+=4*this._screenW,l+=_}if(2&this._pi.dbgMask)throw"not implemented!"}setOverscanColor(e){this._overscanColor=e}cleanupGraphics(){}prepareGraphics(){this._texW=this._screenW,this._texH=this._screenH;let e=this._screenW*this._scaleFactor,t=this._screenH*this._scaleFactor;if(this._widescreenMode!==i.WidescreenMode.kWidescreenNone&&(e=16*t/9),this._widescreenMode!==i.WidescreenMode.kWidescreenNone){const e=this._widescreenMode==i.WidescreenMode.kWidescreenBlur?this._screenW:16*this._screenH/9;this._screenH;this._wideMargin=(e-this._screenW)/2}}startAudio(e,t){console.log("SystemStub::startAudio not implemented!")}hasWidescreen(){return this._widescreenMode!==i.WidescreenMode.kWidescreenNone}enableWidescreen(e){this._enableWidescreen=e}fadeScreen(){this._fadeOnUpdateScreen=!0}copyRectRgb24(e,t,s,i,r){if(e<0||e+s>this._screenW||t<0||t+i>this._screenH)throw`Assertion failed: ${e} >= 0 && ${e+s} <= ${this._screenW} && ${t} >= 0 && ${t+i} <= ${this._screenH}`;const _=this._screenBuffer;let a=4*(t*this._screenW+e),o=0;for(let e=0;e<i;++e){for(let e=0;e<s;++e)_[a+4*e]=r[o+0],_[a+4*e+1]=r[o+1],_[a+4*e+2]=r[o+2],_[a+4*e+3]=255,o+=3;a+=4*this._screenW}2&this._pi.dbgMask&&this.drawRect(e,t,s,i,231)}async updateScreen(e){const t=this._context;let s;if(t.clearRect(0,0,this._screenW,this._screenH),this._widescreenMode!==i.WidescreenMode.kWidescreenNone)throw"not implemented!";if(this._fadeOnUpdateScreen){s={x:0,y:0,w:this._screenW,h:this._screenH};for(let e=1;e<=16;++e)this._context.fillStyle=`rgba(0,0,0, ${(256-16*e)/255})`,t.putImageData(this._imageData,s.x,s.y),t.fillRect(s.x,s.y,s.w,s.h),await this.sleep(15);this._fadeOnUpdateScreen=!1}else s={x:0,y:e*this._scaleFactor,w:this._screenW,h:this._screenH},t.putImageData(this._imageData,s.x,s.y)}getTimeStamp(){return(new Date).getTime()}async sleep(e){return new Promise((t=>setTimeout(t,e)))}clearWidescreen(){console.log("clearWidescreen does nothing")}async processEvents(){for(;;){for(;this._events.length;)if(this.processEvent(this._events.shift(),false),this._pi.quit)return;break}}getOutputSampleRate(){return this._kAudioHz}copyWidescreenLeft(e,t,s){}copyWidescreenRight(e,t,s){}copyWidescreenMirror(e,t,s){}copyWidescreenBlur(e,t,s){}drawRect(e,t,s,i,r){const _=e,a=t,o=e+s-1,n=t+i-1;if(_<0&&o>=this._screenW&&a<0&&n>=this._screenH)throw`Assertion failed: ${_} < 0 && ${o} >= ${this._screenW} && ${a} < 0 && ${n} >= ${this._screenH}`;for(let e=_;e<=o;++e)this._screenBuffer[4*(a*this._screenW+e)]=this._screenBuffer[4*(n*this._screenW+e)]=this._rgbPalette[4*r],this._screenBuffer[4*(a*this._screenW+e)+1]=this._screenBuffer[4*(n*this._screenW+e)+1]=this._rgbPalette[4*r+1],this._screenBuffer[4*(a*this._screenW+e)+2]=this._screenBuffer[4*(n*this._screenW+e)+2]=this._rgbPalette[4*r+2],this._screenBuffer[4*(a*this._screenW+e)+3]=this._screenBuffer[4*(n*this._screenW+e)+3]=this._rgbPalette[4*r+3];for(let e=a;e<=n;++e)this._screenBuffer[4*(e*this._screenW+_)]=this._screenBuffer[4*(e*this._screenW+o)]=this._rgbPalette[4*r],this._screenBuffer[4*(e*this._screenW+_)+1]=this._screenBuffer[4*(e*this._screenW+o)+1]=this._rgbPalette[4*r+1],this._screenBuffer[4*(e*this._screenW+_)+2]=this._screenBuffer[4*(e*this._screenW+o)+2]=this._rgbPalette[4*r+2],this._screenBuffer[4*(e*this._screenW+_)+3]=this._screenBuffer[4*(e*this._screenW+o)+3]=this._rgbPalette[4*r+3]}},t.DF_FASTMODE=1,t.DF_DBLOCKS=2,t.DF_SETLIFE=4,t.DIR_UP=1,t.DIR_LEFT=4,t.DIR_RIGHT=8,t.DIR_DOWN=2},4:function(e,t,s){var i;!function(e){e[e.END=0]="END",e[e.SET=1]="SET",e[e.CUR=2]="CUR"}(i||(i={}));class r{constructor(e){this._buf=e,this._len=this._buf.byteLength,this._pos=0}toString(){return new TextDecoder("utf-8").decode(new Uint8Array(this._buf))}ftell(){return this._pos}fseek(e,t){switch(t){case i.SET:e>=0&&(this._pos=e);break;case i.END:this._len+e>0&&(this._pos=this._len+e);break;case i.CUR:this._pos+e>0&&(this._pos+=e)}}fread(e,t,s){const i=t*s,r=Math.min(i,this._len-this._pos);new DataView(this._buf);return new Uint8Array(e,0,e.byteLength).set(new Uint8Array(this._buf,this._pos,r)),this._pos+=r,r}static async fopen(e,t){try{const t=await fetch(e),s=await t.arrayBuffer();return new r(s)}catch(s){return void console.error(`FILE_impl::open could not open file ${e} (${t})`)}}}t.FILE=r;class _{constructor(){this._fp=null}async open(e,t){this._ioErr=!1;try{return this._fp=await r.fopen(e,t),!0}catch(e){return!1}}close(){this._fp=null}size(){let e=0;if(this._fp){const t=this._fp,s=t.ftell();t.fseek(0,i.END),e=t.ftell(),t.fseek(s,i.SET)}return e}seek(e){this._fp&&this._fp.fseek(e,i.SET)}read(e,t){if(this._fp){const s=this._fp.fread(e,1,t);return s!==t&&(this._ioErr=!0),s}return 0}readString(e){if(this._fp){const t=new Uint8Array(e);this._fp.fread(t.buffer,1,e)!==e&&(this._ioErr=!0);return new TextDecoder("utf-8").decode(t).split("\0")[0]}return""}write(e,t){return console.warn("File_impl::write Write is not supported"),0}}t.StdioFile=_;class a{constructor(e){this._capacity=e,this._ptr=new ArrayBuffer(this._capacity),this._offset=this._len=0}open(e,t){return Promise.resolve(!1)}close(){}size(){return this._len}tell(){return this._offset}seek(e){this._offset=e}read(e,t){let s=t;return this._offset+s>this._len&&(s=this._len-this._offset,this._ioErr=!0),0!==s&&(new Uint8Array(e,0,e.byteLength).set(new Uint8Array(this._ptr,this._offset,s)),this._offset+=s),s}readString(){return""}write(e,t){let s=t;for(;this._offset+s>this._capacity;){const e=new ArrayBuffer(this._capacity);new Uint8Array(e).set(new Uint8Array(this._ptr)),this._ptr=e}return 0!==s&&(new Uint8Array(this._ptr,this._offset,s).set(new Uint8Array(e,0,s)),this._offset+=s),this._len=this._offset,s}}t.MemoryBufferFile=a;t.File=class{constructor(){this._impl=null}destructor(){this._impl&&(this._impl.close(),this._impl=null)}async open(e,t,s){if(this._impl&&(this._impl.close(),this._impl=null),"string"==typeof s){this._impl||(this._impl=new _);const i=`${s}/${e}`;return console.log(`Open file name '${e}' mode '${t}' path '${i}'`),this._impl.open(i,t)}{if("z"===t[0])throw'mode should not be "z"';this._impl=new _;const i=s.findPath(e);if(i){console.log(`Open file name '${e}' mode '${t}' path '${i}'`);return await this._impl.open(i,t)}return!1}}openMemoryBuffer(e){this._impl&&(this._impl.close(),this._impl=null),this._impl=new a(e)}close(){this._impl&&this._impl.close()}ioErr(){return this._impl._ioErr}size(){return this._impl.size()}seek(e){this._impl.seek(e)}read(e,t){return this._impl.read(e,t)}readString(e){return this._impl.readString(e)}readByte(){const e=new ArrayBuffer(1);return this.read(e,1),new Uint8Array(e)[0]}readUint16LE(){const e=this.readByte();return this.readByte()<<8|e}readUint32LE(){const e=this.readUint16LE();return this.readUint16LE()<<16|e}readUint16BE(){return this.readByte()<<8|this.readByte()}readUint32BE(){return this.readUint16BE()<<16|this.readUint16BE()}write(e,t){return this._impl.write(e,t)}writeByte(e){const t=new ArrayBuffer(1);new Uint8Array(t)[0]=e,this.write(t,1)}writeUint16LE(e){this.writeByte(255&e),this.writeByte(e>>8)}writeUint32LE(e){this.writeByte(65535&e),this.writeByte(e>>16)}writeUint16BE(e){this.writeByte(e>>8),this.writeByte(255&e)}writeUint32BE(e){this.writeByte(e>>16),this.writeByte(65535&e)}dumpFile(e,t,s){console.error("File::dumpFile NOT IMPLEMENTED!")}}},5:function(e,t,s){t.__esModule=!0;var i=e(4);class r{constructor(){this._dirsList=[],this._dirsCount=0,this._filesList=[],this._filesCount=0}async setRootDirectory(e){await this.getPathListFromDirectory(e),console.log(`Found ${this._filesCount} files and ${this._dirsCount} directories`)}findPathIndex(e){return this._filesList.findIndex((({name:t})=>e.toLowerCase()===t.toLowerCase()))}getPath(e){console.log("getPath",e,this._filesList);const t=this.findPathIndex(e);if(t>=0){const e=this._dirsList[this._filesList[t].dir];return console.log(`FileSystem_impl::getPath ${e}/${this._filesList[t].name}`),`${e}/${this._filesList[t].name}`}}addPath(e,t){let s=this._dirsList.findIndex((t=>e===t));-1===s&&(this._dirsList.push(e),s=this._dirsCount,++this._dirsCount),this._filesList.push({name:t,dir:s}),++this._filesCount}async getPathListFromDirectory(e){console.log(`getPathListFromDirectory(${e})`);try{const t=await i.FILE.fopen(`${e}/files.json`,"rb");console.log(t.toString());const s=JSON.parse(t.toString());console.log("files",s),s.forEach((t=>this.addPath(e,t)))}catch(t){console.error(`error getting files from ${e}/files.json`,t)}}}t.FileSystem_impl=r;t.FileSystem=class{constructor(e){if(void 0!==e)throw"should call setRootDirectory!";this._impl=new r}async setRootDirectory(e){await this._impl.setRootDirectory(e)}findPath(e){return this._impl.getPath(e)}exists(e){return this._impl.findPathIndex(e)>=0}}},6:function(e,t,s){t.__esModule=!0;var i=e(2),r=e(9),_=e(10),a=e(11),o=e(12),n=e(13),l=e(3),h=e(14),c=e(15),u=e(7),p=e(4),d=e(16);const f=64,y=128,m=192;class g{constructor(e,t,s,l,c,u,p,f){this._pge_opcodeTable=d._pge_opcodeTable,this._animBuffer0State=new Array(41).fill(null).map((()=>({x:0,y:0,w:0,h:0,dataPtr:null,pge:null}))),this._animBuffer1State=new Array(6).fill(null).map((()=>({x:0,y:0,w:0,h:0,dataPtr:null,pge:null}))),this._animBuffer2State=new Array(42).fill(null).map((()=>({x:0,y:0,w:0,h:0,dataPtr:null,pge:null}))),this._animBuffer3State=new Array(12).fill(null).map((()=>({x:0,y:0,w:0,h:0,dataPtr:null,pge:null}))),this._animBuffers=new i.AnimBuffers,this._pgeLive=new Array(256).fill(null).map((()=>i.createLivePGE())),this._pge_liveTable1=new Array(256),this._pge_liveTable2=new Array(256),this._pge_groups=new Array(256).fill(null).map((()=>({next_entry:null,index:0,group_id:0}))),this._pge_groupsTable=new Array(256),this._col_slotsTable=new Array(256),this._col_slots=new Array(256).fill(null).map((()=>({ct_pos:0,prev_slot:null,live_pge:null,index:0}))),this._col_slots2=new Array(256).fill(null).map((()=>({next_slot:null,unk2:null,data_size:0,data_buf:new Uint8Array(16)}))),this._col_activeCollisionSlots=new Uint8Array(144),this._res=new a.Resource(t,c,u),this._vid=new n.Video(this._res,e,p),this._cut=new r.Cutscene(this._res,e,this._vid),this._menu=new h.Menu(this._res,e,this._vid),this._mix=new _.Mixer(t,e),this._seq=new o.SeqPlayer(e,this._mix),this._stub=e,this._fs=t,this._savePath=s,this._stateSlot=1,this._inp_demPos=0,this._skillLevel=this._menu._skill=i.Skill.kSkillNormal,this._currentLevel=this._menu._level=l,this._demoBin=-1,this._widescreenMode=p,this._autoSave=f,this._rewindPtr=-1,this._rewindLen=0}pge_loadForCurrentLevel(e){const t=this._pgeLive[e],s=this._res._pgeInit[e];t.init_PGE=s,t.obj_type=s.type,t.pos_x=s.pos_x,t.pos_y=s.pos_y,t.anim_seq=0,t.room_location=s.init_room,t.life=s.life,this._skillLevel>=2&&10===s.object_type&&(t.life*=2),t.counter_value=0,t.collision_slot=255,t.next_inventory_PGE=255,t.current_inventory_PGE=255,t.unkF=255,t.anim_number=0,t.index=e,t.next_PGE_in_room=null;let i=0;if(s.skill<=this._skillLevel){if((0!==s.room_location||4&s.flags&&this._currentRoom===s.init_room)&&(i|=4,this._pge_liveTable2[e]=t),0!==s.mirror_x&&(i|=1),8&s.init_flags&&(i|=16),i|=(3&s.init_flags)<<5,2&s.flags&&(i|=128),t.flags=i,s.obj_node_number>=this._res._numObjectNodes)throw`Assertion failed: ${s.obj_node_number} < ${this._res._numObjectNodes}}`;const r=this._res._objectNodesMap[s.obj_node_number];let _=0,a=0;for(;r.objects[_].type!==t.obj_type;)++a,++_;if(a>=r.num_objects)throw`Assertion failed: ${a} < ${r.num_objects}`;t.first_obj_number=a,this.pge_setupDefaultAnim(t)}}pge_setupDefaultAnim(e){const t=this._res.getAniData(e.obj_type);e.anim_seq<this._res._readUint16(t)&&(e.anim_seq=0);const s=t.subarray(6+4*e.anim_seq);if(65535!==this._res._readUint16(s)){let i=this._res._readUint16(t);1&e.flags&&(i^=32768),e.flags&=-3,32768&i&&(e.flags|=2),e.flags&=-9,65535&this._res._readUint16(t,4)&&(e.flags|=8),e.anim_number=32767&this._res._readUint16(s)}}handleProtectionScreenShape(){throw"handleProtectionScreenShape not implemented!"}displayTitleScreenMac(e){throw"displayTitleScreenMac not implemented!"}displayTitleScreenAmiga(){throw"displayTitleScreenAmigz not implemented!"}async playCutscene(e=-1){if(-1!==e&&(this._cut._id=e),-1!==this._cut._id){if(this._stub.hasWidescreen()&&this._stub.enableWidescreen(!1),this._mix.stopMusic(),this._res._hasSeqData){let e=0;switch(this._cut._id){case 2:e=[1,2,1,3,3,4,4][this._currentLevel];break;case 5:e=[1,2,3,5,5,4,4][this._currentLevel];break;case 10:e=[1,2,2,2,2,2,2][this._currentLevel];break;case 16:e=[1,1,1,2,2,3,3][this._currentLevel];break;case 60:e=[1,1,1,1,1,2,2][this._currentLevel];break;case 64:return void console.log("Hooo doing nothing!");case 74:return}if(o.SeqPlayer._namesTable[this._cut._id]){let t=o.SeqPlayer._namesTable[this._cut._id]+".SEQ";if(t.match(/0/)&&(t+=e),await this.playCutsceneSeq(t))return void(61===this._cut._id?(await this.playCutsceneSeq("CREDITS.SEQ"),this._cut._interrupted=!1):this._cut._id=65535)}}if(74!==this._cut._id&&this._mix.playMusic(r.Cutscene._musicTable[this._cut._id]),await this._cut.play(),13===e&&!this._cut._interrupted){(this._res._type===i.ResourceType.kResourceTypeDOS||this._res._type===i.ResourceType.kResourceTypeMac)&&(this._cut._id=74,await this._cut.play())}if(this._res._type===i.ResourceType.kResourceTypeMac&&72!==e&&73!==e){const e=new Array(32);this._res.MAC_copyClut16(e,0,55),this._res.MAC_copyClut16(e,1,56);for(let t=0;t<32;++t)this._stub.setPaletteEntry(192+t,e[t])}61===e&&await this._cut.playCredits(),this._mix.stopMusic(),this._stub.hasWidescreen()&&this._stub.enableWidescreen(!0)}}handleProtectionScreenWords(){return!0}async runLoop(){await this.mainLoop(),-1!==this._demoBin&&this._inp_demPos>=this._res._demLen&&(this._demoBin=-1,this._endLoop=!0),this._stub._pi.quit||this._endLoop?this.renderDone():requestAnimationFrame((()=>this.runLoop()))}async run(){switch(this._randSeed=(new Date).getTime(),await this._res.init(),this._res.load_TEXT(),this._res._type){case i.ResourceType.kResourceTypeAmiga:await this._res.load("FONT8",a.ObjectType.OT_FNT),this._res._isDemo&&(this._cut._patchedOffsetsTable=r.Cutscene._amigaDemoOffsetsTable);break;case i.ResourceType.kResourceTypeDOS:await this._res.load("FB_TXT",a.ObjectType.OT_FNT),u.g_options.use_seq_cutscenes&&(this._res._hasSeqData=this._fs.exists("INTRO.SEQ")),this._fs.exists("logosssi.cmd")&&(this._cut._patchedOffsetsTable=r.Cutscene._ssiOffsetsTable);break;case i.ResourceType.kResourceTypeMac:await this._res.MAC_loadClutData(),await this._res.MAC_loadFontData()}if(!u.g_options.bypass_protection&&!u.g_options.use_words_protection&&!this._res.isMac())for(;!this.handleProtectionScreenShape();)if(this._stub._pi.quit)return;switch(this._mix.init(),this._mix._mod._isAmiga=this._res.isAmiga(),this._res.isMac()&&(this.displayTitleScreenMac(h.Menu.kMacTitleScreen_MacPlay),this._stub._pi.quit||this.displayTitleScreenMac(h.Menu.kMacTitleScreen_Presage)),await this.playCutscene(64),await this.playCutscene(13),this._res._type){case i.ResourceType.kResourceTypeAmiga:await this._res.load("ICONE",a.ObjectType.OT_ICN,"SPR"),await this._res.load("ICON",a.ObjectType.OT_ICN,"SPR"),await this._res.load("PERSO",a.ObjectType.OT_SPM);break;case i.ResourceType.kResourceTypeDOS:await this._res.load("GLOBAL",a.ObjectType.OT_ICN),await this._res.load("GLOBAL",a.ObjectType.OT_SPC),await this._res.load("PERSO",a.ObjectType.OT_SPR),await this._res.load_SPR_OFF("PERSO",this._res._spr1),await this._res.load_FIB("GLOBAL");break;case i.ResourceType.kResourceTypeMac:}if(!u.g_options.bypass_protection&&u.g_options.use_words_protection&&this._res.isDOS())for(;!this.handleProtectionScreenWords();)if(this._stub._pi.quit)return;const e=this._res._type!=i.ResourceType.kResourceTypeDOS||this._res.fileExists("MENU1.MAP");for(;!this._stub._pi.quit;){if(e)switch(this._mix.playMusic(1),this._res._type){case i.ResourceType.kResourceTypeDOS:if(await this._menu.handleTitleScreen(),this._menu._selectedOption==h.Menu.MENU_OPTION_ITEM_QUIT||this._stub._pi.quit){this._stub._pi.quit=!0;break}if(this._menu._selectedOption===h.Menu.MENU_OPTION_ITEM_DEMO){this._demoBin=(this._demoBin+1)%g._demoInputs.length;const e=g._demoInputs[this._demoBin].name;if(await this._res.load_DEM(e),0===this._res._demLen)continue;this._skillLevel=i.Skill.kSkillNormal,this._currentLevel=g._demoInputs[this._demoBin].level,this._randSeed=0,this._mix.stopMusic();break}this._demoBin=-1,this._skillLevel=this._menu._skill,this._currentLevel=this._menu._level,this._mix.stopMusic();break;case i.ResourceType.kResourceTypeAmiga:this.displayTitleScreenAmiga(),this._stub.setScreenSize(n.Video.GAMESCREEN_W,n.Video.GAMESCREEN_H);break;case i.ResourceType.kResourceTypeMac:this.displayTitleScreenMac(h.Menu.kMacTitleScreen_Flashback)}if(this._stub._pi.quit)break;this._stub.hasWidescreen()&&this._stub.clearWidescreen(),7===this._currentLevel?(await this._vid.fadeOut(),this._vid.setTextPalette(),await this.playCutscene(61)):(this._vid.setTextPalette(),this._vid.setPalette0xF(),this._stub.setOverscanColor(224),this._vid._unkPalSlot1=0,this._vid._unkPalSlot2=0,this._score=0,this.clearStateRewind(),await this.loadLevelData(),this.resetGameState(),this._endLoop=!1,this._frameTimestamp=this._stub.getTimeStamp(),this._saveTimestamp=this._frameTimestamp,this.renders=0,this.debugStartFrame=10650,this.renderPromise=new Promise((e=>{this.renderDone=e})),new Promise((()=>requestAnimationFrame((()=>this.runLoop())))),await this.renderPromise,this._stub._pi.dirMask=0,this._stub._pi.enter=!1,this._stub._pi.space=!1,this._stub._pi.shift=!1)}}async showFinalScore(){this._stub.hasWidescreen()&&this._stub.clearWidescreen(),await this.playCutscene(73);const e=this._score.toString().padStart(8,"0");this._vid.drawString(e,(n.Video.GAMESCREEN_W-e.length*n.Video.CHAR_W)/2,40,229);const t=this._menu.getLevelPassword(7,this._skillLevel);for(this._vid.drawString(t,(n.Video.GAMESCREEN_W-t.length*n.Video.CHAR_W)/2,16,231);!this._stub._pi.quit;){if(this._stub.copyRect(0,0,this._vid._w,this._vid._h,this._vid._frontLayer,this._vid._w),await this._stub.updateScreen(0),this._stub.processEvents(),this._stub._pi.enter){this._stub._pi.enter=!1;break}this._stub.sleep(100)}}pge_removeFromGroup(e){let t=this._pge_groupsTable[e];if(t){this._pge_groupsTable[e]=null;let s=this._pge_nextFreeGroup;for(;t;){const e=t.next_entry;t.next_entry=s,t.index=0,t.group_id=0,s=t,t=e}this._pge_nextFreeGroup=s}}pge_execute(e,t,s){let i,r={pge:null,a:0,b:0};if(s.opcode1){if(r.pge=e,r.a=s.opcode_arg1,r.b=0,this.renders>this.debugStartFrame&&console.log(`pge_execute op1=0x${s.opcode1.toString(16)}`),i=this._pge_opcodeTable[s.opcode1],!i)throw`Game::pge_execute() missing call to pge_opcode 0x${s.opcode1.toString(16)}`;if(!(255&i(r,this)))return 0}if(s.opcode2){r.pge=e,r.a=s.opcode_arg2,r.b=s.opcode_arg1,this.renders>this.debugStartFrame&&console.log(`pge_execute op2=0x${s.opcode2.toString(16)}`);let t=this._pge_opcodeTable[s.opcode2];if(!t)return console.warn(`Game::pge_execute() missing call to pge_opcode 0x${s.opcode2.toString(16)}`),0;if(!(255&t(r,this)))return 0}return s.opcode3&&(r.pge=e,r.a=s.opcode_arg3,r.b=0,this.renders>this.debugStartFrame&&console.log(`pge_execute op3=0x${s.opcode3.toString(16)}`),i=this._pge_opcodeTable[s.opcode3],i?i(r,this):console.warn(`Game::pge_execute() missing call to pge_opcode 0x${s.opcode3.toString(16)}`)),e.obj_type=s.init_obj_type,e.first_obj_number=s.init_obj_number,e.anim_seq=0,240&s.flags&&(this._score+=g._scoreTable[s.flags>>4]),1&s.flags&&(e.flags^=1),2&s.flags&&(--e.life,1===t.object_type?this._pge_processOBJ=!0:10===t.object_type&&(this._score+=100)),4&s.flags&&++e.life,8&s.flags&&(e.life=-1),1&e.flags?e.pos_x-=s.dx:e.pos_x+=s.dx,e.pos_y+=s.dy,this._pge_processOBJ&&1===t.object_type&&0!==this.pge_processOBJ(e)&&(this._blinkingConradCounter=60,this._pge_processOBJ=!1),65535}pge_processOBJ(e){const t=e.init_PGE;if(t.obj_node_number>=this._res._numObjectNodes)throw`Assertion failed: ${t.obj_node_number} < ${this._res._numObjectNodes}`;const s=this._res._objectNodesMap[t.obj_node_number];let i=e.first_obj_number,r=s.objects[i],_=e.first_obj_number;for(;_<s.last_obj_number&&e.obj_type===r.type;){if(107===r.opcode2)return 65535;if(34===r.opcode2&&r.opcode_arg2<=4)return 65535;if(107===r.opcode1)return 65535;if(34===r.opcode1&&r.opcode_arg1<=4)return 65535;i++,r=s.objects[i],++_}return 0}pge_reorderInventory(e){if(255!==e.unkF){const t=this._pgeLive[e.unkF],s=this.pge_getInventoryItemBefore(t,e);s===t?s.current_inventory_PGE===e.index&&this.pge_removeFromInventory(s,e,t):s.next_inventory_PGE===e.index&&this.pge_removeFromInventory(s,e,t)}}pge_updateInventory(e,t){255!==t.unkF&&this.pge_reorderInventory(t);const s=this.pge_getInventoryItemBefore(e,null);this.pge_addToInventory(s,t,e)}pge_updateGroup(e,t,s){let i=this._pgeLive[t];if(!(4&i.flags)){if(!(1&i.init_PGE.flags))return;i.flags|=4,this._pge_liveTable2[t]=i}if(s<=4){const s=i.room_location;if(i=this._pgeLive[e],s!==i.room_location)return;if(0===t&&0!==this._blinkingConradCounter)return}const r=this._pge_nextFreeGroup;if(r){this._pge_nextFreeGroup=r.next_entry;const i=this._pge_groupsTable[t];this._pge_groupsTable[t]=r,r.next_entry=i,r.index=e,r.group_id=s}}pge_process(e){this._pge_playAnimSound=!0,this._pge_currentPiegeFacingDir=0!=(1&e.flags),this._pge_currentPiegeRoom=e.room_location;const t=this._pge_groupsTable[e.index];this.renders>this.debugStartFrame&&console.log(`_pge_currentPiegeFacingDir=${this._pge_currentPiegeFacingDir} _pge_currentPiegeRoom=${this._pge_currentPiegeRoom} le=${t}`),t&&this.pge_setupNextAnimFrame(e,t);let s=this._res.getAniData(e.obj_type);if(this.renders>this.debugStartFrame&&console.log(`read=${this._res._readUint16(s)} anim_seq=${e.anim_seq}`),this._res._readUint16(s)<=e.anim_seq){this.renders>this.debugStartFrame&&console.log("if");const t=e.init_PGE;if(t.obj_node_number>=this._res._numObjectNodes)throw`Assertion failed: ${t.obj_node_number} < ${this._res._numObjectNodes}`;let i;i=this._res._objectNodesMap[t.obj_node_number];let r=e.first_obj_number,_=i.objects[r],a=0;for(;;){if(this.renders>this.debugStartFrame&&console.log(`** pge_process(${a++})`),_.type!==e.obj_type)return this.renders>this.debugStartFrame&&console.log("exiting pge_process loop: removing",e.index),void this.pge_removeFromGroup(e.index);let o=this.pge_execute(e,t,_);if(this._res.isDOS()&&(6!==this._currentLevel||50!==this._currentRoom&&51!==this._currentRoom||79===e.index&&65535===o&&96===_.opcode1&&0===_.opcode2&&0===_.opcode3&&this.col_getGridPos(this._pgeLive[79],0)===this.col_getGridPos(this._pgeLive[0],0)&&this.pge_updateGroup(79,0,4)),0!==o){this.renders>this.debugStartFrame&&console.log("exiting pge_process loop setup other pieges"),s=this._res.getAniData(e.obj_type);const i=s[2];i&&this.pge_playAnimSound(e,i),this.pge_setupOtherPieges(e,t);break}++r,_=i.objects[r]}}else this.renders>this.debugStartFrame&&console.log("else");this.pge_setupAnim(e),++e.anim_seq,this.pge_removeFromGroup(e.index)}pge_setupAnim(e){const t=this._res.getAniData(e.obj_type);this._res._readUint16(t)<e.anim_seq&&(e.anim_seq=0);const s=t.subarray(6+4*e.anim_seq);if(65535!==this._res._readUint16(s)){let i=this._res._readUint16(s);1&e.flags?(i^=32768,e.pos_x=e.pos_x-(s[2]<<24>>24)):e.pos_x=e.pos_x+(s[2]<<24>>24),e.pos_y=e.pos_y+(s[3]<<24>>24),e.flags&=-3,32768&i&&(e.flags|=2),e.flags&=-9,65535&this._res._readUint16(t,4)&&(e.flags|=8),e.anim_number=32767&this._res._readUint16(s)}}pge_setupOtherPieges(e,t){let s=null;if(e.pos_x<=-10?(e.pos_x+=256,s=this._res._ctData.subarray(m)):e.pos_x>=256?(e.pos_x-=256,s=this._res._ctData.subarray(y)):e.pos_y<0?(e.pos_y+=216,s=this._res._ctData.subarray(0)):e.pos_y>=216&&(e.pos_y-=216,s=this._res._ctData.subarray(f)),s){let i=e.room_location<<24>>24;if(i>=0&&(i=s[i],e.room_location=i),1===t.object_type&&(this._currentRoom=i,this.col_prepareRoomState(),this._loadMap=!0,!(128&this._currentRoom)&&this._currentRoom<64)){let e=this._pge_liveTable1[this._currentRoom];for(;e;)4&e.init_PGE.flags&&(this._pge_liveTable2[e.index]=e,e.flags|=4),e=e.next_PGE_in_room;if(i=this._res._ctData[0+this._currentRoom],i>=0&&i<64)for(e=this._pge_liveTable1[i];e;)10!==e.init_PGE.object_type&&e.pos_y>=48&&4&e.init_PGE.flags&&(this._pge_liveTable2[e.index]=e,e.flags|=4),e=e.next_PGE_in_room;if(i=this._res._ctData[f+this._currentRoom],i>=0&&i<64)for(e=this._pge_liveTable1[i];e;)10!==e.init_PGE.object_type&&e.pos_y>=176&&4&e.init_PGE.flags&&(this._pge_liveTable2[e.index]=e,e.flags|=4),e=e.next_PGE_in_room}}this.pge_addToCurrentRoomList(e,this._pge_currentPiegeRoom)}pge_addToCurrentRoomList(e,t){if(t!==e.room_location){let s=this._pge_liveTable1[t],i=null;for(;s&&s!==e;)i=s,s=s.next_PGE_in_room;if(s){i?i.next_PGE_in_room=s.next_PGE_in_room:this._pge_liveTable1[t]=e.next_PGE_in_room;const r=this._pge_liveTable1[e.room_location];e.next_PGE_in_room=r,this._pge_liveTable1[e.room_location]=e}}}playSound(e,t){if(e<this._res._numSfx){const s=this._res._sfxList[e];if(s.data){const e=_.MAX_VOLUME>>2*t;this._mix.play(s.data,s.len,s.freq,e)}}else 66===e||e>=68&&e<=75&&this._mix.playMusic(e)}pge_playAnimSound(e,t){if(4&e.flags&&this._pge_playAnimSound){const s=(255&t)-1;this._currentRoom===e.room_location?this.playSound(s,0):this._res._ctData[f+this._currentRoom]!==e.room_location&&this._res._ctData[0+this._currentRoom]!==e.room_location&&this._res._ctData[y+this._currentRoom]!==e.room_location&&this._res._ctData[m+this._currentRoom]!==e.room_location||this.playSound(s,1)}}pge_setupNextAnimFrame(e,t){const s=e.init_PGE;if(s.obj_node_number>=this._res._numObjectNodes)throw`Assertion failed: ${s.obj_node_number} < ${this._res._numObjectNodes}`;const i=()=>{const t=this._res.getAniData(e.obj_type);let s=255&this._res._readUint16(t),i=e.anim_seq;const r=t.subarray(6+4*i);let _=0;for(;s>i;)65535!=this._res._readUint16(r,_)&&(this._pge_currentPiegeFacingDir?e.pos_x=e.pos_x-(r[2+_]<<24>>24):e.pos_x=e.pos_x+(r[2+_]<<24>>24),e.pos_y=e.pos_y+(r[3+_]<<24>>24)),_+=4,++i;e.anim_seq=s,this._col_currentPiegeGridPosY=e.pos_y/36&-2,this._col_currentPiegeGridPosX=e.pos_x+8>>4},r=this._res._objectNodesMap[s.obj_node_number];let _=e.first_obj_number,a=r.objects[_],o=e.first_obj_number;for(;o<r.last_obj_number&&e.obj_type===a.type;){let e=t;for(;e;){let t=e.group_id;if(107===a.opcode2){if(0===a.opcode_arg2&&(1===t||2===t))return void i();if(1===a.opcode_arg2&&(3===t||4===t))return void i()}else if(t===a.opcode_arg2&&(34===a.opcode2||111===a.opcode2))return void i();if(107===a.opcode1){if(0===a.opcode_arg1&&(1===t||2===t))return void i();if(1===a.opcode_arg1&&(3===t||4===t))return void i()}else if(t===a.opcode_arg1&&(34===a.opcode1||111===a.opcode1))return void i();e=e.next_entry}++_,a=r.objects[_],++o}}drawIcon(e,t,s,r){const _=new Uint8Array(256);switch(this._res._type){case i.ResourceType.kResourceTypeAmiga:if(e>30)switch(e){case 76:_.fill(0);for(let e=0;e<3;++e)_[e]=_[15-e+240]=1,_[16*e]=_[16*(15-e)+15]=1;break;case 77:_.fill(0),this._vid.AMIGA_decodeIcn(this._res._icn,35,_);break;case 78:_.fill(0),this._vid.AMIGA_decodeIcn(this._res._icn,36,_);break;default:_.fill(5)}else this._vid.AMIGA_decodeIcn(this._res._icn,e,_);break;case i.ResourceType.kResourceTypeDOS:this._vid.PC_decodeIcn(this._res._icn,e,_);break;case i.ResourceType.kResourceTypeMac:switch(e){case 76:e=32;break;case 77:e=33;break;case 78:e=34}return void this._vid.MAC_drawSprite(t,s,this._res._icn,e,!1,!0)}this._vid.drawSpriteSub1(_,this._vid._frontLayer.subarray(t+s*this._vid._w),16,16,16,r<<4),this._vid.markBlockAsDirty(t,s,16,16,this._vid._layerScale)}drawCurrentInventoryItem(){const e=this._pgeLive[0].current_inventory_PGE;255!==e&&(this._currentIcon=this._res._pgeInit[e].icon_num,this.drawIcon(this._currentIcon,232,8,10))}col_findPiege(e,t){if(255!==e.collision_slot){let s=this._col_slotsTable[e.collision_slot];for(;s;)if(s.live_pge===e)s=s.prev_slot;else{if(65535===t||t===s.live_pge.init_PGE.object_type)return s.live_pge;s=s.prev_slot}}return null}col_findCurrentCollidingObject(e,t,s,i){const r={obj:0,pge_out:e};if(255!==e.collision_slot){let _=this._col_slotsTable[e.collision_slot];for(;_;){const e=_.live_pge;if(r.pge_out=e,e.init_PGE.object_type===t||e.init_PGE.object_type===s||e.init_PGE.object_type===i)return r.obj=e.init_PGE.colliding_icon_num,r;_=_.prev_slot}}return r}printSaveStateCompleted(){if(this._saveStateCompleted){const e=this._res.getMenuString(a.LocaleData.Id.LI_05_COMPLETED);this._vid.drawString(e,(176-e.length*n.Video.CHAR_W)/2>>0,34,230)}}drawLevelTexts(){const e=this._pgeLive[0];let{obj:t,pge_out:s}=this.col_findCurrentCollidingObject(e,3,255,255);if(0===t){const e=this.col_findCurrentCollidingObject(s,255,5,9);t=e.obj,s=e.pge_out}if(t>0)if(this._printLevelCodeCounter=0,65535===this._textToDisplay){const e=t-1;this.drawIcon(e,80,8,10);const i=s.init_PGE.text_num%256,r=this._res.getTextString(this._currentLevel,i);if(this.drawString(r,176,26,230,!0),2===e)return void this.printSaveStateCompleted()}else this._currentInventoryIconNum=t-1;this._saveStateCompleted=!1}async updateTiming(){const e=this._stub.getTimeStamp()-this._frameTimestamp;let t=this._stub._pi.dbgMask&l.DF_FASTMODE?20:1e3/30;t-=e,t>0&&await this._stub.sleep(t),this._frameTimestamp=this._stub.getTimeStamp()}saveGameState(e){}loadGameState(e){return!0}async handleContinueAbort(){this._stub.hasWidescreen()&&this._stub.clearWidescreen(),await this.playCutscene(72);let e=100,t=0;const s=[228,229];let i=255;const r={r:0,g:0,b:0};for(this._stub.getPaletteEntry(228,r),this._vid._tempLayer.set(this._vid._frontLayer.subarray(0,this._vid._layerSize));e>=0&&!this._stub._pi.quit;){let _=this._res.getMenuString(a.LocaleData.Id.LI_01_CONTINUE_OR_ABORT);this._vid.drawString(_,(n.Video.GAMESCREEN_W-_.length*n.Video.CHAR_W)/2>>0,64,227),_=this._res.getMenuString(a.LocaleData.Id.LI_02_TIME);let o=_+" : "+(e/10>>0);if(this._vid.drawString(o,96,88,227),_=this._res.getMenuString(a.LocaleData.Id.LI_03_CONTINUE),this._vid.drawString(_,(n.Video.GAMESCREEN_W-_.length*n.Video.CHAR_W)/2>>0,104,s[0]),_=this._res.getMenuString(a.LocaleData.Id.LI_04_ABORT),this._vid.drawString(_,(n.Video.GAMESCREEN_W-_.length*n.Video.CHAR_W)/2>>0,112,s[1]),o="SCORE  "+this._score.toString().padStart(8,"0"),this._vid.drawString(o,64,154,227),this._stub._pi.dirMask&l.DIR_UP&&(this._stub._pi.dirMask&=~l.DIR_UP,t>0)){const e=s[t];s[t]=s[t-1],s[t-1]=e,--t}if(this._stub._pi.dirMask&l.DIR_DOWN&&(this._stub._pi.dirMask&=~l.DIR_DOWN,t<1)){const e=s[t];s[t]=s[t+1],s[t+1]=e,++t}if(this._stub._pi.enter)return this._stub._pi.enter=!1,0==t;this._stub.copyRect(0,0,this._vid._w,this._vid._h,this._vid._frontLayer,this._vid._w),await this._stub.updateScreen(0);const h=8,c=16,u=240;r.b>=u?i=0:r.b<c&&(i=255),255==i?(r.b+=h,r.g+=h):(r.b-=h,r.g-=h),this._stub.setPaletteEntry(228,r),await this._stub.processEvents(),await this._stub.sleep(100),--e,this._vid._frontLayer.set(this._vid._tempLayer.subarray(0,this._vid._layerSize))}return!1}printLevelCode(){if(0!==this._printLevelCodeCounter&&(--this._printLevelCodeCounter,0!==this._printLevelCodeCounter)){const e="CODE: "+this._menu.getLevelPassword(this._currentLevel,this._skillLevel);this._vid.drawString(e,(n.Video.GAMESCREEN_W-e.length*n.Video.CHAR_W)/2>>0,16,231)}}static getLineLength(e){let t=0,s=0;for(;e[s]&&11!==e[s]&&10!==e[s];)++s,++t;return t}async drawStoryTexts(){if(65535!==this._textToDisplay){let e=232,t=this._res.getGameString(this._textToDisplay),s=0;this._vid._tempLayer.set(this._vid._frontLayer.subarray(0,this._vid._layerSize));let r=0,a=0;for(;!this._stub._pi.quit;){this.drawIcon(this._currentInventoryIconNum,80,8,10);let o=26;if(this._res._type==i.ResourceType.kResourceTypeMac);else{if(255===t[s])if(this._res._lang===i.Language.LANG_JP){switch(t[s+1]){case 0:e=233;break;case 1:e=235;break;default:console.warn(`Unhandled JP text color code 0x${t[s+1]}`)}s+=2}else e=t[s+1],s+=3;for(;;){const i=g.getLineLength(t),r=this._vid.drawString((new TextDecoder).decode(t).split("\0")[0],(176-i*n.Video.CHAR_W)/2>>0,o,e);t=new Uint8Array(r.length);for(let e=0;e<r.length;++e)t[e]=r.charCodeAt(e);if(s=0,0===t[s]||11===t[s])break;s++,o+=8}}let l=null,h=0;const c=await this._res.load_VCE(this._textToDisplay,r++);for(l=c.buf,h=c.bufSize,l&&this._mix.play(l,h,32e3,_.MAX_VOLUME),await this._vid.updateScreen();!this._stub._pi.backspace&&!this._stub._pi.quit&&(!l||this._mix.isPlaying(l));)await this.inp_update(),await this._stub.sleep(80);if(l&&this._mix.stopAll(),this._stub._pi.backspace=!1,this._res._type===i.ResourceType.kResourceTypeMac){if(r===a)break}else{if(0===t[s])break;s++}this._vid._frontLayer.set(this._vid._tempLayer.subarray(0,this._vid._layerSize))}this._textToDisplay=65535}}async mainLoop(){if(await this.playCutscene(),61===this._cut._id)return await this.showFinalScore(),void(this._endLoop=!0);if(this._deathCutsceneCounter&&(--this._deathCutsceneCounter,0===this._deathCutsceneCounter))return await this.playCutscene(this._cut._deathCutsceneId),void(await this.handleContinueAbort()?this._autoSave&&0!==this._rewindLen&&this.loadGameState(255)||this._validSaveState&&this.loadGameState(0)||(this.clearStateRewind(),await this.loadLevelData(),this.resetGameState()):(await this.playCutscene(65),this._endLoop=!0));this._vid._frontLayer.set(this._vid._backLayer.subarray(0,this._vid._layerSize)),await this.pge_getInput(),this.pge_prepare(),this.col_prepareRoomState();const e=this._currentLevel;this.renders>this.debugStartFrame&&console.log(`*** processing pge size=${this._res._pgeNum}`);for(let e=0;e<this._res._pgeNum;++e){const t=this._pge_liveTable2[e];this.renders>this.debugStartFrame&&console.log(`>> livePge[${e}]: 0x${t} anim_seq=${t?t.anim_seq:null} index=${t?t.index:null}`),t&&(this._col_currentPiegeGridPosY=t.pos_y/36>>0&-2,this._col_currentPiegeGridPosX=t.pos_x+8>>4,this.pge_process(t)),this.renders>this.debugStartFrame&&console.log("<< livePge END")}if(this.renders>this.debugStartFrame&&console.log(`*** end pge size=${this._res._pgeNum}`),e!=this._currentLevel)return this._res._isDemo&&(this._currentLevel=e),await this.changeLevel(),void(this._pge_opTempVar1=0);this._loadMap&&(255!==this._currentRoom&&this.hasLevelMap(this._currentLevel,this._pgeLive[0].room_location)?(this._currentRoom=this._pgeLive[0].room_location,await this.loadLevelMap(),this._loadMap=!1,this._vid.fullRefresh()):(this._cut._id=6,this._deathCutsceneCounter=1)),await this.prepareAnims(),await this.drawAnims(),this.renders++,this.drawCurrentInventoryItem(),this.drawLevelTexts(),u.g_options.enable_password_menu&&this.printLevelCode(),0!==this._blinkingConradCounter&&--this._blinkingConradCounter,await this._vid.updateScreen(),await this.updateTiming(),await this.drawStoryTexts(),this._stub._pi.backspace&&(this._stub._pi.backspace=!1,await this.handleInventory()),this._stub._pi.escape&&(this._stub._pi.escape=!1,-1!==this._demoBin||await this.handleConfigPanel())?this._endLoop=!0:(this.inp_handleSpecialKeys(),this._autoSave&&this._stub.getTimeStamp()-this._saveTimestamp>=5e3&&this._pgeLive[0].life>0&&0===this._deathCutsceneCounter&&(this.saveGameState(255),this._saveTimestamp=this._stub.getTimeStamp()))}async playCutsceneSeq(e){const t=new p.File;return!!await t.open(e,"rb",this._fs)&&(this._seq.setBackBuffer(this._res._scratchBuffer),this._seq.play(t),this._vid.fullRefresh(),!0)}inp_handleSpecialKeys(){if(this._stub._pi.dbgMask&l.DF_SETLIFE&&(this._pgeLive[0].life=32767),this._stub._pi.load&&(this.loadGameState(this._stateSlot),this._stub._pi.load=!1),this._stub._pi.save&&(this.saveGameState(this._stateSlot),this._stub._pi.save=!1),0!==this._stub._pi.stateSlot){let e=this._stateSlot+this._stub._pi.stateSlot;e>=1&&e<100&&(this._stateSlot=e,console.log(`Current game state slot is ${this._stateSlot}`)),this._stub._pi.stateSlot=0}this._stub._pi.rewind&&(0!==this._rewindLen?this.loadStateRewind():console.log("Rewind buffer is empty"),this._stub._pi.rewind=!1)}loadStateRewind(){const e=this._rewindPtr;0===this._rewindPtr?this._rewindPtr=119:--this._rewindPtr;const t=this._rewindBuffer[e];return t.seek(0),this.loadState(t),this._rewindLen>0&&--this._rewindLen,!t.ioErr()}loadState(e){}async handleConfigPanel(){const e=10,t=17,s=12;this._vid._charShadowColor=226,this._vid._charFrontColor=238,this._vid._charTransparentColor=255;const r=!0;switch(this._res._type){case i.ResourceType.kResourceTypeAmiga:for(let i=0;i<s;++i)for(let s=0;s<t;++s)this._vid.fillRect(n.Video.CHAR_W*(7+s),n.Video.CHAR_H*(e+i),n.Video.CHAR_W,n.Video.CHAR_H,226);break;case i.ResourceType.kResourceTypeDOS:this._vid.PC_drawChar(129,e,7,r),this._vid.PC_drawChar(130,e,24,r),this._vid.PC_drawChar(131,22,7,r),this._vid.PC_drawChar(132,22,24,r);for(let s=1;s<t;++s)this._vid.PC_drawChar(133,e,7+s,r),this._vid.PC_drawChar(136,22,7+s,r);for(let i=1;i<s;++i){this._vid._charTransparentColor=255,this._vid.PC_drawChar(134,e+i,7,r),this._vid.PC_drawChar(135,e+i,24,r),this._vid._charTransparentColor=226;for(let s=1;s<t;++s)this._vid.PC_drawChar(32,e+i,7+s,r)}break;case i.ResourceType.kResourceTypeMac:this._vid.MAC_drawStringChar(this._vid._frontLayer,this._vid._w,7*n.Video.CHAR_W,n.Video.CHAR_H*e,this._res._fnt,this._vid._charFrontColor,129),this._vid.MAC_drawStringChar(this._vid._frontLayer,this._vid._w,24*n.Video.CHAR_W,n.Video.CHAR_H*e,this._res._fnt,this._vid._charFrontColor,130),this._vid.MAC_drawStringChar(this._vid._frontLayer,this._vid._w,7*n.Video.CHAR_W,22*n.Video.CHAR_H,this._res._fnt,this._vid._charFrontColor,131),this._vid.MAC_drawStringChar(this._vid._frontLayer,this._vid._w,24*n.Video.CHAR_W,22*n.Video.CHAR_H,this._res._fnt,this._vid._charFrontColor,132);for(let s=1;s<t;++s)this._vid.MAC_drawStringChar(this._vid._frontLayer,this._vid._w,n.Video.CHAR_W*(7+s),n.Video.CHAR_H*e,this._res._fnt,this._vid._charFrontColor,133),this._vid.MAC_drawStringChar(this._vid._frontLayer,this._vid._w,n.Video.CHAR_W*(7+s),22*n.Video.CHAR_H,this._res._fnt,this._vid._charFrontColor,136);for(let i=1;i<s;++i){this._vid.MAC_drawStringChar(this._vid._frontLayer,this._vid._w,7*n.Video.CHAR_W,n.Video.CHAR_H*(e+i),this._res._fnt,this._vid._charFrontColor,134),this._vid.MAC_drawStringChar(this._vid._frontLayer,this._vid._w,24*n.Video.CHAR_W,n.Video.CHAR_H*(e+i),this._res._fnt,this._vid._charFrontColor,135);for(let s=1;s<t;++s)this._vid.fillRect(n.Video.CHAR_W*(7+s),n.Video.CHAR_H*(e+i),n.Video.CHAR_W,n.Video.CHAR_H,226)}}this._menu._charVar3=228,this._menu._charVar4=229,this._menu._charVar1=226,this._menu._charVar2=238,this._vid.fullRefresh();const _=[2,3,3,3];let o=0;for(;!this._stub._pi.quit;){this._menu.drawString(this._res.getMenuString(a.LocaleData.Id.LI_18_RESUME_GAME),12,9,_[0]),this._menu.drawString(this._res.getMenuString(a.LocaleData.Id.LI_19_ABORT_GAME),14,9,_[1]),this._menu.drawString(this._res.getMenuString(a.LocaleData.Id.LI_20_LOAD_GAME),16,9,_[2]),this._menu.drawString(this._res.getMenuString(a.LocaleData.Id.LI_21_SAVE_GAME),18,9,_[3]),this._vid.fillRect(8*n.Video.CHAR_W,20*n.Video.CHAR_H,15*n.Video.CHAR_W,n.Video.CHAR_H,226);const e=this._res.getMenuString(a.LocaleData.Id.LI_22_SAVE_SLOT)+" < "+this._stateSlot.toString().padStart(2,"0")+" >";this._menu.drawString(e,20,9,1),this._vid.updateScreen(),await this._stub.sleep(80),await this.inp_update();let t=o;if(this._stub._pi.dirMask&l.DIR_UP&&(this._stub._pi.dirMask&=~l.DIR_UP,o=(o+3)%4),this._stub._pi.dirMask&l.DIR_DOWN&&(this._stub._pi.dirMask&=~l.DIR_DOWN,o=(o+1)%4),this._stub._pi.dirMask&l.DIR_LEFT&&(this._stub._pi.dirMask&=~l.DIR_LEFT,--this._stateSlot,this._stateSlot<1&&(this._stateSlot=1)),this._stub._pi.dirMask&l.DIR_RIGHT&&(this._stub._pi.dirMask&=~l.DIR_RIGHT,++this._stateSlot,this._stateSlot>99&&(this._stateSlot=99)),t!==o){const e=_[t];_[t]=_[o],_[o]=e}if(this._stub._pi.enter){switch(this._stub._pi.enter=!1,o){case 2:this._stub._pi.load=!0;break;case 3:this._stub._pi.save=!0}break}if(this._stub._pi.escape){this._stub._pi.escape=!1;break}}return this._vid.fullRefresh(),1===o}drawString(e,t,s,r,_){let a=(new TextDecoder).decode(e).split("\0")[0],o=0;this._res._type===i.ResourceType.kResourceTypeMac?(o=e[0],a=a.substr(1)):o=a.length,_&&(t=(t-o*n.Video.CHAR_W)/2>>0),this._vid.drawStringLen(a,o,t,s,r)}async prepareAnims(){if(!(128&this._currentRoom)&&this._currentRoom<64){let e,t=this._pge_liveTable1[this._currentRoom];for(;t;)await this.prepareAnimsHelper(t,0,0),t=t.next_PGE_in_room;if(e=this._res._ctData[0+this._currentRoom],e>=0&&e<64)for(t=this._pge_liveTable1[e];t;)(10!==t.init_PGE.object_type&&t.pos_y>176||10===t.init_PGE.object_type&&t.pos_y>216)&&await this.prepareAnimsHelper(t,0,-216),t=t.next_PGE_in_room;if(e=this._res._ctData[f+this._currentRoom],e>=0&&e<64)for(t=this._pge_liveTable1[e];t;)t.pos_y<48&&await this.prepareAnimsHelper(t,0,216),t=t.next_PGE_in_room;if(e=this._res._ctData[m+this._currentRoom],e>=0&&e<64)for(t=this._pge_liveTable1[e];t;)t.pos_x>224&&await this.prepareAnimsHelper(t,-256,0),t=t.next_PGE_in_room;if(e=this._res._ctData[y+this._currentRoom],e>=0&&e<64)for(t=this._pge_liveTable1[e];t;)t.pos_x<=32&&await this.prepareAnimsHelper(t,256,0),t=t.next_PGE_in_room}}async prepareAnimsHelper(e,t,s){if(8&e.flags){let r=null;switch(this._res._type){case i.ResourceType.kResourceTypeAmiga:case i.ResourceType.kResourceTypeDOS:if(e.anim_number>=this._res._numSpc)throw`Assertion failed: ${e.anim_number} < ${this._res._numSpc}`;r=this._res._spc.subarray(i.READ_BE_UINT16(this._res._spc,2*e.anim_number));break;case i.ResourceType.kResourceTypeMac:}const _=t+e.pos_x+8,a=s+e.pos_y+2;11===e.init_PGE.object_type?this._animBuffers.addState(3,_,a,r,e):16&e.flags?this._animBuffers.addState(2,_,a,r,e):this._animBuffers.addState(0,_,a,r,e)}else{if(0!==e.index&&0===await this.loadMonsterSprites(e))return;let r=null,_=0,a=0;switch(this._res._type){case i.ResourceType.kResourceTypeAmiga:case i.ResourceType.kResourceTypeDOS:if(e.anim_number>=1287)throw`Assertion failed: ${e.anim_number} < 1287`;if(r=this._res._sprData[e.anim_number],null===r)return;_=r[0]<<24>>24,a=r[1]<<24>>24;break;case i.ResourceType.kResourceTypeMac:}let o=0,n=0;switch(this._res._type){case i.ResourceType.kResourceTypeAmiga:o=16*(1+(r[2]>>7)),n=127&r[2];break;case i.ResourceType.kResourceTypeDOS:o=r[2],n=r[3],r=r.subarray(4);break;case i.ResourceType.kResourceTypeMac:}let l=s+e.pos_y-a+2,h=t+e.pos_x-_;if(2&e.flags){h=_+t+e.pos_x;let s=o;64&s?s=n:s&=63,h-=s}if(h<=-32||h>=256||l<-48||l>=224)return;h+=8,e===this._pgeLive[0]?this._animBuffers.addState(1,h,l,r,e,o,n):16&e.flags?this._animBuffers.addState(2,h,l,r,e,o,n):this._animBuffers.addState(0,h,l,r,e,o,n)}}async drawAnims(){this._eraseBackground=!1,await this.drawAnimBuffer(2,this._animBuffer2State),await this.drawAnimBuffer(1,this._animBuffer1State),await this.drawAnimBuffer(0,this._animBuffer0State),this._eraseBackground=!0,await this.drawAnimBuffer(3,this._animBuffer3State)}async drawAnimBuffer(e,t){if(e>=4)throw`Assertion failed: ${e} < 4`;this._animBuffers._states[e]=t;const s=this._animBuffers._curPos[e];if(255!==s){let r=s,_=s+1;this._animBuffers._curPos[e]=255;do{const s=t[r].pge;if(8&s.flags)this.drawPiege(t[r]);else{if(1===e&&1&this._blinkingConradCounter)break;switch(this._res._type){case i.ResourceType.kResourceTypeAmiga:this._vid.AMIGA_decodeSpm(t[r].dataPtr,this._res._scratchBuffer),this.drawCharacter(this._res._scratchBuffer,t[r].x,t[r].y,t[r].h,t[r].w,s.flags);break;case i.ResourceType.kResourceTypeDOS:const e=t[r].dataPtr;128&new DataView(e.buffer,e.byteOffset-2).getUint8(0)?this.drawCharacter(t[r].dataPtr,t[r].x,t[r].y,t[r].h,t[r].w,s.flags):(this._vid.PC_decodeSpm(t[r].dataPtr,this._res._scratchBuffer),this.drawCharacter(this._res._scratchBuffer,t[r].x,t[r].y,t[r].h,t[r].w,s.flags));break;case i.ResourceType.kResourceTypeMac:this.drawPiege(t[r])}}r--}while(0!=--_)}}drawPiege(e){const t=e.pge;switch(this._res._type){case i.ResourceType.kResourceTypeAmiga:case i.ResourceType.kResourceTypeDOS:this.drawObject(e.dataPtr,e.x,e.y,t.flags);break;case i.ResourceType.kResourceTypeMac:if(8&t.flags)this._vid.MAC_drawSprite(e.x,e.y,this._res._spc,t.anim_number,0!=(2&t.flags),this._eraseBackground);else if(0===t.index){if(902===t.anim_number)break;const s=this._res.MAC_getPersoFrame(t.anim_number);this._vid.MAC_drawSprite(e.x,e.y,this._res._perso,s,0!=(2&t.flags),this._eraseBackground)}else{const s=this._res.MAC_getMonsterFrame(t.anim_number);this._vid.MAC_drawSprite(e.x,e.y,this._res._monster,s,0!=(2&t.flags),this._eraseBackground)}}}drawObject(e,t,s,r){if(e[0]>=74)throw`Assertion failed: ${e[0]} < 0x4A`;const _=this._res._rp[e[0]];let a=this._res.findBankData(_);null===a&&(a=this._res.loadBankData(_));let o=s-(e[2]<<24>>24),n=t;2&r?n+=e[1]<<24>>24:n-=e[1]<<24>>24;let l=0;switch(this._res._type){case i.ResourceType.kResourceTypeAmiga:l=e[8],e=e.subarray(9);break;case i.ResourceType.kResourceTypeDOS:l=e[5],e=e.subarray(6);break;case i.ResourceType.kResourceTypeMac:}for(let t=0;t<l;++t)this.drawObjectFrame(a,e,n,o,r),e=e.subarray(4)}drawObjectFrame(e,t,s,r,_){let a,o=e.byteOffset+32*t[0],n=r+t[2];a=2&_?s-t[1]-2*(4+(12&t[3])):s+t[1];let l=t[3];2&_&&(l^=16);const h=8*(1+(l>>0&3));let c=8*(1+(l>>2&3));switch(this._res._type){case i.ResourceType.kResourceTypeAmiga:this._vid.AMIGA_decodeSpc(new Uint8Array(e.buffer,o),c,h,this._res._scratchBuffer);break;case i.ResourceType.kResourceTypeDOS:this._vid.PC_decodeSpc(new Uint8Array(e.buffer,o),c,h,this._res._scratchBuffer);break;case i.ResourceType.kResourceTypeMac:}o=this._res._scratchBuffer.byteOffset;let u,p,d=!1;if(a>=0?(u=a+c,u<256?u=c:(u=256-a,16&l&&(d=!0,o+=c-1))):(u=a+c,16&l?(d=!0,o+=a+c-1,a=0):(o-=a,a=0)),u<=0)return;if(n>=0?(p=224-h,p=n<p?h:224-n):(p=h+n,o-=c*n,n=0),p<=0)return;!d&&16&l&&(o+=c-1);let f=256*n+a,y=(96&_)>>1;this._eraseBackground?16&l?this._vid.drawSpriteSub2(new Uint8Array(this._res._scratchBuffer.buffer,o),this._vid._frontLayer.subarray(f),c,p,u,y):this._vid.drawSpriteSub1(new Uint8Array(this._res._scratchBuffer.buffer,o),this._vid._frontLayer.subarray(f),c,p,u,y):16&l?this._vid.drawSpriteSub4(new Uint8Array(this._res._scratchBuffer.buffer,o),this._vid._frontLayer.subarray(f),c,p,u,y):this._vid.drawSpriteSub3(new Uint8Array(this._res._scratchBuffer.buffer,o),this._vid._frontLayer.subarray(f),c,p,u,y),this._vid.markBlockAsDirty(a,n,u,p,this._vid._layerScale)}drawCharacter(e,t,s,i,r,_){let a=!1;if(64&r){const e=i;i=r&=191,r=e,a=!0}let o,n,l=i,h=r,c=e.byteOffset,u=!1;if(t>=0?t+h<256?o=h:(o=256-t,2&_&&(u=!0,c+=a?(h-1)*l:h-1)):(o=t+h,2&_?(u=!0,a?(c+=l*(t+h-1),t=0):(c+=t+h-1,u=!0,t=0)):a?(c-=l*t,t=0):(c-=t,t=0)),o<=0)return;if(s>=0?n=s<224-l?l:224-s:(n=l+s,c-=a?s:h*s,s=0),n<=0)return;!u&&2&_&&(c+=a?l*(h-1):h-1);let p=256*s+t;const d=96==(96&_)?80:64;2&_?a?this._vid.drawSpriteSub6(new Uint8Array(e.buffer,c),this._vid._frontLayer.subarray(p),l,n,o,d):this._vid.drawSpriteSub4(new Uint8Array(e.buffer,c),this._vid._frontLayer.subarray(p),h,n,o,d):a?this._vid.drawSpriteSub5(new Uint8Array(e.buffer,c),this._vid._frontLayer.subarray(p),l,n,o,d):this._vid.drawSpriteSub3(new Uint8Array(e.buffer,c),this._vid._frontLayer.subarray(p),h,n,o,d),this._vid.markBlockAsDirty(t,s,o,n,this._vid._layerScale)}async handleInventory(){let e=null;const t=this._pgeLive[0];if(t.life>0&&255!==t.current_inventory_PGE){this.playSound(66,0);const s=new Array(24).fill(null).map((()=>({icon_num:0,live_pge:null,init_pge:null})));let r=0,_=t.current_inventory_PGE;for(;255!==_;)s[r]={icon_num:this._res._pgeInit[_].icon_num,init_pge:this._res._pgeInit[_],live_pge:this._pgeLive[_]},_=this._pgeLive[_].next_inventory_PGE,++r;s[r].icon_num=255;let o=0,h=1+((r-1)/4>>0),c=0,u=!1;for(;!this._stub._pi.backspace&&!this._stub._pi.quit;){const t=16,_=16;switch(this._res._type){case i.ResourceType.kResourceTypeAmiga:case i.ResourceType.kResourceTypeDOS:{let e=31;for(let s=140;s<140+5*_;s+=_)for(let i=56;i<56+9*t;i+=t)this.drawIcon(e,i,s,15),++e}if(this._res._type==i.ResourceType.kResourceTypeAmiga){const e=231;let s=this._vid._frontLayer.subarray(140*n.Video.GAMESCREEN_W+56);s.fill(e,1,9*t-2+1),s=s.subarray(n.Video.GAMESCREEN_W);for(let i=1;i<5*_-1;++i)s[0]=s[9*t-1]=e,s=s.subarray(n.Video.GAMESCREEN_W);s.fill(e,1,9*t-2+1)}break;case i.ResourceType.kResourceTypeMac:this.drawIcon(31,56,140,15)}if(u){let e="SCORE "+this._score.toString().padStart(8,"0");this._vid.drawString(e,72+((114-e.length*n.Video.CHAR_W)/2>>0),158,229),e=this._res.getMenuString(a.LocaleData.Id.LI_06_LEVEL)+":"+this._res.getMenuString(a.LocaleData.Id.LI_13_EASY+this._skillLevel),this._vid.drawString(e,72+((114-e.length*n.Video.CHAR_W)/2>>0),166,229)}else{let t=72;for(let i=0;i<4;++i){let r=4*c+i;if(255===s[r].icon_num)break;if(this.drawIcon(s[r].icon_num,t,157,10),o===r){this.drawIcon(76,t,157,10),e=s[r].live_pge;const i=s[r].init_pge.text_num,_=this._res.getTextString(this._currentLevel,i);if(this.drawString(_,n.Video.GAMESCREEN_W,189,237,!0),4&s[r].init_pge.init_flags){const t=e.life.toString();this._vid.drawString(t,(n.Video.GAMESCREEN_W-t.length*n.Video.CHAR_W)/2>>0,197,237)}}t+=32}0!=c&&this.drawIcon(78,120,176,10),c!==h-1&&this.drawIcon(77,120,143,10)}if(await this._vid.updateScreen(),await this._stub.sleep(80),await this.inp_update(),this._stub._pi.dirMask&l.DIR_UP&&(this._stub._pi.dirMask&=~l.DIR_UP,c<h-1&&(++c,o=4*c)),this._stub._pi.dirMask&l.DIR_DOWN&&(this._stub._pi.dirMask&=~l.DIR_DOWN,c>0&&(--c,o=4*c)),this._stub._pi.dirMask&l.DIR_LEFT&&(this._stub._pi.dirMask&=~l.DIR_LEFT,o>0)){o%4>0&&--o}if(this._stub._pi.dirMask&l.DIR_RIGHT&&(this._stub._pi.dirMask&=~l.DIR_RIGHT,o<r-1)){o%4<3&&++o}this._stub._pi.enter&&(this._stub._pi.enter=!1,u=!u)}this._vid.fullRefresh(),this._stub._pi.backspace=!1,e&&this.pge_setCurrentInventoryObject(e),this.playSound(66,0)}}pge_getInventoryItemBefore(e,t){let s=e,i=s.current_inventory_PGE;for(;255!==i;){const e=this._pgeLive[i];if(e===t)break;s=e,i=s.next_inventory_PGE}return s}pge_removeFromInventory(e,t,s){t.unkF=255,s===e?(s.current_inventory_PGE=t.next_inventory_PGE,t.next_inventory_PGE=255):(e.next_inventory_PGE=t.next_inventory_PGE,t.next_inventory_PGE=255)}pge_addToInventory(e,t,s){t.unkF=s.index,e===s?(t.next_inventory_PGE=e.current_inventory_PGE,e.current_inventory_PGE=t.index):(t.next_inventory_PGE=e.next_inventory_PGE,e.next_inventory_PGE=t.index)}pge_setCurrentInventoryObject(e){const t=this.pge_getInventoryItemBefore(this._pgeLive[0],e);if(t===this._pgeLive[0]){if(t.current_inventory_PGE!==e.index)return 0}else if(t.next_inventory_PGE!==e.index)return 0;return this.pge_removeFromInventory(t,e,this._pgeLive[0]),this.pge_addToInventory(this._pgeLive[0],e,this._pgeLive[0]),65535}getRandomNumber(){let e=2*this._randSeed;return this._randSeed<<32>>32>=0&&(e^=495397697),this._randSeed=e,65535&e}async changeLevel(){await this._vid.fadeOut(),this.clearStateRewind(),await this.loadLevelData(),await this.loadLevelMap(),this._vid.setPalette0xF(),this._vid.setTextPalette(),this._vid.fullRefresh()}async inp_update(){if(await this._stub.processEvents(),-1!==this._demoBin&&this._inp_demPos<this._res._demLen){const e=this._res._dem[this._inp_demPos++];this._stub._pi.dirMask=15&e,this._stub._pi.enter=0!=(16&e),this._stub._pi.space=0!=(32&e),this._stub._pi.shift=0!=(64&e),this._stub._pi.backspace=0!=(128&e)}}col_prepareRoomState(){this._col_activeCollisionSlots.fill(255),this._col_currentLeftRoom=this._res._ctData[m+this._currentRoom],this._col_currentRightRoom=this._res._ctData[y+this._currentRoom];for(let e=0;e!=this._col_curPos;++e){const t=this._col_slotsTable[e],s=t.ct_pos/64>>0;s===this._currentRoom?this._col_activeCollisionSlots[48+(63&t.ct_pos)]=e:s===this._col_currentLeftRoom?this._col_activeCollisionSlots[0+(63&t.ct_pos)]=e:s===this._col_currentRightRoom&&(this._col_activeCollisionSlots[96+(63&t.ct_pos)]=e)}}col_clearState(){this._col_curPos=0,this._col_curSlot=this._col_slots[0]}col_findSlot(e){for(let t=0;t<this._col_curPos;++t)if(this._col_slotsTable[t].ct_pos===e)return t;return-1}col_getGridData(e,t,s){this._pge_currentPiegeFacingDir&&(s=-s);const i=this._col_currentPiegeGridPosY+t,r=this._col_currentPiegeGridPosX+s;let _,a=0;return r<0?(_=this._res._ctData.subarray(m),a=_[e.room_location],a<0?1:(_=_.subarray(r+16+16*i+112*a),_[64])):r>=16?(_=this._res._ctData.subarray(y),a=_[e.room_location],a<0?1:(_=_.subarray(r-16+16*i+112*a),_[128])):i<1?(_=this._res._ctData.subarray(0),a=_[e.room_location],a<0?1:(_=_.subarray(r+16*(i+6)+112*a),_[256])):i>=7?(_=this._res._ctData.subarray(f),a=_[e.room_location],a<0?1:(_=_.subarray(r+16*(i-6)+112*a),_[192])):(_=this._res._ctData.subarray(256),_=_.subarray(r+16*i+112*e.room_location),_[0])}col_getGridPos(e,t){let s=e.pos_x+t,i=e.pos_y,r=e.room_location;if(r<0)return 65535;if(s<0){if(r=this._res._ctData[m+r],r<0)return 65535;s+=256}else if(s>=256){if(r=this._res._ctData[y+r],r<0)return 65535;s-=256}else if(i<0){if(r=this._res._ctData[0+r],r<0)return 65535;i+=216}else if(i>=216){if(r=this._res._ctData[f+r],r<0)return 65535;i-=216}return s=s+8>>4,i=(i-8)/72>>0,this.renders>this.debugStartFrame&&console.log(`getGridPos x=${s} y=${i}`),s<0||s>15||i<0||i>2?65535:16*i+s+64*r}col_preparePiegeState(e){let t,s;if(0===e.init_PGE.unk1C)return void(e.collision_slot=255);let i=0;t=null;for(let r=0;r<e.init_PGE.unk1C;++r){s=this._col_curSlot;const _=this._col_slots.findIndex((e=>e===s))+1;this._col_curSlot=this._col_slots[_];const a=this.col_getGridPos(e,i);if(r<3&&this.renders>this.debugStartFrame&&console.log(`gridPos = ${a}`),a<0)return void(null===t?e.collision_slot=255:t.index=65535);s.ct_pos=a,s.live_pge=e,s.index=65535;const o=this.col_findSlot(a);if(r<3&&this.renders>this.debugStartFrame&&console.log(`_ax=${o}`),o>=0){s.prev_slot=this._col_slotsTable[o],this._col_slotsTable[o]=s,null===t?e.collision_slot=255&o:t.index=o;let i=s.live_pge;128&i.flags&&(this._pge_liveTable2[i.index]=i,i.flags|=4),s.prev_slot&&(i=s.prev_slot.live_pge,128&i.flags&&(this._pge_liveTable2[i.index]=i,i.flags|=4))}else s.prev_slot=null,this._col_slotsTable[this._col_curPos]=s,null==t?e.collision_slot=this._col_curPos:t.index=this._col_curPos,this._col_curPos++;t=s,i+=16}}pge_prepare(){if(this.col_clearState(),!(128&this._currentRoom)){let e=this._pge_liveTable1[this._currentRoom],t=0;for(;e;)this.col_preparePiegeState(e),!(4&e.flags)&&4&e.init_PGE.flags&&(this._pge_liveTable2[e.index]=e,e.flags|=4),e=e.next_PGE_in_room,t++}for(let e=0;e<this._res._pgeNum;++e){const t=this._pge_liveTable2[e];t&&this._currentRoom!==t.room_location&&this.col_preparePiegeState(t)}}async pge_getInput(){if(await this.inp_update(),this._inp_lastKeysHit=this._stub._pi.dirMask,12&this._inp_lastKeysHit&&3&this._inp_lastKeysHit){const e=240&this._inp_lastKeysHit|15&this._inp_lastKeysHitLeftRight;this._pge_inpKeysMask=e,this._inp_lastKeysHit=e}else this._pge_inpKeysMask=this._inp_lastKeysHit,this._inp_lastKeysHitLeftRight=this._inp_lastKeysHit;this._stub._pi.enter&&(this._pge_inpKeysMask|=16),this._stub._pi.space&&(this._pge_inpKeysMask|=32),this._stub._pi.shift&&(this._pge_inpKeysMask|=64)}resetGameState(){this._animBuffers._states[0]=this._animBuffer0State,this._animBuffers._curPos[0]=255,this._animBuffers._states[1]=this._animBuffer1State,this._animBuffers._curPos[1]=255,this._animBuffers._states[2]=this._animBuffer2State,this._animBuffers._curPos[2]=255,this._animBuffers._states[3]=this._animBuffer3State,this._animBuffers._curPos[3]=255,this._currentRoom=this._res._pgeInit[0].init_room,this._cut._deathCutsceneId=65535,this._pge_opTempVar2=65535,this._deathCutsceneCounter=0,this._saveStateCompleted=!1,this._loadMap=!0,this.pge_resetGroups(),this._blinkingConradCounter=0,this._pge_processOBJ=!1,this._pge_opTempVar1=0,this._textToDisplay=65535}async loadMonsterSprites(e){const t=e.init_PGE;if(73!==t.obj_node_number&&10!==t.object_type)return 65535;if(t.obj_node_number===this._curMonsterFrame)return 65535;if(e.room_location!==this._currentRoom)return 0;let s=this._currentLevel;const r=c._monsterListLevels[s];for(;r[s]!==t.obj_node_number;){if(255===r[s])return 0;s+=2}if(this._curMonsterFrame=r[0+s],this._curMonsterNum!=r[1+s])switch(this._curMonsterNum=r[1+s],this._res._type){case i.ResourceType.kResourceTypeAmiga:{await this._res.load(g._monsterNames[1][this._curMonsterNum],a.ObjectType.OT_SPM);const e=[0,8,0,8],t=16*this._vid._mapPalSlot3+e[this._curMonsterNum];for(let e=0;e<8;++e)this._vid.setPaletteColorBE(80+e,t+e)}break;case i.ResourceType.kResourceTypeDOS:{const e=g._monsterNames[0][this._curMonsterNum];await this._res.load(e,a.ObjectType.OT_SPRM),await this._res.load_SPR_OFF(e,this._res._sprm),this._vid.setPaletteSlotLE(5,g._monsterPals[this._curMonsterNum])}break;case i.ResourceType.kResourceTypeMac:{const e=new Array(256);await this._res.MAC_loadMonsterData(g._monsterNames[0][this._curMonsterNum],e);const t=5;for(let s=0;s<16;++s){const i=16*t+s;this._stub.setPaletteEntry(i,e[i])}}}return 65535}hasLevelMap(e,t){return this._res._type===i.ResourceType.kResourceTypeMac?this._res.MAC_hasLevelMap(e,t):this._res._map?0!==i.READ_LE_UINT32(this._res._map,6*t):!!this._res._lev&&0!==i.READ_BE_UINT32(this._res._lev,4*t)}async loadLevelMap(){let e=!1;switch(this._currentIcon=255,this._res._type){case i.ResourceType.kResourceTypeAmiga:if(1===this._currentLevel){let e=0;switch(this._currentRoom){case 14:case 19:case 52:case 53:e=1;break;case 11:case 24:case 27:case 56:e=2}if(0!==e&&this._res._levNum!==e){const t="level2_"+e;await this._res.load(t,a.ObjectType.OT_LEV),this._res._levNum=e}}this._vid.AMIGA_decodeLev(this._currentLevel,this._currentRoom);break;case i.ResourceType.kResourceTypeDOS:if(this._stub.hasWidescreen()&&this._widescreenMode===i.WidescreenMode.kWidescreenAdjacentRooms){const t=this._res._ctData[m+this._currentRoom];t>0&&this.hasLevelMap(this._currentLevel,t)?(this._vid.PC_decodeMap(this._currentLevel,t),this._stub.copyWidescreenLeft(n.Video.GAMESCREEN_W,n.Video.GAMESCREEN_H,this._vid._backLayer)):this._stub.copyWidescreenLeft(n.Video.GAMESCREEN_W,n.Video.GAMESCREEN_H,null);const s=this._res._ctData[y+this._currentRoom];s>0&&this.hasLevelMap(this._currentLevel,s)?(this._vid.PC_decodeMap(this._currentLevel,s),this._stub.copyWidescreenRight(n.Video.GAMESCREEN_W,n.Video.GAMESCREEN_H,this._vid._backLayer)):this._stub.copyWidescreenRight(n.Video.GAMESCREEN_W,n.Video.GAMESCREEN_H,null),e=!0}this._vid.PC_decodeMap(this._currentLevel,this._currentRoom);break;case i.ResourceType.kResourceTypeMac:if(this._stub.hasWidescreen()&&this._widescreenMode==i.WidescreenMode.kWidescreenAdjacentRooms){const t=this._res._ctData[m+this._currentRoom];t>0&&this.hasLevelMap(this._currentLevel,t)?(this._vid.MAC_decodeMap(this._currentLevel,t),this._stub.copyWidescreenLeft(this._vid._w,this._vid._h,this._vid._backLayer)):this._stub.copyWidescreenLeft(this._vid._w,this._vid._h,null);const s=this._res._ctData[y+this._currentRoom];s>0&&this.hasLevelMap(this._currentLevel,s)?(this._vid.MAC_decodeMap(this._currentLevel,s),this._stub.copyWidescreenRight(this._vid._w,this._vid._h,this._vid._backLayer)):this._stub.copyWidescreenRight(this._vid._w,this._vid._h,null),e=!0}this._vid.MAC_decodeMap(this._currentLevel,this._currentRoom)}e||this._vid.updateWidescreen()}async loadLevelData(){this._res.clearLevelRes();const e=c._gameLevels[this._currentLevel];switch(this._res._type){case i.ResourceType.kResourceTypeAmiga:if(this._res._isDemo){const e="demo",t="demof";await this._res.load(e,a.ObjectType.OT_MBK),await this._res.load(e,a.ObjectType.OT_CT),await this._res.load(e,a.ObjectType.OT_PAL),await this._res.load(e,a.ObjectType.OT_RPC),await this._res.load(e,a.ObjectType.OT_SPC),await this._res.load(e,a.ObjectType.OT_LEV),await this._res.load(t,a.ObjectType.OT_PGE),await this._res.load(e,a.ObjectType.OT_OBJ),await this._res.load(e,a.ObjectType.OT_ANI),await this._res.load(t,a.ObjectType.OT_TBN),await this._res.load_SPL_demo(),await this._res.load("level1",a.ObjectType.OT_SGD);break}{let t=e.nameAmiga;4===this._currentLevel&&(t=c._gameLevels[3].nameAmiga),await this._res.load(t,a.ObjectType.OT_MBK),6===this._currentLevel?await this._res.load(c._gameLevels[5].nameAmiga,a.ObjectType.OT_CT):await this._res.load(t,a.ObjectType.OT_CT),await this._res.load(t,a.ObjectType.OT_PAL),await this._res.load(t,a.ObjectType.OT_RPC),await this._res.load(t,a.ObjectType.OT_SPC),1===this._currentLevel?(await this._res.load("level2_1",a.ObjectType.OT_LEV),this._res._levNum=1):await this._res.load(t,a.ObjectType.OT_LEV)}await this._res.load(e.nameAmiga,a.ObjectType.OT_PGE),await this._res.load(e.nameAmiga,a.ObjectType.OT_OBC),await this._res.load(e.nameAmiga,a.ObjectType.OT_ANI),await this._res.load(e.nameAmiga,a.ObjectType.OT_TBN);{let t="level"+e.sound;await this._res.load(t,a.ObjectType.OT_SPL)}0===this._currentLevel&&await this._res.load(e.nameAmiga,a.ObjectType.OT_SGD);break;case i.ResourceType.kResourceTypeDOS:await this._res.load(e.name,a.ObjectType.OT_MBK),await this._res.load(e.name,a.ObjectType.OT_CT),await this._res.load(e.name,a.ObjectType.OT_PAL),await this._res.load(e.name,a.ObjectType.OT_RP),this._res._isDemo||u.g_options.use_tile_data?(0===this._currentLevel&&await this._res.load(e.name,a.ObjectType.OT_SGD),await this._res.load(e.name,a.ObjectType.OT_LEV),await this._res.load(e.name,a.ObjectType.OT_BNQ)):await this._res.load(e.name,a.ObjectType.OT_MAP),await this._res.load(e.name2,a.ObjectType.OT_PGE),await this._res.load(e.name2,a.ObjectType.OT_OBJ),await this._res.load(e.name2,a.ObjectType.OT_ANI),await this._res.load(e.name2,a.ObjectType.OT_TBN);break;case i.ResourceType.kResourceTypeMac:}this._cut._id=e.cutscene_id,this._res._isDemo&&5===this._currentLevel&&(this._cut._id=65535),this._curMonsterNum=65535,this._curMonsterFrame=0,this._res.clearBankData(),this._printLevelCodeCounter=150,this._col_slots2Cur=this._col_slots2[0],this._col_slots2Next=null,this._pge_liveTable1.fill(null).map((()=>i.CreatePGE())),this._pge_liveTable2.fill(null).map((()=>i.CreatePGE())),this._currentRoom=this._res._pgeInit[0].init_room;let t=this._res._pgeNum;for(;t--;)this.pge_loadForCurrentLevel(t);-1!==this._demoBin&&(this._cut._id=-1,255!==c._demoInputs[this._demoBin].room?(this._pgeLive[0].room_location=c._demoInputs[this._demoBin].room,this._pgeLive[0].pos_x=c._demoInputs[this._demoBin].x,this._pgeLive[0].pos_y=c._demoInputs[this._demoBin].y,this._inp_demPos=0):this._inp_demPos=1,this._printLevelCodeCounter=0);for(let e=0;e<this._res._pgeNum;++e)if(this._res._pgeInit[e].skill<=this._skillLevel){this.renders>this.debugStartFrame&&console.log(`i=${e} => skill!`);const t=this._pgeLive[e];t.next_PGE_in_room=this._pge_liveTable1[t.room_location],this._pge_liveTable1[t.room_location]=t}this.pge_resetGroups(),this._validSaveState=!1,this._mix.playMusic(_.Mixer.MUSIC_TRACK+e.track)}pge_resetGroups(){this._pge_groupsTable.fill(null);let e=0,t=this._pge_groups[e];this._pge_nextFreeGroup=t;let s=255;for(;s--;)t.next_entry=this._pge_groups[e+1],t.index=0,t.group_id=0,e++,t=this._pge_groups[e];t.next_entry=null,t.index=0,t.group_id=0}clearStateRewind(){for(let e=0;e<this._rewindLen;++e){let t=this._rewindPtr-e;t<0&&(t+=120),this._rewindBuffer[t].close()}this._rewindPtr=-1,this._rewindLen=0}}g._demoInputs=c._demoInputs,g._gameLevels=c._gameLevels,g._scoreTable=c.scoreTable,g._monsterListLevel1=c._monsterListLevel1,g._monsterListLevel2=c._monsterListLevel2,g._monsterListLevel3=c._monsterListLevel3,g._monsterListLevel4_1=c._monsterListLevel4_1,g._monsterListLevel4_2=c._monsterListLevel4_2,g._monsterListLevel5_1=c._monsterListLevel5_1,g._monsterListLevel5_2=c._monsterListLevel5_2,g._monsterListLevels=c._monsterListLevels,g._monsterPals=c._monsterPals,g._monsterNames=c._monsterNames,g._pge_modKeysTable=c._pge_modKeysTable,g._protectionCodeData=c._protectionCodeData,g._protectionWordData=c._protectionWordData,g._protectionNumberDataAmiga=c._protectionNumberDataAmiga,g._protectionCodeDataAmiga=c._protectionCodeDataAmiga,g._protectionPal=c._protectionPal,t.Game=g,t.CT_UP_ROOM=0,t.CT_DOWN_ROOM=f,t.CT_RIGHT_ROOM=y,t.CT_LEFT_ROOM=m},7:function(e,t,s){t.__esModule=!0;t.DEFAULT_CONFIG={datapath:"https://warpdesign.github.io/flashback-web/demo-data",savepath:"",levelnum:0,fullscreen:!1,scaler:"",language:"EN",widescreen:"none",autosave:!1},t.g_options={bypass_protection:!0,enable_password_menu:!1,enable_language_selection:!1,fade_out_palette:!0,use_tile_data:!1,use_text_cutscenes:!1,use_seq_cutscenes:!0,use_words_protection:!1,use_white_tshirt:!1,play_asc_cutscene:!0,play_caillou_cutscene:!0,play_metro_cutscene:!1,play_serrure_cutscene:!1,play_carte_cutscene:!1,play_gamesaved_sound:!1}},8:function(e,t,s){var i;t.__esModule=!0,function(e){e[e.kScalerTypePoint=0]="kScalerTypePoint",e[e.kScalerTypeLinear=1]="kScalerTypeLinear",e[e.kScalerTypeInternal=2]="kScalerTypeInternal",e[e.kScalerTypeExternal=3]="kScalerTypeExternal"}(i||(i={}));const r=(e,t,s,i,r,_)=>{let a,o,n,l,h,c=0,u=0,p=0;for(a=s[c],n=i[c],o=n,l=i[c+1],h=r[c],a!=h&&o!=l?(e[0]=o==a?o:n,e[1]=a==l?l:n,t[0]=o==h?o:n,t[1]=h==l?l:n):(e[0]=n,e[1]=n,t[0]=n,t[1]=n),u+=2,p+=2,n=l,c=1;c<_-1;++c)a=s[c],l=i[c+1],h=r[c],a!=h&&o!=l?(e[0+u]=o==a?o:n,e[1+u]=a==l?l:n,t[0+p]=o==h?o:n,t[1+p]=h==l?l:n):(e[0+u]=n,e[1+u]=n,t[0+p]=n,t[1+p]=n),o=n,n=l,u+=2,p+=2;a=s[0],h=r[c],a!=h&&o!=l?(e[0+u]=o==a?o:n,e[1+p]=a==l?l:n,t[0+u]=o==h?o:n,t[1+p]=h==l?l:n):(e[0+u]=n,e[1+p]=n,t[0+u]=n,t[1+p]=n)},_={tag:1,name:"scaleNx",factorMin:2,factorMax:4,scale:(e,t,s,i,_,a,o)=>{switch(e){case 2:return((e,t,s,i,_,a)=>{if(_<=1||a<=1)throw"scale2x: w <= 1 || h <= 1 !!";const o=2*t;let n=s,l=s,h=new Uint32Array(s.buffer,i);r(e,new Uint32Array(e.buffer,t),n,l,h,_);let c=new Uint32Array(e.buffer,o);n=s,l=new Uint32Array(s.buffer,i),h=new Uint32Array(s,2*i);for(let e=1;e<a-1;++e)r(c,new Uint32Array(c.buffer,t),n,l,h,_),c=new Uint32Array(c.buffer,o),n=new Uint32Array(n.buffer,i),l=new Uint32Array(l.buffer,i),h=new Uint32Array(h.buffer,i);h=l,r(c,new Uint32Array(c.buffer,t),n,l,h,_)})(t,s,i,_,a,o);case 3:return((e,t,s,i,r,_)=>{throw"scale3x not implemented! use scale2x instead!"})();case 4:return((e,t,s,i,r,_)=>{throw"scale4x not implemented! Use scale2x instead!"})()}}};t.ScalerType=i,t._internalScaler=_},9:function(e,t,s){t.__esModule=!0;var i=e(17),r=e(2),_=e(11),a=e(3),o=e(13),n=e(15),l=e(7);const h=e=>n._sinTable[e]<<16>>16,c=e=>n._cosTable[e]<<16>>16,u=(e,t,s)=>{if(1!==s)throw"scalePoints"};class p{constructor(e,t,s){this._opcodeTable=[this.op_markCurPos.bind(this),this.op_refreshScreen.bind(this),this.op_waitForSync.bind(this),this.op_drawShape.bind(this),this.op_setPalette.bind(this),this.op_markCurPos.bind(this),this.op_drawCaptionText.bind(this),null,null,this.op_refreshAll.bind(this),this.op_drawShapeScale.bind(this),this.op_drawShapeScaleRotate.bind(this),this.op_drawCreditsText.bind(this),null,this.op_handleKeys.bind(this)],this._gfx=new i.Graphics,this._rotMat=new Array(4),this._vertices=new Array(128).fill(null).map((()=>({x:0,y:0}))),this._textSep=new Uint8Array(20),this._textBuf=new Uint8Array(500),this._res=e,this._stub=t,this._vid=s,this._patchedOffsetsTable=null,this._palBuf=new Uint8Array(64)}static isNewLineChar(e,t){return e===(t._lang===r.Language.LANG_JP?209:124)}findTextSeparators(e,t){const s=this._textSep;let i=0,r=0,_=0;for(let a=0;a<t&&10!==e[a];++a)p.isNewLineChar(e[a],this._res)?(s[i++]=_,_>r&&(r=_),_=0):++_;return s[i++]=_,_>r&&(r=_),s[i++]=0,r}drawText(e,t,s,i,_,a){let n=0,l=(new TextDecoder).decode(s);this._res._type==r.ResourceType.kResourceTypeMac?(n=l.charCodeAt(0),l=l.substr(1)):n=l.length;const h=this._vid._drawChar,c=this._res._lang===r.Language.LANG_JP?o.Video._font8Jp:this._res._fnt;let u=0;0!==a&&(u=this.findTextSeparators(s,n),2!==a&&(u=this._res._lang===r.Language.LANG_JP?20:30));const d=this._textSep;let f=0,y=t+=50,m=e+=this._res._lang===r.Language.LANG_JP?0:8;0!==a&&(m+=(u-d[f++])/2*o.Video.CHAR_W);for(let t=0;t<n&&10!==s[t];++t)p.isNewLineChar(s[t],this._res)?(y+=o.Video.CHAR_H,m=e,0!==a&&(m+=(u-d[f++])/2*o.Video.CHAR_W)):32===s[t]?m+=o.Video.CHAR_W:9===s[t]||(h(_,this._vid._w,m,y,c,i,s[t]),m+=o.Video.CHAR_W)}async playText(e){const t={r:0,g:0,b:0};this._stub.setPaletteEntry(192,t),t.r=t.g=t.b=255,this._stub.setPaletteEntry(193,t);let s=0;for(let t=0;t<e.length;++t)"|"===e[t]&&++s;const i=(128-8*s)/2;for(this._page1.fill(192,0,this._vid._layerSize),this.drawText(0,i,(new TextEncoder).encode(e),193,this._page1,1),this._stub.copyRect(0,0,this._vid._w,this._vid._h,this._page1,this._vid._w),await this._stub.updateScreen(0);!this._stub._pi.quit;){if(this._stub.processEvents(),this._stub._pi.backspace){this._stub._pi.backspace=!1;break}await this._stub.sleep(15)}}async play(){if(65535!==this._id){this._textCurBuf=null,console.log(`Cutscene:play() _id=0x${this._id.toString(16)}`),this._creditsSequence=!1,this.prepare();const e=this._res.isAmiga()?p._offsetsTableAmiga:p._offsetsTableDOS;let t=e[2*this._id+0],s=e[2*this._id+1];if(console.log(`cutName=${t}, cutOff=${s}`),65535!==t)switch(this._id){case 3:l.g_options.play_carte_cutscene&&(t=2);break;case 8:break;case 19:l.g_options.play_serrure_cutscene&&(t=31);break;case 22:case 23:case 24:l.g_options.play_asc_cutscene&&!this._res._isDemo&&(t=12);break;case 30:case 31:l.g_options.play_metro_cutscene&&(t=14);break;case 46:break;default:console.warn(`Unknown cutscene ${this._id}`)}if(console.log(`cutName=${t} (after)`),this._patchedOffsetsTable){console.log("need to patch offset table");for(let e=0;255!==this._patchedOffsetsTable[e];e+=3)if(this._patchedOffsetsTable[e]===this._id){t=this._patchedOffsetsTable[e+1],s=this._patchedOffsetsTable[e+2];break}console.log(`cutName=${t}, cutOff=${s} (patch)`)}else console.log("no need to patch offset table");if(l.g_options.use_text_cutscenes){const e=this._res._lang===r.Language.LANG_FR?p._frTextsTable:p._enTextsTable;for(let t=0;e[t].str;++t)if(this._id===e[t].num){await this.playText(e[t].str);break}}else 65535!==t?await this.load(t)&&(await this.mainLoop(s),this.unload()):8===this._id&&l.g_options.play_caillou_cutscene&&await this.playSet(p._caillouSetData,1508);this._vid.fullRefresh(),61!==this._id&&(this._id=65535)}}async mainLoop(e){this._frameDelay=5,this._tstamp=(new Date).getTime();const t={r:0,g:0,b:0};for(let e=0;e<32;++e)this._stub.setPaletteEntry(192+e,t);this._newPal=!1,this._hasAlphaColor=!1;const s=this.getCommandData();let i=0;for(this._res.isMac()?this._baseOffset=r.READ_BE_UINT16(s.buffer,2+2*e):(0!==e&&(i=r.READ_BE_UINT16(s.buffer,2+2*e)),this._baseOffset=2*(r.READ_BE_UINT16(s.buffer)+1)),this._varKey=0,this._cmdPtr=this._cmdPtrBak=new Uint8Array(s.buffer),this._cmdPtrOffset=this._cmdPtrBakOffset=this._baseOffset+i,this._polPtr=this.getPolygonData();!this._stub._pi.quit&&!this._interrupted&&!this._stop;){let e=this.fetchNextCmdByte();if(128&e)break;if(e>>=2,e>=15)throw`Invalid cutscene opcode = 0x${e.toString(16)}`;try{await this._opcodeTable[e]()}catch(e){}await this._stub.processEvents(),this._stub._pi.backspace&&(this._stub._pi.backspace=!1,this._interrupted=!0)}}fetchNextCmdByte(){return this._cmdPtr[this._cmdPtrOffset++]}fetchNextCmdWord(){const e=r.READ_BE_UINT16(this._cmdPtr.buffer,this._cmdPtrOffset);return this._cmdPtrOffset+=2,e}getCommandData(){return this._res._cmd}getPolygonData(){return this._res._pol}async sync(){if(this._stub._pi.quit)return;if(this._stub._pi.dbgMask&a.DF_FASTMODE)return;const e=this._stub.getTimeStamp()-this._tstamp,t=15*this._frameDelay-e;t>0&&await this._stub.sleep(t),this._tstamp=this._stub.getTimeStamp()}copyPalette(e,t){let s=0;0!==t&&(s+=32),this._palBuf.set(e.subarray(0,32),s),this._newPal=!0}updatePalette(){if(this._newPal){const e=this._palBuf;let t=0;for(let s=0;s<32;++s){const i=r.READ_BE_UINT16(e.buffer,t);t+=2;const _=o.Video.AMIGA_convertColor(i);this._stub.setPaletteEntry(192+s,_)}this._newPal=!1}}async setPalette(){await this.sync(),this.updatePalette();const e=this._page0;this._page0=this._page1,this._page1=e,this._stub.copyRect(0,0,this._vid._w,this._vid._h,this._page0,this._vid._w),await this._stub.updateScreen(0)}async load(e){if(65535===e)throw`Assertion failed: ${e} !== 0xFFFF`;let t=p._namesTableDOS[255&e];const s=this._res;switch(s._type){case r.ResourceType.kResourceTypeAmiga:if(7===e?t="INTRO":10===e&&(t="SERRURE"),await s.load(t,_.ObjectType.OT_CMP),57===this._id&&s._lang!==r.Language.LANG_FR)throw"TODO: Amiga";break;case r.ResourceType.kResourceTypeDOS:await s.load(t,_.ObjectType.OT_CMD),await s.load(t,_.ObjectType.OT_POL);break;case r.ResourceType.kResourceTypeMac:await s.MAC_loadCutscene(t)}return await s.load_CINE(),!(!s._cmd||!s._pol)}unload(){switch(this._res._type){case r.ResourceType.kResourceTypeAmiga:this._res.unload(_.ObjectType.OT_CMP);break;case r.ResourceType.kResourceTypeDOS:this._res.unload(_.ObjectType.OT_CMD),this._res.unload(_.ObjectType.OT_POL);break;case r.ResourceType.kResourceTypeMac:this._res.MAC_unloadCutscene()}}prepare(){this._page0=this._vid._frontLayer,this._page1=this._vid._tempLayer,this._pageC=this._vid._tempLayer2,this._stub._pi.dirMask=0,this._stub._pi.enter=!1,this._stub._pi.space=!1,this._stub._pi.shift=!1,this._interrupted=!1,this._stop=!1;const e=(o.Video.GAMESCREEN_W-240)/2,t=240*this._vid._layerScale,s=128*this._vid._layerScale,i=e*this._vid._layerScale,r=50*this._vid._layerScale;this._gfx.setClippingRect(i,r,t,s)}async playCredits(){if(this._res.isMac())return void console.warn("Cutscene::playCredits() unimplemented");this._textCurPtr=new r.Buffer(this._res.isAmiga()?p._creditsDataAmiga.buffer:p._creditsDataDOS.buffer),this._textBuf[0]=10,this._creditsSequence=!0,this._creditsSlowText=0,this._creditsKeepText=0,this._creditsTextCounter=0,this._interrupted=!1;const e=p._creditsCutSeq;let t=0;for(;!this._stub._pi.quit&&!this._interrupted;){const s=e[t++];if(65535===s)break;this.prepare();const i=this._res.isAmiga()?p._offsetsTableAmiga:p._offsetsTableDOS,r=i[2*s+0],_=i[2*s+1];await this.load(r)&&(await this.mainLoop(_),this.unload())}this._creditsSequence=!1}op_setPalette(){const e=this.fetchNextCmdByte(),t=this.fetchNextCmdByte(),s=r.READ_BE_UINT16(this._polPtr.buffer,6),i=new Uint8Array(this._polPtr.buffer,s+32*e);this.copyPalette(i,1^t),this._creditsSequence&&(this._palBuf[32]=15,this._palBuf[33]=255)}drawShapeScaleRotate(e,t,s,i,_,a,o,n){const l=e.offset;this._gfx.setLayer(this._page1,this._vid._w);let h=e.getUint8Array()[0];if(e.offset++,128&h){let l,h,c,p;const d=new Array(2),f=this._vertices;let y=0;this._shape_cur_x=c=s+(r.READ_BE_UINT16(e)<<16>>16),e.offset+=2,this._shape_cur_y=p=i+(r.READ_BE_UINT16(e)<<16>>16),e.offset+=2,l=r.READ_BE_UINT16(e)<<16>>16,e.offset+=2,h=r.READ_BE_UINT16(e)<<16>>16,e.offset+=2,this._shape_cur_x16=this._shape_ix-c,this._shape_cur_y16=this._shape_iy-p,this._shape_ox=this._shape_cur_x=this._shape_ix+(this._shape_cur_x16*this._rotMat[0]+this._shape_cur_y16*this._rotMat[1]>>8),this._shape_oy=this._shape_cur_y=this._shape_iy+(this._shape_cur_x16*this._rotMat[2]+this._shape_cur_y16*this._rotMat[3]>>8),d[0]={x:0,y:-h},d[1]={x:-l,y:h},0===this._shape_count?(o-=(this._shape_ix-this._shape_cur_x)*t*128+32768>>16,n-=(this._shape_iy-this._shape_cur_y)*t*128+32768>>16,f[y].x=o,f[y].y=n,y++,this._shape_cur_x16=o<<16,this._shape_cur_y16=n<<16):(this._shape_cur_x16=this._shape_prev_x16+(this._shape_cur_x-this._shape_prev_x)*t*128,this._shape_cur_y16=this._shape_prev_y16+(this._shape_cur_y-this._shape_prev_y)*t*128,f[y].x=this._shape_cur_x16+32768>>16,f[y].y=this._shape_cur_y16+32768>>16,y++);for(let e=0;e<2;++e)this._shape_cur_x+=d[e].x,this._shape_cur_x16+=d[e].x*t*128,f[y].x=this._shape_cur_x16+32768>>16,this._shape_cur_y+=d[e].y,this._shape_cur_y16+=d[e].y*t*128,f[y].y=this._shape_cur_y16+32768>>16,y++;this._shape_prev_x=this._shape_cur_x,this._shape_prev_y=this._shape_cur_y,this._shape_prev_x16=this._shape_cur_x16,this._shape_prev_y16=this._shape_cur_y16;const m={x:this._vertices[0].x+_+this._shape_ix,y:this._vertices[0].y+a+this._shape_iy},g=this._vertices[0].x-this._vertices[2].x,b=this._vertices[0].y-this._vertices[1].y;u(0,0,this._vid._layerScale),this._gfx.drawEllipse(this._primitiveColor,this._hasAlphaColor,m,g,b)}else if(0===h);else{let l,c,p,d,f;const y=new Array(40);for(let e=0;e<40;++e)y[e]={x:0,y:0};this._shape_cur_x=s+(r.READ_BE_UINT16(e)<<16>>16),e.offset+=2,l=this._shape_cur_x,this._shape_cur_y=i+(r.READ_BE_UINT16(e)<<16>>16),e.offset+=2,c=this._shape_cur_y,this._shape_cur_x16=this._shape_ix-l,this._shape_cur_y16=this._shape_iy-c,p=this._shape_ix+(this._rotMat[0]*this._shape_cur_x16+this._rotMat[1]*this._shape_cur_y16>>8),0==this._shape_count&&(this._shape_ox=p),this._shape_cur_x=d=p,p=this._shape_iy+(this._rotMat[2]*this._shape_cur_x16+this._rotMat[3]*this._shape_cur_y16>>8),0==this._shape_count&&(this._shape_oy=p),this._shape_cur_y=f=p;let m=l,g=c,b=0,T=0;for(let t=h-1;t>=0;--t)l=(e.getUint8Array()[0]<<24>>24)+T,e.offset++,c=e.getUint8Array()[0]<<24>>24,e.offset++,0===c&&0!==t&&0===e.getUint8Array()[1]?(T=l,--h):(m+=l,g+=c,T=0,this._shape_cur_x16=this._shape_ix-m,this._shape_cur_y16=this._shape_iy-g,p=this._shape_ix+(this._rotMat[0]*this._shape_cur_x16+this._rotMat[1]*this._shape_cur_y16>>8),y[b].x=p-d,d=p,p=this._shape_iy+(this._rotMat[2]*this._shape_cur_x16+this._rotMat[3]*this._shape_cur_y16>>8),y[b].y=p-f,f=p,++b);const E=this._vertices;let A=0;0==this._shape_count?(m=this._shape_ox,g=this._shape_oy,o-=(this._shape_ix-m)*t*128+32768>>16,n-=(this._shape_iy-g)*t*128+32768>>16,E[A].x=o+this._shape_ix+_,E[A].y=n+this._shape_iy+a,++A,this._shape_cur_x16=o<<16,this._shape_cur_y16=n<<16):(this._shape_cur_x16=this._shape_prev_x16+(this._shape_cur_x-this._shape_prev_x)*t*128,E[A].x=this._shape_ix+_+(this._shape_cur_x16+32768>>16),this._shape_cur_y16=this._shape_prev_y16+(this._shape_cur_y-this._shape_prev_y)*t*128,E[A].y=this._shape_iy+a+(this._shape_cur_y16+32768>>16),++A);for(let e=0;e<h;++e)this._shape_cur_x+=y[e].x,this._shape_cur_x16+=y[e].x*t*128,E[A].x=_+this._shape_ix+(this._shape_cur_x16+32768>>16),this._shape_cur_y+=y[e].y,this._shape_cur_y16+=y[e].y*t*128,E[A].y=a+this._shape_iy+(this._shape_cur_y16+32768>>16),++A;this._shape_prev_x=this._shape_cur_x,this._shape_prev_y=this._shape_cur_y,this._shape_prev_x16=this._shape_cur_x16,this._shape_prev_y16=this._shape_cur_y16,u(this._vertices,0,this._vid._layerScale),this._gfx.drawPolygon(this._primitiveColor,this._hasAlphaColor,this._vertices,h+1)}e.offset=l}drawShapeScale(e,t,s,i,_,a,o,n){const l=e.offset;this._gfx.setLayer(this._page1,this._vid._w);let h=e.getUint8Array()[0];if(e.offset++,128&h){let l,h;const c=this._vertices;let p=0;const d=[{x:0,y:0},{x:0,y:0}];this._shape_cur_x=s+(r.READ_BE_UINT16(e)<<16>>16),e.offset+=2,this._shape_cur_y=i+(r.READ_BE_UINT16(e)<<16>>16),e.offset+=2,l=r.READ_BE_UINT16(e)<<16>>16,e.offset+=2,h=r.READ_BE_UINT16(e)<<16>>16,e.offset+=2,this._shape_cur_x16=0,this._shape_cur_y16=0,d[0].x=0,d[0].y=-h,d[1].x=-l,d[1].y=h,0==this._shape_count?(o-=(this._shape_ix-this._shape_ox)*t*128+32768>>16,n-=(this._shape_iy-this._shape_oy)*t*128+32768>>16,c[p].x=o,c[p].y=n,p++,this._shape_cur_x16=o<<16,this._shape_cur_y16=n<<16):(this._shape_cur_x16=this._shape_prev_x16+(this._shape_cur_x-this._shape_prev_x)*t*128,c[p].x=this._shape_cur_x16+32768>>16,this._shape_cur_y16=this._shape_prev_y16+(this._shape_cur_y-this._shape_prev_y)*t*128,c[p].y=this._shape_cur_y16+32768>>16,p++);for(let e=0;e<2;++e)this._shape_cur_x+=d[e].x,this._shape_cur_x16+=d[e].x*t*128,c[p].x=this._shape_cur_x16+32768>>16,this._shape_cur_y+=d[e].y,this._shape_cur_y16+=d[e].y*t*128,c[p].y=this._shape_cur_y16+32768>>16,p++;this._shape_prev_x=this._shape_cur_x,this._shape_prev_y=this._shape_cur_y,this._shape_prev_x16=this._shape_cur_x16,this._shape_prev_y16=this._shape_cur_y16;const f={x:this._vertices[0].x+_+this._shape_ix,y:this._vertices[0].y+a+this._shape_iy};let y=this._vertices[0].x-this._vertices[2].x,m=this._vertices[0].y-this._vertices[1].y;u(0,0,this._vid._layerScale),this._gfx.drawEllipse(this._primitiveColor,this._hasAlphaColor,f,y,m)}else if(0===h);else{const l=this._vertices;let c,p,d=0;this._shape_cur_x=c=(r.READ_BE_UINT16(e)<<16>>16)+s,e.offset+=2,this._shape_cur_y=p=(r.READ_BE_UINT16(e)<<16>>16)+i,e.offset+=2,0===this._shape_count?(o-=(this._shape_ix-this._shape_ox)*t*128+32768>>16,n-=(this._shape_iy-this._shape_oy)*t*128+32768>>16,l[d].x=o+this._shape_ix+_,l[d].y=n+this._shape_iy+a,d++,this._shape_cur_x16=o<<16,this._shape_cur_y16=n<<16):(this._shape_cur_x16=this._shape_prev_x16+(this._shape_cur_x-this._shape_prev_x)*t*128,this._shape_cur_y16=this._shape_prev_y16+(this._shape_cur_y-this._shape_prev_y)*t*128,l[d].x=c=(this._shape_cur_x16+32768>>16)+this._shape_ix+_,l[d].y=p=(this._shape_cur_y16+32768>>16)+this._shape_iy+a,d++);let f=h-1;++h;let y=0;for(;f>=0;--f)c=(e.getUint8Array()[0]<<24>>24)+y,e.offset++,p=e.getUint8Array()[0]<<24>>24,e.offset++,0===p&&0!==f&&0===e.getUint8Array()[1]?(y=c,--h):(y=0,this._shape_cur_x+=c,this._shape_cur_y+=p,this._shape_cur_x16+=c*t*128,this._shape_cur_y16+=p*t*128,l[d].x=(this._shape_cur_x16+32768>>16)+this._shape_ix+_,l[d].y=(this._shape_cur_y16+32768>>16)+this._shape_iy+a,d++);this._shape_prev_x=this._shape_cur_x,this._shape_prev_y=this._shape_cur_y,this._shape_prev_x16=this._shape_cur_x16,this._shape_prev_y16=this._shape_cur_y16,u(this._vertices,0,this._vid._layerScale),this._gfx.drawPolygon(this._primitiveColor,this._hasAlphaColor,this._vertices,h)}e.offset=l}async op_refreshAll(){this._frameDelay=5,await this.setPalette(),this.swapLayers(),this._creditsSlowText=255,this.op_handleKeys()}op_drawShapeScale(){this._shape_count=0;let e=0,t=0,s=this.fetchNextCmdWord();32768&s&&(e=this.fetchNextCmdWord()<<16>>16,t=this.fetchNextCmdWord()<<16>>16);let i=(this.fetchNextCmdWord()+512)%65536;this._shape_ix=this.fetchNextCmdByte(),this._shape_iy=this.fetchNextCmdByte();const _=new r.Buffer(this._polPtr.buffer,r.READ_BE_UINT16(this._polPtr.buffer,2)),a=new r.Buffer(this._polPtr.buffer,r.READ_BE_UINT16(this._polPtr.buffer,14)),o=new r.Buffer(this._polPtr.buffer,r.READ_BE_UINT16(this._polPtr.buffer,10)),n=new r.Buffer(this._polPtr.buffer,r.READ_BE_UINT16(this._polPtr.buffer,18)),l=a.from(r.READ_BE_UINT16(_,2*(2047&s)));let h=r.READ_BE_UINT16(l);if(l.offset+=2,0!==h){let s=r.READ_BE_UINT16(l),_=0,a=0;32768&s&&(_=r.READ_BE_UINT16(l,2)<<16>>16,a=r.READ_BE_UINT16(l,4)<<16>>16);let c=n.from(r.READ_BE_UINT16(o,2*(16383&s))+1);for(this._shape_ox=(r.READ_BE_UINT16(c)<<16>>16)+_,c.offset+=2,this._shape_oy=(r.READ_BE_UINT16(c)<<16>>16)+a,c.offset+=2;h--;){s=r.READ_BE_UINT16(l),l.offset+=2,c=n.from(r.READ_BE_UINT16(o,2*(16383&s))),_=0,a=0,32768&s&&(_=r.READ_BE_UINT16(l)<<16>>16,l.offset+=2,a=r.READ_BE_UINT16(l)<<16>>16,l.offset+=2),this._hasAlphaColor=0!=(16384&s);let h=l.getUint8Array()[0];l.offset++,0===this._clearScreen&&(h+=16),this._primitiveColor=192+h,this.drawShapeScale(c,i,_,a,e,t,0,0),++this._shape_count}}}op_drawShapeScaleRotate(){this._shape_count=0;let e=0,t=0,s=this.fetchNextCmdWord();32768&s&&(e=this.fetchNextCmdWord()<<16>>16,t=this.fetchNextCmdWord()<<16>>16);let i,_,a,o=512;16384&s&&(o=(o+this.fetchNextCmdWord())%65536),this._shape_ix=this.fetchNextCmdByte(),this._shape_iy=this.fetchNextCmdByte(),i=this.fetchNextCmdWord(),_=180,8192&s&&(_=this.fetchNextCmdWord()),a=90,4096&s&&(a=this.fetchNextCmdWord()),this.setRotationTransform(i,_,a);const n=new r.Buffer(this._polPtr.buffer,r.READ_BE_UINT16(this._polPtr.buffer,2)),l=new r.Buffer(this._polPtr.buffer,r.READ_BE_UINT16(this._polPtr.buffer,14)),h=new r.Buffer(this._polPtr.buffer,r.READ_BE_UINT16(this._polPtr.buffer,10)),c=new r.Buffer(this._polPtr.buffer,r.READ_BE_UINT16(this._polPtr.buffer,18)),u=l.from(r.READ_BE_UINT16(n,2*(2047&s)));let p=r.READ_BE_UINT16(u);for(u.offset+=2;p--;){let s=r.READ_BE_UINT16(u);u.offset+=2;const i=c.from(r.READ_BE_UINT16(h,2*(16383&s)));let _=0,a=0;32768&s&&(_=r.READ_BE_UINT16(u)<<16>>16,u.offset+=2,a=r.READ_BE_UINT16(u)<<16>>16,u.offset+=2),this._hasAlphaColor=0!=(16384&s);let n=u.getUint8Array()[0];u.offset++,0===this._clearScreen&&(n+=16),this._primitiveColor=192+n,this.drawShapeScaleRotate(i,o,_,a,e,t,0,0),++this._shape_count}}setRotationTransform(e,t,s){let i=h(e),r=c(e),_=h(s),a=c(s),o=h(t),n=c(t);this._rotMat[0]=(r*n>>8)-((a*i>>8)*o>>8),this._rotMat[1]=(i*n>>8)+((a*r>>8)*o>>8),this._rotMat[2]=_*i>>8,this._rotMat[3]=-_*r>>8}async op_markCurPos(){this._cmdPtrBak=this._cmdPtr,this._cmdPtrBakOffset=this._cmdPtrOffset,this.drawCreditsText(),this._frameDelay=5,await this.setPalette(),this.swapLayers(),this._creditsSlowText=0}op_drawCaptionText(){const e=this.fetchNextCmdWord();if(!this._creditsSequence){if(57===this._id&&65535===e&&(this._res.isDOS()&&this._cmdPtr.byteOffset-this._cmdPtrBak.byteOffset==16||this._res.isAmiga()&&this._cmdPtr.byteOffset-this.getCommandData().byteOffset==2547))return this._frameDelay=100,void this.setPalette();const t=45*this._vid._layerScale,s=o.Video.GAMESCREEN_H*this._vid._layerScale-t;if(this._pageC.fill(192,s*this._vid._w,s*this._vid._w+t*this._vid._w),this._page1.fill(192,s*this._vid._w,s*this._vid._w+t*this._vid._w),this._page0.fill(192,s*this._vid._w,s*this._vid._w+t*this._vid._w),65535!==e){const t=this._res.getCineString(e);t&&(this.drawText(0,129,t,239,this._page1,1),this.drawText(0,129,t,239,this._pageC,1))}}}op_refreshScreen(){this._clearScreen=this.fetchNextCmdByte(),0!==this._clearScreen&&(this.swapLayers(),this._creditsSlowText=0)}async op_waitForSync(){if(this._creditsSequence){this.fetchNextCmdByte();throw"op_waitForSync -> creditsSequence not implemented"}this._frameDelay=4*this.fetchNextCmdByte(),await this.sync()}drawShape(e,t,s){const i=e.offset;this._gfx.setLayer(this._page1,this._vid._w);let _=e.getUint8Array()[0];if(e.offset++,128&_){const i={x:r.READ_BE_UINT16(e)+t,y:r.READ_BE_UINT16(e,2)+s};e.offset+=4;const _=r.READ_BE_UINT16(e);e.offset+=2;const a=r.READ_BE_UINT16(e);e.offset+=2,u(0,0,this._vid._layerScale),this._gfx.drawEllipse(this._primitiveColor,this._hasAlphaColor,i,_,a)}else if(0===_){const t={x:r.READ_BE_UINT16(e),y:r.READ_BE_UINT16(e,2)};e.offset+=4,u(0,0,this._vid._layerScale),this._gfx.drawPoint(this._primitiveColor,t)}else{const i=this._vertices;let a=0,o=r.READ_BE_UINT16(e);e.offset+=2;let n=r.READ_BE_UINT16(e);e.offset+=2,i[a].x=o+t,i[a].y=n+s,a++;let l=_-1;for(++_;l>=0;--l){const r=e.getUint8Array(),h=r[0]<<24>>24,c=r[1]<<24>>24,u=r[3];e.offset+=2,0===c&&0!==l&&0===u?(o+=h,--_):(o+=h,n+=c,i[a].x=o+t,i[a].y=n+s,a++)}u(this._vertices,0,this._vid._layerScale),this._gfx.drawPolygon(this._primitiveColor,this._hasAlphaColor,this._vertices,_)}e.offset=i}op_drawShape(){let e=0,t=0,s=this.fetchNextCmdWord();32768&s&&(e=this.fetchNextCmdWord()<<16>>16,t=this.fetchNextCmdWord()<<16>>16);const i=new r.Buffer(this._polPtr.buffer,r.READ_BE_UINT16(this._polPtr.buffer,2)),_=new r.Buffer(this._polPtr.buffer,r.READ_BE_UINT16(this._polPtr.buffer,14)),a=new r.Buffer(this._polPtr.buffer,r.READ_BE_UINT16(this._polPtr.buffer,10)),o=new r.Buffer(this._polPtr.buffer,r.READ_BE_UINT16(this._polPtr.buffer,18)),n=_.from(r.READ_BE_UINT16(i,2*(2047&s)));let l=r.READ_BE_UINT16(n);for(n.offset+=2;l--;){const s=r.READ_BE_UINT16(n);n.offset+=2;const i=o.from(r.READ_BE_UINT16(a,2*(16383&s)));let _=0,l=0;32768&s&&(_=r.READ_BE_UINT16(n)<<16>>16,n.offset+=2,l=r.READ_BE_UINT16(n)<<16>>16,n.offset+=2),this._hasAlphaColor=0!=(16384&s);let h=n.getUint8Array()[0];n.offset++,0===this._clearScreen&&(h+=16),this._primitiveColor=192+h,this.drawShape(i,e+_,t+l)}0!==this._clearScreen&&this._pageC.set(this._page1.subarray(0,this._vid._layerSize))}swapLayers(){0===this._clearScreen?this._page1.set(this._pageC.subarray(0,this._vid._layerSize)):this._page1.fill(192,0,this._vid._layerSize)}op_drawCreditsText(){if(this._creditsSlowText=255,this._textCurBuf&&0===this._textCurBufOffset)throw"TODO: _textCurBuf";this._page1.set(this._page0.subarray(0,this._vid._layerSize)),this._frameDelay=10,this.setPalette()}op_handleKeys(){for(;;){const e=this.fetchNextCmdByte();if(255===e)return;let t=!0;switch(e){case 1:t=0!=(this._stub._pi.dirMask&a.DIR_UP);break;case 2:t=0!=(this._stub._pi.dirMask&a.DIR_DOWN);break;case 4:t=0!=(this._stub._pi.dirMask&a.DIR_LEFT);break;case 8:t=0!=(this._stub._pi.dirMask&a.DIR_RIGHT);break;case 128:t=this._stub._pi.space||this._stub._pi.enter||this._stub._pi.shift}if(t)break;this._cmdPtrOffset+=2}this._stub._pi.dirMask=0,this._stub._pi.enter=!1,this._stub._pi.space=!1,this._stub._pi.shift=!1;let e=this.fetchNextCmdWord()<<16>>16;if(e<0){if(e=-e-1,0==this._varKey)return void(this._stop=!0);if(this._varKey!==e)return this._cmdPtr=this._cmdPtrBak,void(this._cmdPtrOffset=this._cmdPtrBakOffset);this._varKey=0,--e,this._cmdPtr=this.getCommandData(),this._cmdPtrOffset=0,e=r.READ_BE_UINT16(this._cmdPtr,2*e+2)}this._res.isMac()&&(this._cmdPtr=this.getCommandData(),this._cmdPtrOffset=0,this._baseOffset=r.READ_BE_UINT16(this._cmdPtr,2+2*e),e=0),this._cmdPtr=this._cmdPtrBak=this.getCommandData(),this._cmdPtrBakOffset=this._cmdPtrOffset=e+this._baseOffset}drawCreditsText(){if(this._creditsSequence)throw"Cutscene::drawCreditsText not implemented!"}static readSetShapeOffset(e,t){const s=r.READ_BE_UINT16(e,t);t+=2;for(let i=0;i<s-1;++i){t+=5;const s=e[t++];t+=6,t+=255==s?4:4*s}return t}static readSetPalette(e,t,s){t+=12;for(let i=0;i<16;++i){const _=r.READ_BE_UINT16(e,t);t+=2,s[i]=_}}drawSetShape(e,t,s,i,_){const a=r.READ_BE_UINT16(e,t);t+=2;for(let o=0;o<a-1;++o){t+=5;const a=e[t++],o=r.READ_BE_UINT16(e,t)<<16>>16;t+=2;const n=r.READ_BE_UINT16(e,t)<<16>>16,l=_[e[t+=2]];if(t+=2,255===a){let _=r.READ_BE_UINT16(e,t)<<16>>16;t+=2;let a=r.READ_BE_UINT16(e,t)<<16>>16;t+=2;let h={x:s+o,y:i+n};u(0,0,this._vid._layerScale),this._gfx.drawEllipse(l,!1,h,_,a)}else{for(let _=0;_<a;++_)this._vertices[_].x=s+(r.READ_BE_UINT16(e,t)<<16>>16),t+=2,this._vertices[_].y=i+(r.READ_BE_UINT16(e,t)<<16>>16),t+=2;u(this._vertices,0,this._vid._layerScale),this._gfx.drawPolygon(l,!1,this._vertices,a)}}}async playSet(e,t){const s=new Array(p.kMaxShapesCount).fill(null).map((()=>({offset:0,size:0}))),i=r.READ_BE_UINT16(e,t);if(t+=2,i>p.kMaxShapesCount)throw`Assertion failed: ${i} > ${p.kMaxShapesCount}`;for(let r=0;r<i;++r){let i=p.readSetShapeOffset(e,t);s[r].offset=t,s[r].size=i-t,t=i+45}const _=new Array(p.kMaxShapesCount).fill(null).map((()=>({offset:0,size:0}))),a=r.READ_BE_UINT16(e,t);if(t+=2,a>p.kMaxShapesCount)throw`Assertion failed: ${a} > ${p.kMaxShapesCount}`;for(let s=0;s<a;++s){const i=p.readSetShapeOffset(e,t);_[s].offset=t,_[s].size=i-t,t=i+45}this.prepare(),this._gfx.setLayer(this._page1,this._vid._w),t=10;const n=r.READ_BE_UINT16(e,t);t+=2;for(let i=0;i<n&&!this._stub._pi.quit&&!this._interrupted;++i){const i=this._stub.getTimeStamp();this._page1.fill(192,0,this._vid._layerSize);const a=r.READ_BE_UINT16(e,t);t+=2;const n=r.READ_BE_UINT16(e,t);t+=2;const l=new Uint16Array(p.kMaxPaletteSize);l.fill(0),p.readSetPalette(e,s[a].offset+s[a].size,l);let h=16;const c=new Uint8Array(p.kMaxPaletteSize);for(let e=0;e<16;++e)c[e]=192+e;this.drawSetShape(e,s[a].offset,0,0,c);for(let s=0;s<n;++s){const s=r.READ_BE_UINT16(e,t);t+=2;const i=r.READ_BE_UINT16(e,t)<<16>>16;t+=2;const a=r.READ_BE_UINT16(e,t)<<16>>16;t+=2;const o=new Uint16Array(16);p.readSetPalette(e,_[s].offset+_[s].size,o);for(let e=0;e<16;++e){let t=!1;for(let s=0;s<h;++s)if(o[e]===l[s]){t=!0,c[e]=192+s;break}if(!t){if(h>=p.kMaxPaletteSize)throw`Assertion failed: ${h} < ${p.kMaxPaletteSize}`;c[e]=192+h,l[h++]=o[e]}}this.drawSetShape(e,_[s].offset,i,a,c)}for(let e=0;e<h;++e){const t=o.Video.AMIGA_convertColor(l[e]);this._stub.setPaletteEntry(192+e,t)}this._stub.copyRect(0,0,this._vid._w,this._vid._h,this._page1,this._vid._w),await this._stub.updateScreen(0);const u=90-(this._stub.getTimeStamp()-i);await this._stub.sleep(u<16?16:u),await this._stub.processEvents(),this._stub._pi.backspace&&(this._stub._pi.backspace=!1,this._interrupted=!0)}}}p._namesTableDOS=n._namesTableDOS,p._offsetsTableDOS=n._offsetsTableDOS,p._offsetsTableAmiga=n._offsetsTableAmiga,p._amigaDemoOffsetsTable=n._amigaDemoOffsetsTable,p._ssiOffsetsTable=n._ssiOffsetsTable,p._cosTable=n._cosTable,p._sinTable=n._sinTable,p._creditsDataDOS=n._creditsDataDOS,p._creditsDataAmiga=n._creditsDataAmiga,p._creditsCutSeq=n._creditsCutSeq,p._musicTable=n._musicTable,p._protectionShapeData=n._protectionShapeData,p._frTextsTable=n._frTextsTable,p._enTextsTable=n._enTextsTable,p._caillouSetData=n._caillouSetData,p.kMaxPaletteSize=32,p.kMaxShapesCount=16,t.Cutscene=p},10:function(e,t,s){t.__esModule=!0;var i,r=e(18),_=e(2),a=e(19),o=e(20),n=e(21);class l{contructor(){this.data=null,this.len=0}getPCM(e){return e<0?e=0:e>=this.len&&(e=this.len-1),this.data[e]}}!function(e){e[e.MT_NONE=0]="MT_NONE",e[e.MT_MOD=1]="MT_MOD",e[e.MT_OGG=2]="MT_OGG",e[e.MT_SFX=3]="MT_SFX",e[e.MT_CPC=4]="MT_CPC"}(i||(i={}));const h=1e3;class c{constructor(e,t){this._channels=new Array(4).fill(null).map((()=>({active:!1,volume:0,chunk:new l,chunkPos:0,chunkInc:0}))),this._stub=t,this._musicType=i.MT_NONE,this._cpc=new r.CpcPlayer(this,e),this._mod=new a.ModPlayer(this,e),this._ogg=new o.OggPlayer(this,e),this._sfx=new n.SfxPlayer(this),this._musicTrack=-1,this._backgroundMusicType=i.MT_NONE}init(){for(let e=0;e<4;++e)this._channels[e]={active:!1,volume:0,chunk:new l,chunkPos:0,chunkInc:0};this._premixHook=null}playMusic(e){if(e>h&&e!==this._musicTrack){if(this._ogg.playTrack(e-h))return this._musicType=i.MT_OGG,void(this._musicTrack=e);if(this._cpc.playTrack(e-h))return this._backgroundMusicType=this._musicType=i.MT_CPC,void(this._musicTrack=e)}if(1===e&&(this._cpc.playTrack(2)||this._ogg.playTrack(2)))return this._backgroundMusicType=this._musicType=i.MT_OGG,void(this._musicTrack=2);(this._musicType!=i.MT_OGG&&this._musicType!=i.MT_CPC||!c.isMusicSfx(e))&&(c.isMusicSfx(e)?(this._sfx.play(e),this._sfx._playing&&(this._musicType=i.MT_SFX)):(this._mod.play(e),this._mod._playing&&(this._musicType=i.MT_MOD)))}stopMusic(){switch(this._musicType){case i.MT_NONE:break;case i.MT_MOD:this._mod.stop();break;case i.MT_OGG:this._ogg.pauseTrack();break;case i.MT_SFX:this._sfx.stop();break;case i.MT_CPC:this._cpc.pauseTrack()}if(this._musicType=i.MT_NONE,-1!==this._musicTrack)switch(this._backgroundMusicType){case i.MT_OGG:this._ogg.resumeTrack(),this._musicType=i.MT_OGG;break;case i.MT_CPC:this._cpc.resumeTrack(),this._musicType=i.MT_CPC}}mix(e,t){this._premixHook&&(this._premixHook(this._premixHookData,e,t)||(this._premixHook=null,this._premixHookData=null));for(let s=0;s<4;++s){const i=this._channels[s];if(i.active)for(let s=0;s<t;++s){if(i.chunkPos>>12>=i.chunk.len-1){i.active=!1;break}const t=i.chunk.getPCM(i.chunkPos>>12)*Math.floor(i.volume/64);e[s]=_.ADDC_S16(e[s],_.S8_to_S16(t)),i.chunkPos+=i.chunkInc}}c.kUseNr&&c.nr(e,t)}play(e,t,s,i){this._stub.postMessageToSoundProcessor({message:"play",buffer:e,len:t,freq:s,volume:i})}stopAll(){for(let e=0;e<4;++e)this._channels[e].active=!1}isPlaying(e){for(let t=0;t<4;++t){const s=this._channels[t];if(s.active&&s.chunk.data===e)return!0}return!1}}c.MUSIC_TRACK=1e3,c.kUseNr=!1,c.isMusicSfx=e=>e>=68&&e<=75,c.nr=(e,t)=>{let s=0;for(let i=0;i<t;++i){const t=e[i]>>1;e[i]=t+s,s=t}},t.Mixer=c,t.MAX_VOLUME=64},11:function(e,t,s){t.__esModule=!0;var i=e(22),r=e(4),_=e(2),a=e(23),o=e(15),n=e(24);const l=e=>{e.peak=Math.abs(e.data[0]);for(let t=1;t<e.len;++t){const s=e.data[t];Math.abs(s)>e.peak&&(e.peak=Math.abs(s)),e.data[t]=s/2>>0}},h={Id:{LI_01_CONTINUE_OR_ABORT:0,LI_02_TIME:1,LI_03_CONTINUE:2,LI_04_ABORT:3,LI_05_COMPLETED:4,LI_06_LEVEL:5,LI_07_START:6,LI_08_SKILL:7,LI_09_PASSWORD:8,LI_10_INFO:9,LI_11_QUIT:10,LI_12_SKILL_LEVEL:11,LI_13_EASY:12,LI_14_NORMAL:13,LI_15_EXPERT:14,LI_16_ENTER_PASSWORD1:15,LI_17_ENTER_PASSWORD2:16,LI_18_RESUME_GAME:17,LI_19_ABORT_GAME:18,LI_20_LOAD_GAME:19,LI_21_SAVE_GAME:20,LI_22_SAVE_SLOT:21,LI_23_DEMO:22,LI_NUM:23},_textsTableFR:o._textsTableFR,_textsTableEN:o._textsTableEN,_textsTableDE:o._textsTableDE,_textsTableSP:o._textsTableSP,_textsTableIT:o._textsTableIT,_stringsTableFR:o._stringsTableFR,_stringsTableEN:o._stringsTableEN,_stringsTableDE:o._stringsTableDE,_stringsTableSP:o._stringsTableSP,_stringsTableIT:o._stringsTableIT,_stringsTableJP:o._stringsTableJP,_level1TbnJP:o._level1TbnJP,_level2TbnJP:o._level2TbnJP,_level3TbnJP:o._level3TbnJP,_level41TbnJP:o._level41TbnJP,_level42TbnJP:o._level42TbnJP,_level51TbnJP:o._level51TbnJP,_level52TbnJP:o._level52TbnJP,_cineBinJP:o._cineBinJP,_cineTxtJP:o._cineTxtJP};var c;!function(e){e[e.OT_MBK=0]="OT_MBK",e[e.OT_PGE=1]="OT_PGE",e[e.OT_PAL=2]="OT_PAL",e[e.OT_CT=3]="OT_CT",e[e.OT_MAP=4]="OT_MAP",e[e.OT_SPC=5]="OT_SPC",e[e.OT_RP=6]="OT_RP",e[e.OT_RPC=7]="OT_RPC",e[e.OT_DEMO=8]="OT_DEMO",e[e.OT_ANI=9]="OT_ANI",e[e.OT_OBJ=10]="OT_OBJ",e[e.OT_TBN=11]="OT_TBN",e[e.OT_SPR=12]="OT_SPR",e[e.OT_TAB=13]="OT_TAB",e[e.OT_ICN=14]="OT_ICN",e[e.OT_FNT=15]="OT_FNT",e[e.OT_TXTBIN=16]="OT_TXTBIN",e[e.OT_CMD=17]="OT_CMD",e[e.OT_POL=18]="OT_POL",e[e.OT_SPRM=19]="OT_SPRM",e[e.OT_OFF=20]="OT_OFF",e[e.OT_CMP=21]="OT_CMP",e[e.OT_OBC=22]="OT_OBC",e[e.OT_SPL=23]="OT_SPL",e[e.OT_LEV=24]="OT_LEV",e[e.OT_SGD=25]="OT_SGD",e[e.OT_BNQ=26]="OT_BNQ",e[e.OT_SPM=27]="OT_SPM"}(c||(c={}));const u=1287;class p{static getTextBin(e,t){switch(e){case _.Language.LANG_FR:return"TBF";case _.Language.LANG_DE:return"TBG";case _.Language.LANG_SP:return"TBS";case _.Language.LANG_IT:return"TBI";case _.Language.LANG_EN:default:return"TBN"}}constructor(e,t,s){if(this._bankBuffers=new Array(50).fill(null).map((()=>({entryNum:0,ptr:null}))),this._rp=new Uint8Array(74),this._ctData=new Int8Array(7424),this._sprData=new Array(u),this._sprm=new Uint8Array(65536),this._pgeInit=new Array(256).fill(null).map((()=>_.CreateInitPGE())),this._objectNodesMap=new Array(255),this._fs=e,this._type=t,this._lang=s,this._isDemo=!1,this._aba=null,this._mac=null,this._cine_txt=null,this._cine_off=null,this._perso=null,this._monster=null,this._str=null,this._credits=null,this._dem=null,this._demLen=0,this._resourceMacDataSize=0,this._cmd=null,this._pol=null,this._cineStrings=null,this._fnt=null,this._mbk=null,this._icn=null,this._icnLen=0,this._tab=null,this._spc=null,this._numSpc=0,this._pal=null,this._ani=null,this._tbn=null,this._spr1=null,this._pgeNum=0,this._map=null,this._lev=null,this._levNum=0,this._sgd=null,this._bnq=null,this._readUint16=this._type===_.ResourceType.kResourceTypeDOS?_.READ_LE_UINT16:_.READ_BE_UINT16,this._readUint32=this._type===_.ResourceType.kResourceTypeDOS?_.READ_LE_UINT32:_.READ_BE_UINT32,this._scratchBuffer=new Uint8Array(72704),!this._scratchBuffer)throw"Unable to allocate temporary memory buffer";if(this._bankData=new Uint8Array(28672),!this._bankData)throw"Unable to allocate bank data buffer";this._bankDataTail=28672,this.clearBankData()}isDOS(){return this._type===_.ResourceType.kResourceTypeDOS}isAmiga(){return this._type===_.ResourceType.kResourceTypeAmiga}isMac(){return this._type===_.ResourceType.kResourceTypeMac}MAC_decodeImageData(e,t,s){let r=0;const a=_.READ_BE_UINT16(e);if(r=2,49681!==a&&49411!==a)throw`assertion failed: ${a} === 0xC211 || ${a} === 0xC103`;const o=_.READ_BE_UINT16(e,r);if(r+=2,t>=o)throw`assertion failed: ${t} count`;r+=4;const n=_.READ_BE_UINT16(e,r+4*t);if(0!==n){r=n;const t=_.READ_BE_UINT16(e,r);r+=2;const o=_.READ_BE_UINT16(e,r);switch(r+=2,a){case 49681:i.decodeC211(new Uint8Array(e,r+4),t,o,s);break;case 49411:i.decodeC103(new Uint8Array(e,r),t,o,s)}}}async init(){switch(this._type){case _.ResourceType.kResourceTypeAmiga:this._isDemo=this._fs.exists("demo.lev");break;case _.ResourceType.kResourceTypeDOS:this._fs.exists(a.ResourceAba.FILENAME)&&(this._aba=new a.ResourceAba(this._fs),await this._aba.readEntries(),this._isDemo=!0),this.fileExists("LEVEL1.MAP")||(this._isDemo=!0);break;case _.ResourceType.kResourceTypeMac:}}unload(e){switch(e){case c.OT_CMD:this._cmd=null;break;case c.OT_POL:this._pol=null;break;case c.OT_CMP:this._cmd=null,this._pol=null;break;default:console.error(`Unimplemented Resource::unload() type ${e}`)}}async load(e,t,s=""){let i=null;switch(t){case c.OT_RP:this._entryName=`${e}.RP`,i=this.load_RP.bind(this);break;case c.OT_PAL:this._entryName=`${e}.PAL`,i=this.load_PAL.bind(this);break;case c.OT_TBN:this._entryName=`${e}.${p.getTextBin(this._lang,this._type)}`,this._fs.exists(this._entryName)||(this._entryName=`${e}.TBN`),i=this.load_TBN.bind(this);break;case c.OT_ANI:this._entryName=`${e}.ANI`,i=this.load_ANI.bind(this);break;case c.OT_BNQ:this._entryName=`${e}.BNQ`,i=this.load_BNQ.bind(this);break;case c.OT_SPM:this._entryName=`${e}.SPM`,i=this.load_SPM.bind(this);break;case c.OT_SPRM:this._entryName=`${e}.SPR`,i=this.load_SPRM.bind(this);break;case c.OT_MBK:this._entryName=`${e}.MBK`,i=this.load_MBK.bind(this);break;case c.OT_FNT:this._entryName=`${e}.FNT`,i=this.load_FNT.bind(this);break;case c.OT_CMD:this._entryName=`${e}.CMD`,i=this.load_CMD.bind(this);break;case c.OT_PGE:this._entryName=`${e}.PGE`,i=this.load_PGE.bind(this);break;case c.OT_CT:this._entryName=`${e}.CT`,i=this.load_CT.bind(this);break;case c.OT_POL:this._entryName=`${e}.POL`,i=this.load_POL.bind(this);break;case c.OT_ICN:this._entryName=`${e}.ICN`,i=this.load_ICN.bind(this);break;case c.OT_SPC:this._entryName=`${e}.SPC`,i=this.load_SPC.bind(this);break;case c.OT_SPR:this._entryName=`${e}.SPR`,i=this.load_SPR.bind(this);break;case c.OT_SGD:this._entryName=`${e}.SGD`,i=this.load_SGD.bind(this);break;case c.OT_LEV:this._entryName=`${e}.LEV`,i=this.load_LEV.bind(this);break;case c.OT_OBJ:this._entryName=`${e}.OBJ`,i=this.load_OBJ.bind(this);break;default:throw`load not implemented for ${t} !`}s&&(this._entryName=`${e}.${s}`);const a=new r.File;if(!await a.open(this._entryName,"rb",this._fs)){if(this._aba){const{dat:e,size:s}=this._aba.loadEntry(this._entryName);if(e){switch(t){case c.OT_PAL:this._pal=e;break;case c.OT_MBK:this._mbk=e;break;case c.OT_FNT:this._fnt=e;break;case c.OT_PGE:this.decodePGE(e,s);break;case c.OT_BNQ:this._bnq=e;break;case c.OT_ANI:this._ani=e;break;case c.OT_TBN:this._tbn=e;break;case c.OT_RP:if(74!==s)throw`Unexpected size ${s} for '${this._entryName}'`;this._rp.set(e.subarray(0,s));break;case c.OT_CMD:this._cmd=e;break;case c.OT_CT:if(!n.bytekiller_unpack(new Uint8Array(this._ctData.buffer),this._ctData.byteLength,e,s))throw`Bad CRC for '${this._entryName}`;break;case c.OT_POL:this._pol=e;break;case c.OT_ICN:this._icn=e;break;case c.OT_SPC:this._spc=e,this._numSpc=_.READ_BE_UINT16(this._spc.buffer)/2;break;case c.OT_OBJ:if(this._numObjectNodes=_.READ_LE_UINT16(e),230!==this._numObjectNodes)throw`Assertion failed: ${230===this._numObjectNodes}`;this.decodeOBJ(e.subarray(2,s-2),s-2);break;default:throw`${t} not supported!`}return}}else if(this._isDemo)switch(t){case c.OT_CMD:case c.OT_POL:console.warn(`Unable to load '${this._entryName}' type %${t}`)}throw`Cannot open ${this._entryName}`}if(!i)throw`assertion failed ${i}`;if(i(a),a.ioErr())throw`I/O error when reading '${this._entryName}'`}decodePGE(e,t){let s=0;if(this._pgeNum=this._readUint16(e),s+=2,this._pgeInit=this._pgeInit.fill(null).map((()=>_.CreateInitPGE())),this._pgeNum>this._pgeInit.length)throw`Assertion failed: ${this._pgeNum} <= ${this._pgeInit.length}`;for(let t=0;t<this._pgeNum;++t){const i=this._pgeInit[t];i.type=this._readUint16(e,s),s+=2,i.pos_x=this._readUint16(e,s),s+=2,i.pos_y=this._readUint16(e,s),s+=2,i.obj_node_number=this._readUint16(e,s),s+=2,i.life=this._readUint16(e,s),s+=2;for(let t=0;t<4;++t)i.counter_values[t]=this._readUint16(e,s),s+=2;i.object_type=e[s++],i.init_room=e[s++],i.room_location=e[s++],i.init_flags=e[s++],i.colliding_icon_num=e[s++],i.icon_num=e[s++],i.object_id=e[s++],i.skill=e[s++],i.mirror_x=e[s++],i.flags=e[s++],i.unk1C=e[s++],s++,i.text_num=this._readUint16(e,s),s+=2}}decodeOBJ(e,t){const s=new Uint32Array(256);let i=0;this._numObjectNodes=230,this._type===_.ResourceType.kResourceTypeMac&&(this._numObjectNodes=this._readUint16(e),i+=2);for(let t=0;t<this._numObjectNodes;++t)s[t]=this._readUint32(e,i),i+=4;s[this._numObjectNodes]=t;let r=0;const a=new Uint16Array(256);for(let e=0;e<this._numObjectNodes;++e){let t=s[e+1]-s[e];0!==t&&(a[r]=(t-2)/18>>0,++r)}let o=0,n=null,l=0;for(let t=0;t<this._numObjectNodes;++t){if(o!==s[t]){const i={last_obj_number:0,objects:null,num_objects:0};if(!i)throw`Unable to allocate ObjectNode num=${t}`;let r=s[t];i.last_obj_number=this._readUint16(e,r),r+=2,i.num_objects=a[l],i.objects=new Array(i.num_objects);for(let t=0;t<i.num_objects;++t){const s=_.CreateObj();s.type=this._readUint16(e,r),r+=2,s.dx=e[r++]<<24>>24,s.dy=e[r++]<<24>>24,s.init_obj_type=this._readUint16(e,r),r+=2,s.opcode2=e[r++],s.opcode1=e[r++],s.flags=e[r++],s.opcode3=e[r++],s.init_obj_number=this._readUint16(e,r),r+=2,s.opcode_arg1=this._readUint16(e,r)<<16>>16,r+=2,s.opcode_arg2=this._readUint16(e,r)<<16>>16,r+=2,s.opcode_arg3=this._readUint16(e,r)<<16>>16,r+=2,i.objects[t]=s}++l,o=s[t],n=i}this._objectNodesMap[t]=n}}load_SPM(e){const t=178647,s=e.size();e.seek(s-4);const i=e.readUint32BE();e.seek(0);const r=new Uint8Array(s);if(!r)throw"Unable to allocate SPM temporary buffer";if(e.read(r.buffer,s),i===t){if(this._spr1=new Uint8Array(i),!this._spr1)throw"Unable to allocate SPR1 buffer";if(!n.bytekiller_unpack(this._spr1,i,r,s))throw"Bad CRC for SPM data"}else{if(i>this._sprm.byteLength)throw`Assertion error: ${i} <= ${this._sprm.byteLength}`;if(!n.bytekiller_unpack(this._sprm,this._sprm.byteLength,r,s))throw"Bad CRC for SPM data"}for(let e=0;e<u;++e){const s=p._spmOffsetsTable[e];this._sprData[e]=s>=t?this._sprm.subarray(s-t):this._spr1.subarray(s)}}load_SPRM(e){const t=e.size()-12;if(t>this._sprm.byteLength)throw`Assertion error: ${t} <= ${this._sprm.byteLength}`;e.seek(12),e.read(this._sprm.buffer,t)}load_PGE(e){if(this._type===_.ResourceType.kResourceTypeAmiga){const t=e.size(),s=new Uint8Array(t);if(!s)throw"Unable to allocate PGE temporary buffer";return e.read(s.buffer,t),void this.decodePGE(s,t)}if(this._pgeNum=e.readUint16LE(),this._pgeNum>this._pgeInit.length)throw`Assertion error: ${this._pgeNum} <= ${this._pgeInit.length}`;for(let t=0;t<this._pgeNum;++t){const s=this._pgeInit[t];s.type=e.readUint16LE(),s.pos_x=e.readUint16LE(),s.pos_y=e.readUint16LE(),s.obj_node_number=e.readUint16LE(),s.life=e.readUint16LE();for(let t=0;t<4;++t)s.counter_values[t]=e.readUint16LE();s.object_type=e.readByte(),s.init_room=e.readByte(),s.room_location=e.readByte(),s.init_flags=e.readByte(),s.colliding_icon_num=e.readByte(),s.icon_num=e.readByte(),s.object_id=e.readByte(),s.skill=e.readByte(),s.mirror_x=e.readByte(),s.flags=e.readByte(),s.unk1C=e.readByte(),e.readByte(),s.text_num=e.readUint16LE()}}load_OBJ(e){throw"load_OBJ: not implemented!"}load_ANI(e){const t=e.size();if(this._ani=new Uint8Array(t),!this._ani)throw"Unable to allocate ANI buffer";e.read(this._ani.buffer,t)}load_LEV(e){const t=e.size();if(this._lev=new Uint8Array(t),!this._lev)throw"Unable to allocate LEV buffer";e.read(this._lev.buffer,t)}load_BNQ(e){const t=e.size();if(this._bnq=new Uint8Array(t),!this._bnq)throw"Unable to allocate BNQ buffer";e.read(this._bnq.buffer,t)}load_SGD(e){const t=e.size();if(this._type===_.ResourceType.kResourceTypeDOS){if(this._sgd=new Uint8Array(t),!this._sgd)throw"Unable to allocate SGD buffer";return e.read(this._sgd.buffer,t),void(this._sgd[0]=0)}e.seek(t-4);const s=e.readUint32BE();e.seek(0);const i=new Uint8Array(t);if(!i)throw"Unable to allocate SGD temporary buffer";if(e.read(i,t),this._sgd=new Uint8Array(s),!this._sgd)throw"Unable to allocate SGD buffer";if(!n.bytekiller_unpack(this._sgd,s,i,t))throw"Bad CRC for SGD data"}load_PAL(e){const t=e.size();if(this._pal=new Uint8Array(t),!this._pal)throw"Unable to allocate PAL buffer";e.read(this._pal.buffer,t)}load_RP(e){e.read(this._rp.buffer,74)}load_MBK(e){const t=e.size();if(this._mbk=new Uint8Array(t),!this._mbk)throw"Unable to allocate MBK buffer";e.read(this._mbk.buffer,t)}load_CT(e){const t=e.size(),s=new Uint8Array(t);if(!s)throw"Unable to allocate CT buffer";if(e.read(s.buffer,t),!n.bytekiller_unpack(new Uint8Array(this._ctData.buffer),this._ctData.byteLength,s,t))throw"Bad CRC for collision data"}load_FNT(){throw"not implemented: load_FNT!"}async setLanguage(e){this._lang!==e&&(this._lang=e,this.free_TEXT(),this.load_TEXT(),this.free_CINE(),await this.load_CINE())}fileExists(e){return!!this._fs.exists(e)||!!this._aba&&null!==this._aba.findEntry(e)}clearBankData(){this._bankBuffersCount=0,this._bankDataHead=this._bankData}getBankDataSize(e){let t=_.READ_BE_UINT16(this._mbk,6*e+4);switch(this._type){case _.ResourceType.kResourceTypeAmiga:32768&t&&(t=-(t<<16>>16));break;case _.ResourceType.kResourceTypeDOS:if(32768&t){if(this._mbk===this._bnq){t=-(t<<16>>16);break}t&=32767}break;case _.ResourceType.kResourceTypeMac:throw"Assertion Failed: should not get there!"}return 32*t}findBankData(e){for(let t=0;t<this._bankBuffersCount;++t)if(this._bankBuffers[t].entryNum===e)return this._bankBuffers[t].ptr;return null}loadBankData(e){const t=this._mbk.subarray(6*e);let s=_.READ_BE_UINT32(t);this._type==_.ResourceType.kResourceTypeDOS&&(s&=65535);const i=this.getBankDataSize(e);if(this._bankDataTail-this._bankDataHead.byteOffset<i&&this.clearBankData(),this._bankDataHead.byteOffset+i>this._bankDataTail)throw`Assertion failed: ${this._bankDataHead.byteOffset+i} <= ${this._bankDataTail}`;if(this._bankBuffersCount>=this._bankBuffers.length)throw`Assersion failed: ${this._bankBuffersCount} < ${this._bankBuffers.length}`;this._bankBuffers[this._bankBuffersCount].entryNum=e,this._bankBuffers[this._bankBuffersCount].ptr=this._bankDataHead;const r=this._mbk.subarray(s);if(32768&_.READ_BE_UINT16(t,4))this._bankDataHead.set(r.subarray(0,i));else{if(s<=4)throw`Assertion failed: ${s} > 4`;if(i!==_.READ_BE_UINT32(r.buffer,r.byteOffset-4)<<32>>32)throw`Assertion failed: ${i} === ${_.READ_BE_UINT32(r.buffer,r.byteOffset-4)<<32>>32}`;n.bytekiller_unpack(this._bankDataHead,this._bankDataTail,r,0)||console.error(`Bad CRC for bank data ${e}`)}const a=this._bankDataHead;return this._bankDataHead=this._bankDataHead.subarray(i),a}load_TEXT(){switch(this._stringsTable=null,this._lang){case _.Language.LANG_FR:this._stringsTable=h._stringsTableFR;break;case _.Language.LANG_EN:this._stringsTable=h._stringsTableEN;break;case _.Language.LANG_DE:this._stringsTable=h._stringsTableDE;break;case _.Language.LANG_SP:this._stringsTable=h._stringsTableSP;break;case _.Language.LANG_IT:this._stringsTable=h._stringsTableIT;break;case _.Language.LANG_JP:this._stringsTable=h._stringsTableJP}switch(this._textsTable=null,this._lang){case _.Language.LANG_FR:this._textsTable=h._textsTableFR;break;case _.Language.LANG_EN:this._textsTable=h._textsTableEN;break;case _.Language.LANG_DE:this._textsTable=h._textsTableDE;break;case _.Language.LANG_SP:this._textsTable=h._textsTableSP;break;case _.Language.LANG_IT:this._textsTable=h._textsTableIT;break;case _.Language.LANG_JP:this._textsTable=h._textsTableEN}}load_TBN(e){const t=e.size();if(this._tbn=new Uint8Array(t),!this._tbn)throw"Unable to allocate TBN buffer";e.read(this._tbn.buffer,t)}load_CMD(e){throw"TODO: load_CMD"}load_POL(e){const t=e.size();if(this._pol=new Uint8Array(t),!this._pol)throw"Unable to allocate POL buffer (size=${len}";e.read(this._pol,t)}load_ICN(e){const t=e.size();0===this._icnLen&&(this._icn=new Uint8Array(t)),this._icn||console.error("Unable to allocate ICN buffer"),this._icnLen+=t}async load_DEM(e){this._dem=null,this._demLen=0;const t=new r.File;if(await t.open(e,"rb",this._fs))this._demLen=t.size(),this._dem=new Uint8Array(this._demLen),this._dem&&t.read(this._dem,this._demLen);else if(this._aba){const{dat:t,size:s}=this._aba.loadEntry(e);this._dem=t,this._dem&&(this._demLen=s)}}MAC_getPersoFrame(e){return 0}MAC_getMonsterFrame(e){return 0}async load_VCE(e,t){let s={buf:null,bufSize:0},i=o._voicesOffsetsTable[e];if(65535!==i){const e=o._voicesOffsetsTable.subarray(i/2);let _=0;i=2048*e[_++];let a=e[_++];if(t<a){const o=new r.File;if(await o.open("VOICE.VCE","rb",this._fs)){let r=2048*e[_+t]/5;const n=new Uint8Array(r);if(n){let l=0;i+=8192;for(let s=0;s<a;++s){let r=2048*e[_+s];for(let e=0;e<r/10240>>0;++e){if(s===t){o.seek(i);let e=2048;for(;e--;){let e=o.readByte();128&e&&(e=-(127&e)),n[l++]=(255&e)>>>0}}i+=10240}if(s===t)break}s.buf=n,s.bufSize=r}}}}return s}load_SPC(e){const t=e.size();this._spc=new Uint8Array(t),this._spc?(e.read(this._spc,t),this._numSpc=_.READ_BE_UINT16(this._spc.buffer)/2>>0):console.error("Unable to allocate SPC buffer")}load_SPR(e){const t=e.size()-12;this._spr1=new Uint8Array(t),this._spr1?(e.seek(12),e.read(this._spr1.buffer,t)):console.error("Unable to allocate SPR1 buffer")}async load_SPR_OFF(e,t){this._entryName=`${e}.OFF`;let s=null;const i=new r.File;if(await i.open(this._entryName,"rb",this._fs)){const e=i.size();s=new Uint8Array(e),s||console.error("Unable to allocate sprite offsets"),i.read(s.buffer,e),i.ioErr()&&console.error(`I/O error when reading '${this._entryName}'`)}else if(this._aba){s=this._aba.loadEntry(this._entryName).dat}if(s){const e=s;let i,r=0;for(;65535!==(i=_.READ_LE_UINT16(e.buffer,r));){if(i>=u)throw`Assertion failed: ${i} < 1287`;const s=_.READ_LE_UINT32(e.buffer,r+2);this._sprData[i]=4294967295===s?null:t.subarray(s),r+=6}}else console.error(`Cannot load '${this._entryName}'`)}async load_FIB(e){this._entryName=`${e}.FIB`;const t=new r.File;if(await t.open(this._entryName,"rb",this._fs)){this._numSfx=t.readUint16LE(),this._sfxList=new Array(this._numSfx).fill(null).map((()=>({offset:0,freq:0,len:0,peak:0,data:null}))),this._sfxList||console.error("Unable to allocate SoundFx table");for(let e=0;e<this._numSfx;++e){const s=this._sfxList[e];s.offset=t.readUint32LE(),s.len=t.readUint16LE(),s.freq=6e3,s.data=null}for(let e=0;e<this._numSfx;++e){const s=this._sfxList[e];if(0===s.len)continue;t.seek(s.offset);const i=2*s.len-1,r=new Uint8Array(i);r||console.error("Unable to allocate SoundFx data buffer"),s.data=r;let a=0;const o=[-34,-21,-13,-8,-5,-3,-2,-1,0,1,2,3,5,8,13,21];let n=t.readByte()<<24>>24;r[a++]=n,s.peak=Math.abs(n);for(let e=1;e<s.len;++e){const e=t.readByte();n+=o[e>>4],r[a++]=_.CLIP(n,-128,127),Math.abs(n)>s.peak&&(s.peak=Math.abs(n)),n+=o[15&e],r[a++]=_.CLIP(n,-128,127),Math.abs(n)>s.peak&&(s.peak=Math.abs(n))}s.len=i}t.ioErr()&&console.error(`I/O error when reading '${this._entryName}'`)}else console.error(`Cannot open '${this._entryName}'`)}async load_MAP_menu(e,t){const s=57344;this._entryName=`${e}.MAP`;const i=new r.File;if(await i.open(this._entryName,"rb",this._fs))return i.read(t.buffer,s)!=s&&console.error(`Failed to read '${this._entryName}'`),void(i.ioErr()&&console.error(`I/O error when reading '${this._entryName}'`));if(this._aba){const{dat:e,size:i}=this._aba.loadEntry(this._entryName);if(e)return i!==s&&console.error(`Unexpected size ${i} for '${this._entryName}'`),void t.set(e.subarray(0,i))}console.error(`Cannot load '${this._entryName}'`)}async load_PAL_menu(e,t){this._entryName=`${e}.PAL`;const s=new r.File;if(await s.open(this._entryName,"rb",this._fs))return 768!==s.read(t.buffer,768)&&console.error(`Failed to read '${this._entryName}'`),void(s.ioErr()&&console.error(`I/O error when reading '${this._entryName}'`));if(this._aba){const{dat:e,size:s}=this._aba.loadEntry(this._entryName);if(e)return 768!==s&&console.error(`Unexpected size ${s} for '${this._entryName}'`),void t.set(e.subarray(0,s))}console.error(`Cannot load '${this._entryName}'`)}async load_CINE(){const e=p.getCineName(this._lang,this._type);switch(this._type){case _.ResourceType.kResourceTypeAmiga:if(null===this._cine_txt){this._entryName=`${e}CINE.TXT`;const t=new r.File;if(await t.open(this._entryName,"rb",this._fs)){const e=t.size();if(this._cine_txt=new Uint8Array(e+1),!this._cine_txt)throw`Unable to allocate cinematics text data (size=${e})`;if(t.read(this._cine_txt,e),t.ioErr())throw`I/O error when reading '${this._entryName}`;this._cine_txt[e]=0;throw"Resource::load_CINE: Amiga loading not implemented"}if(this._isDemo)return}if(!this._cine_txt)throw`Cannot load '${this._entryName}'`;break;case _.ResourceType.kResourceTypeDOS:if(null===this._cine_off){this._entryName=`${e}.BIN`,this._fs.exists(this._entryName)||(this._entryName="ENGCINE.BIN");const t=new r.File;if(await t.open(this._entryName,"rb",this._fs)){const e=t.size();if(this._cine_off=new Uint8Array(e),!this._cine_off)throw`Unable to allocate cinematics offsets (size=${e})`;if(t.read(this._cine_off,e),t.ioErr())throw`I/O error when reading '${this._entryName}'`}else if(this._aba){const{dat:e}=this._aba.loadEntry(this._entryName);this._cine_off=e}else if(this._isDemo)return}if(!this._cine_off)throw`Cannot load '${this._entryName}'`;if(null===this._cine_txt){this._entryName=`${e}CINE.TXT`,this._fs.exists(this._entryName)||(this._entryName="ENGCINE.TXT");const t=new r.File;if(await t.open(this._entryName,"rb",this._fs)){const e=t.size();if(this._cine_txt=new Uint8Array(e),!this._cine_txt)throw`Unable to allocate cinematics text data (size=${e})`;if(t.read(this._cine_txt,e),t.ioErr())throw`I/O error when reading '${this._entryName}`}else if(this._aba){const{dat:e}=this._aba.loadEntry(this._entryName);this._cine_txt=e}else if(this._isDemo)return}if(!this._cine_txt)throw`Cannot load '${this._entryName}'`;break;case _.ResourceType.kResourceTypeMac:this._MAC_loadCutsceneText()}}_MAC_loadCutsceneText(){}MAC_hasLevelMap(e,t){return!1}MAC_loadMonsterData(e,t){}MAC_loadClutData(){}MAC_loadFontData(){this._fnt=this.decodeResourceMacData("Font",!0)}decodeResourceMacData(e,t){return null}getAniData(e){if(this._type==_.ResourceType.kResourceTypeMac){const t=_.READ_BE_UINT16(this._ani.buffer);if(e>=t)throw`Assertion failed: ${e} < ${t}`;const s=_.READ_BE_UINT16(this._ani.buffer,2+2*e);return this._ani.subarray(s)}const t=this._readUint16(this._ani,2+2*e);return this._ani.subarray(2+t)}async load_SPL_demo(){if(this._numSfx=66,this._sfxList=new Array(66).fill(null).map((()=>({offset:0,len:0,freq:0,data:null,peak:0}))),this._sfxList)for(let e=0;o._splNames[e]&&e<66;++e){const t=new r.File;if(await t.open(o._splNames[e],"rb",this._fs)){const s=this._sfxList[e],i=t.size(),r=new SharedArrayBuffer(t.size());s.data=new Uint8Array(r),s.data&&(t.read(s.data.buffer,i),s.offset=0,s.len=i,s.freq=5456,l(s))}}}async MAC_loadCutscene(e){throw"Resource::MAC_loadCutscene not implemented!"}MAC_unloadCutscene(){this._cmd=null,this._pol=null}free_TEXT(){this._stringsTable=null,this._textsTable=null}free_CINE(){this._cine_off=null,this._cine_txt=null}free_OBJ(){let e=null;for(let t=0;t<this._numObjectNodes;++t){if(this._objectNodesMap[t]!==e){const s=this._objectNodesMap[t];s.objects.length=0,e=s}this._objectNodesMap[t]=null}}getTextString(e,t){if(this._type===_.ResourceType.kResourceTypeMac){const e=_.READ_BE_UINT16(this._tbn);if(t>=e)throw`Assertion failed: ${t} < ${e}`;const s=_.READ_BE_UINT16(this._tbn,2+2*t);return this._tbn.subarray(s)}if(this._lang===_.Language.LANG_JP){let s=null;switch(e){case 0:s=h._level1TbnJP;break;case 1:s=h._level2TbnJP;break;case 2:s=h._level3TbnJP;break;case 3:s=h._level41TbnJP;break;case 4:s=h._level42TbnJP;break;case 5:s=h._level51TbnJP;break;case 6:s=h._level52TbnJP;break;default:return null}return s.subarray(_.READ_LE_UINT16(s,2*t))}return this._tbn.subarray(this._readUint16(this._tbn,2*t))}getGameString(e){if(this._type===_.ResourceType.kResourceTypeMac){const t=_.READ_BE_UINT16(this._str);if(e>=t)throw`Assertion failed: ${e} < ${t}`;const s=_.READ_BE_UINT16(this._str,2+2*e);return this._str.subarray(s)}return this._stringsTable.subarray(_.READ_LE_UINT16(this._stringsTable,2*e))}getCineString(e){if(this._type==_.ResourceType.kResourceTypeMac){const t=_.READ_BE_UINT16(this._cine_txt);if(e>=t)throw`Assertion failed: ${e} < ${t}`;const s=_.READ_BE_UINT16(this._cine_txt,2+2*e);return this._cine_txt.subarray(s)}if(this._lang===_.Language.LANG_JP){const t=_.READ_BE_UINT16(h._cineBinJP,2*e);return h._cineTxtJP.subarray(t)}if(this._cine_off){const t=_.READ_BE_UINT16(this._cine_off,2*e);return this._cine_txt.subarray(t)}return e>=0&&e<117?this._cineStrings[e]:0}getMenuString(e){return e>=0&&e<h.Id.LI_NUM?this._textsTable[e]:""}MAC_copyClut16(e,t,s){}clearLevelRes(){this._tbn=null,this._mbk=null,this._pal=null,this._map=null,this._lev=null,this._levNum=-1,this._sgd=null,this._bnq=null,this._ani=null,this.free_OBJ()}destructor(){throw"resource::descrutor not implemented!"}}p._voicesOffsetsTable=o._voicesOffsetsTable,p._spmOffsetsTable=o._spmOffsetsTable,p._splNames=o._splNames,p._gameSavedSoundData=o._gameSavedSoundData,p._gameSavedSoundLen=o._gameSavedSoundLen,p.getCineName=(e,t)=>{switch(e){case _.Language.LANG_FR:return t===_.ResourceType.kResourceTypeAmiga?"FR":"FR_";case _.Language.LANG_DE:return"GER";case _.Language.LANG_SP:return"SPA";case _.Language.LANG_IT:return"ITA";case _.Language.LANG_EN:default:return"ENG"}},t.LocaleData=h,t.kScratchBufferSize=72704,t.Resource=p,t.ObjectType=c},12:function(e,t,s){t.__esModule=!0;var i=e(15);class r{constructor(e,t){this._stub=e,this._mix=t,this._buf=null,this._soundQueuePreloadSize=0,this._soundQueue=null}setBackBuffer(e){this._buf=e}play(e){}}r._namesTable=i._namesTable,t.SeqPlayer=r},13:function(e,t,s){t.__esModule=!0;var i=e(7),r=e(2),_=e(11),a=e(15),o=e(24);class n{constructor(e,t,s){switch(this._res=e,this._stub=t,this._widescreenMode=s,this._layerScale=e._type===r.ResourceType.kResourceTypeMac?2:1,this._w=n.GAMESCREEN_W*this._layerScale,this._h=n.GAMESCREEN_H*this._layerScale,this._layerSize=this._w*this._h,this._frontLayer=new Uint8Array(this._layerSize),this._backLayer=new Uint8Array(this._layerSize),this._tempLayer=new Uint8Array(this._layerSize),this._tempLayer2=new Uint8Array(this._layerSize),this._screenBlocks=new Uint8Array(this._w/8*(this._h/8)),this._fullRefresh=!0,this._shakeOffset=0,this._charFrontColor=0,this._charTransparentColor=0,this._charShadowColor=0,this._drawChar=null,e._type){case r.ResourceType.kResourceTypeAmiga:this._drawChar=(e,t,s,i,r,_,a)=>this.AMIGA_drawStringChar(e,t,s,i,r,_,a);break;case r.ResourceType.kResourceTypeDOS:this._drawChar=(e,t,s,i,r,_,a)=>this.PC_drawStringChar(e,t,s,i,r,_,a);break;case r.ResourceType.kResourceTypeMac:this._drawChar=(e,t,s,i,r,_,a)=>this.MAC_drawStringChar(e,t,s,i,r,_,a)}}drawStringLen(e,t,s,i,_){const o=this._res._lang===r.Language.LANG_JP?a._font8Jp:this._res._fnt;for(let r=0;r<t;++r)this._drawChar(this._frontLayer,this._w,s+r*n.CHAR_W,i,o,_,e.charCodeAt(r));this.markBlockAsDirty(s,i,t*n.CHAR_W,n.CHAR_H,this._layerScale)}PC_drawChar(e,t,s,i){const _=this._res._lang!==r.Language.LANG_JP||i?this._res._fnt:n._font8Jp;t*=n.CHAR_W,s*=n.CHAR_H;let a=32*(e-32),o=new Uint8Array(this._frontLayer.buffer,s+this._w*t),l=0;for(let e=0;e<n.CHAR_H;++e){for(let e=0;e<4;++e,++a){const e=_[a]>>>4;0!==e?o[0+l]=2!==e?this._charFrontColor:this._charShadowColor:255!==this._charTransparentColor&&(o[0+l]=this._charTransparentColor),l++;const t=15&_[a];0!==t?o[0+l]=2!==t?this._charFrontColor:this._charShadowColor:255!==this._charTransparentColor&&(o[0+l]=this._charTransparentColor),l++}l+=this._w-n.CHAR_W}}static AMIGA_convertColor(e,t=!1){let s=(3840&e)>>8;const i=(240&e)>>4;let r=15&e;if(t){const e=s;s=r,r=e}return{r:s<<4|s,g:i<<4|i,b:r<<4|r}}static PC_decodeMapPlane(e,t,s){const i=e;let r=0;for(;r<i;){let e=t[r++]<<8>>8;if(e<0){const i=1-e;s.fill(t[r++],0,i),s=s.subarray(i)}else++e,s.set(t.subarray(0,e)),r+=e,s=s.subarray(e)}}static AMIGA_planar_mask(e,t,s,i,r,_,a,o){let n=256*s+t,l=0;for(let h=0;h<r;++h){for(let r=0;r<2*i;++r){for(let i=0;i<8;++i){const c=1<<7-i;let u=0;for(let e=0;e<4;++e)a[e*o]&c&&(u|=1<<e);if(_[l]&c){const _=t+8*r+i,a=s+h;_>=0&&_<256&&a>=0&&a<224&&(e[n+8*r+i]=u)}}l++}n+=256}}static AMIGA_decodeRle(e,t){const s=32767&r.READ_BE_UINT16(t);let i=0;t=t.subarray(2);for(let r=0;r<s;){let _=t[r++];0==(128&_)?(++_,r+_>s&&(_=s-r),e.set(t.subarray(r,r+_),i),r+=_):(_=1-(_<<24>>24),e.fill(t[r],i,i+_),++r),i+=_}}static PC_drawTileMask(e,t,s,i,_,a,o,l){if(l!==2*i*_)throw`Assertion failed: ${l} === ${2*i*_}`;let h=0,c=0;for(let l=0;l<_;++l)for(let _=0;_<i;++_){const i=r.READ_BE_UINT16(a,h);h+=2;for(let r=0;r<8;++r){const a=s+l,h=t+2*(8*_+r);if(h>=0&&h<n.GAMESCREEN_W&&a>=0&&a<n.GAMESCREEN_H){const t=o[c];i&1<<15-2*r&&(e[a*n.GAMESCREEN_W+h]=t>>4),i&1<<15-(2*r+1)&&(e[a*n.GAMESCREEN_W+h+1]=15&t)}++c}}}static decodeSgd(e,t,s,i){let _=-1,a=0;const o=new Uint8Array(8192);let l=r.READ_BE_UINT16(t)-1;a+=2;do{let l=r.READ_BE_UINT16(t,a);a+=2;const h=r.READ_BE_UINT16(t,a)<<16>>16;a+=2;const c=r.READ_BE_UINT16(t,a)<<16>>16;if(a+=2,65535!=l){l&=-32769;const e=r.READ_BE_UINT32(s,4*l)<<32>>32;if(e<0){const t=new Uint8Array(s.buffer,s.byteOffset-e);let i=0;const a=r.READ_BE_UINT16(t,i);if(i+=2,_!==l){if(_=l,a>o.byteLength)throw`Assertion failed: ${a} <= ${o.byteLength}`;o.set(t.subarray(i,a+i))}}else if(_!==l){_=l;const t=32767&r.READ_BE_UINT16(s,e);if(t>o.byteLength)throw`Assertion failed: ${t} <= ${o.byteLength}`;s.subarray(e);n.AMIGA_decodeRle(o,s.subarray(e))}}const u=o[0]+1>>1,p=o[1]+1,d=r.READ_BE_UINT16(o,2);i?n.AMIGA_planar_mask(e,h,c,u,p,o.subarray(4),o.subarray(4+d),d):n.PC_drawTileMask(e,h,c,u,p,o.subarray(4),o.subarray(4+d),d)}while(--l>=0)}static AMIGA_mirrorTileY(e){let t=new Uint8Array(32),s=24;for(let i=0;i<4;++i){for(let r=0;r<8;++r)t[31-8*i-r]=e[s++];s-=16}return t}static AMIGA_mirrorTileX(e){let t=new Uint8Array(32);for(let s=0;s<32;++s){let i=0;for(let t=0;t<8;++t)e[s]&1<<t&&(i|=1<<7-t);t[s]=i}return t}static AMIGA_drawTile(e,t,s,i,r,_,a){_&&(s=n.AMIGA_mirrorTileY(s)),r&&(s=n.AMIGA_mirrorTileX(s));let o=0,l=0;for(let r=0;r<8;++r){for(let t=0;t<8;++t){const r=1<<7-t;let _=0;for(let e=0;e<4;++e)s[o+8*e]&r&&(_|=1<<e);_!==a&&(e[l+t]=i+_)}++o,l+=t}}static PC_drawTile(e,t,s,i,r,_){let a=n.GAMESCREEN_W,o=0,l=0;r&&(o+=7*a,a=-a);let h=1;i&&(o+=7,h=-h);for(let i=0;i<8;++i){for(let i=0;i<8;i+=2){let r=t[l]>>4;r!==_&&(e[o+h*i]=s|r),r=15&t[l],r!==_&&(e[o+h*(i+1)]=s|r),++l}o+=a}}static decodeLevHelper(e,t,s,i,_,a,o){if(0!==s){let i=s;for(let s=0;s<224;s+=8)for(let a=0;a<256;a+=8){const l=o?r.READ_LE_UINT16(t,i):r.READ_BE_UINT16(t,i);i+=2;const h=2047&l;if(0!==h){const t=_.subarray(32*h),i=0!=(4096&l),r=0!=(2048&l);let c=0;0!=(32768&l)&&(c=128+(l>>6&16)),o?n.PC_drawTile(e.subarray(256*s+a),t,c,r,i,-1):n.AMIGA_drawTile(e.subarray(256*s+a),256,t,c,r,i,-1)}}}if(0!==i){let s=i;for(let i=0;i<224;i+=8)for(let l=0;l<256;l+=8){const h=o?r.READ_LE_UINT16(t,s):r.READ_BE_UINT16(t,s);s+=2;let c=2047&h;if(0!==c&&a&&(c-=896),0!==c){const t=_.subarray(32*c),s=0!=(4096&h),r=0!=(2048&h);let u=0;0!=(24576&h)&&a?u=16:0!=(32768&h)&&(u=128+(h>>6&16)),o?n.PC_drawTile(e.subarray(256*i+l),t,u,r,s,0):n.AMIGA_drawTile(e.subarray(256*i+l),256,t,u,r,s,0)}}}}MAC_drawSprite(e,t,s,i,r,_){}fillRect(e,t,s,i,r){const _=this._frontLayer;let a=t*this._layerScale*this._w+e*this._layerScale;for(let e=0;e<i*this._layerScale;++e)_.fill(r,a,a+s*this._layerScale),a+=this._w}drawString(e,t,s,i){const _=this._res._lang===r.Language.LANG_JP?a._font8Jp:this._res._fnt;let o=0,l=0;for(;;){const r=e.charCodeAt(l++);if(0===r||11===r||10===r||isNaN(r))break;this._drawChar(this._frontLayer,this._w,t+o*n.CHAR_W,s,_,i,r),++o}return this.markBlockAsDirty(t,s,o*n.CHAR_W,n.CHAR_H,this._layerScale),e}MAC_drawStringChar(e,t,s,i,r,_,a){const o={ptr:e,w:this._w,pitch:this._w,h:this._h,x:s*this._layerScale,y:i*this._layerScale,setPixel:this.MAC_setPixel,xflip:!1,dataPtr:null};if(n._MAC_fontFrontColor=_,n._MAC_fontShadowColor=this._charShadowColor,a<32)throw`assertion failed: ${a} >= 32`;this._res.MAC_decodeImageData(this._res._fnt,a-32,o)}MAC_setPixel(e,t,s,i){const r=s*e.pitch+t;e.ptr[r]=i}PC_decodeLev(e,t){const s=this._res._mbk;this._res._mbk=this._res._bnq,this._res.clearBankData(),this.AMIGA_decodeLev(e,t),this._res._mbk=s,this._res.clearBankData()}MAC_decodeMap(e,t){}PC_decodeMap(e,t){if(!this._res._map){if(!this._res._lev)throw`Assertion failed: ${this._res._lev}`;return void this.PC_decodeLev(e,t)}if(t>=64)throw`Assertion failed: ${t} < 0x40`;let s=r.READ_LE_UINT32(this._res._map,6*t)<<32>>32;if(0===s)throw`Invalid room ${t}`;let i=!0;s<0&&(s=-s,i=!1);const _=this._res._map;let a=s;this._mapPalSlot1=_[a++],this._mapPalSlot2=_[a++],this._mapPalSlot3=_[a++],this._mapPalSlot4=_[a++],4===e&&60===t&&(this._mapPalSlot4=5);const o=14336;if(i)for(let e=0;e<4;++e){const t=r.READ_LE_UINT16(_,a);a+=2,n.PC_decodeMapPlane(t,_.subarray(a),this._res._scratchBuffer),a+=t,this._frontLayer.set(this._res._scratchBuffer.subarray(0,o),e*o)}else for(let e=0;e<4;++e)for(let t=0;t<224;++t)for(let s=0;s<64;++s)this._frontLayer[e+4*s+256*t]=_[a+o*e+s+64*t];this._backLayer.set(this._frontLayer.subarray(0,this._layerSize)),this.PC_setLevelPalettes()}PC_setLevelPalettes(){0===this._unkPalSlot2&&(this._unkPalSlot2=this._mapPalSlot3),0===this._unkPalSlot1&&(this._unkPalSlot1=this._mapPalSlot3),this.setPaletteSlotBE(0,this._mapPalSlot1),this.setPaletteSlotBE(1,this._mapPalSlot2),this.setPaletteSlotBE(2,this._mapPalSlot3),this.setPaletteSlotBE(3,this._mapPalSlot4),this._unkPalSlot1===this._mapPalSlot3?this.setPaletteSlotLE(4,n._conradPal1):this.setPaletteSlotLE(4,n._conradPal2),this.setPaletteSlotBE(8,this._mapPalSlot1),this.setPaletteSlotBE(9,this._mapPalSlot2),this.setPaletteSlotBE(10,this._unkPalSlot2),this.setPaletteSlotBE(11,this._mapPalSlot4),this.setTextPalette()}AMIGA_decodeLev(e,t){const s=this._res._scratchBuffer,i=r.READ_BE_UINT32(this._res._lev,4*t);if(!o.bytekiller_unpack(s,_.kScratchBufferSize,this._res._lev,i))return void console.warn(`Bad CRC for level ${e} room ${t}`);let a=r.READ_BE_UINT16(s,10);const l=r.READ_BE_UINT16(s,12),h=r.READ_BE_UINT16(s,14),c=new Uint8Array(32768);if(!c)throw"Unable to allocate mbk temporary buffer";let u=0;for(let e=0;e<32;++e)c[e]=0;u+=32;let p=h;for(let e=!0;e;){let t=r.READ_BE_UINT16(s,p);p+=2,32768&t&&(t&=-32769,e=!1);const i=this._res.getBankDataSize(t);let _=this._res.findBankData(t);_||(_=this._res.loadBankData(t));const a=s[p++];if(255===a){if(u+i>32768)throw`Assertion failed: ${u+i} <= 32768`;c.set(_.subarray(0,i),u),u+=i}else for(let e=0;e<a+1;++e){const e=s[p++];if(u+32>32768)throw`Assertion failed: ${u+32} <= 32768`;c.set(_.subarray(32*e,32*e+32),u),u+=32}}if(this._frontLayer.fill(0),0!==s[1]){if(!this._res._sgd)throw`Assertion error: ${this._res._sgd}`;n.decodeSgd(this._frontLayer,new Uint8Array(s.buffer,s.byteOffset+a),this._res._sgd,this._res.isAmiga()),a=0}if(n.decodeLevHelper(this._frontLayer,s,a,l,c,0!==s[1],this._res.isDOS()),this._backLayer.set(this._frontLayer.subarray(0,this._layerSize)),this._mapPalSlot1=r.READ_BE_UINT16(s,2),this._mapPalSlot2=r.READ_BE_UINT16(s,4),this._mapPalSlot3=r.READ_BE_UINT16(s,6),this._mapPalSlot4=r.READ_BE_UINT16(s,8),this._res.isDOS())return this.PC_setLevelPalettes(),void(0===e&&this.setPaletteSlotBE(9,this._mapPalSlot1));this.setPaletteSlotBE(0,this._mapPalSlot1),this.setPaletteSlotBE(1,0===e?this._mapPalSlot3:this._mapPalSlot2),this.setPaletteSlotBE(2,this._mapPalSlot3),this.setPaletteSlotBE(3,this._mapPalSlot3),this.setPaletteSlotBE(4,this._mapPalSlot3),this.setPaletteSlotBE(8,this._mapPalSlot1),this.setPaletteSlotBE(9,0===e?this._mapPalSlot1:this._mapPalSlot3),this.setPaletteSlotBE(10,this._mapPalSlot3)}AMIGA_decodeSpc(e,t,s,i){}AMIGA_decodeSpm(e,t){}AMIGA_decodeIcn(e,t,s){let i=0;for(let s=0;s<t;++s){const t=1+e[i++],s=1+e[i++];i+=4+s*t*8}const r=1+e[i++],_=1+e[i++];n.AMIGA_planar16(s,_,r,4,new Uint8Array(e.buffer,i+4))}AMIGA_drawStringChar(e,t,s,i,r,_,a){let o=i*t+s;if(a<32)throw`assert failed: ${a} >= 32`;this.AMIGA_decodeIcn(r,a-32,this._res._scratchBuffer);let n=0;for(let s=0;s<8;++s){for(let t=0;t<8;++t)0!==this._res._scratchBuffer[t+n]&&(e[o+t]=_);n+=16,o+=t}}PC_drawStringChar(e,t,s,i,r,_,a){let o=i*t+s;if(a<32)throw`assert failed: ${a} < 32`;let l=8*(a-32)*4;for(let s=0;s<8;++s){for(let t=0;t<4;++t){const s=r[l+t]>>>4;0!==s&&(e[o]=15===s?_:224+s),o++;const i=15&r[l+t];0!==i&&(e[o]=15===i?_:224+i),o++}l+=4,o+=t-n.CHAR_W}}fullRefresh(){this._fullRefresh=!0,this._screenBlocks.fill(0,this._w/8*(this._h/8))}async fadeOut(){i.g_options.fade_out_palette?await this.fadeOutPalette():this._stub.fadeScreen()}async fadeOutPalette(){for(let e=16;e>=0;--e){for(let t=0;t<256;++t){const s={r:0,g:0,b:0};this._stub.getPaletteEntry(t,s),s.r=s.r*e>>4,s.g=s.g*e>>4,s.b=s.b*e>>4,this._stub.setPaletteEntry(t,s)}this.fullRefresh(),await this.updateScreen(),await this._stub.sleep(50)}}setPaletteColorBE(e,t){const s=r.READ_BE_UINT16(this._res._pal,2*t),i=n.AMIGA_convertColor(s,!0);this._stub.setPaletteEntry(e,i)}setPaletteSlotLE(e,t){for(let s=0;s<16;++s){const i=r.READ_LE_UINT16(t,2*s),_=n.AMIGA_convertColor(i);this._stub.setPaletteEntry(16*e+s,_)}if(4===e&&i.g_options.use_white_tshirt){const s=n.AMIGA_convertColor(2184),i=n.AMIGA_convertColor(t===n._conradPal2?2184:3276);this._stub.setPaletteEntry(16*e+12,s),this._stub.setPaletteEntry(16*e+13,i)}}setPaletteSlotBE(e,t){let s=32*t;const i=this._res._pal;for(let t=0;t<16;++t){const _=r.READ_BE_UINT16(i,s);s+=2;const a=this.AMIGA_convertColor(_,!0);this._stub.setPaletteEntry(16*e+t,a)}}AMIGA_convertColor(e,t){let s=(3840&e)>>8,i=(240&e)>>4,r=15&e;if(t){const e=s;s=r,r=e}return{r:s<<4|s,g:i<<4|i,b:r<<4|r}}setTextPalette(){if(this.setPaletteSlotLE(14,n._textPal),this._res.isAmiga()){const e={r:238,g:238,b:0};this._stub.setPaletteEntry(231,e)}}setPalette0xF(){const e=n._palSlot0xF;let t=0;for(let s=0;s<16;++s){const i={r:e[t++],g:e[t++],b:e[t++]};this._stub.setPaletteEntry(240+s,i)}}PC_decodeIcn(e,t,s){const i=r.READ_LE_UINT16(e,2*t),_=e.subarray(i+2);let a=0;for(let e=0;e<128;++e)s[a++]=_[e]>>4,s[a++]=15&_[e]}PC_decodeSpc(e,t,s,i){const r=t*s/2;let _=0;for(let t=0;t<r;++t)i[_++]=e[t]>>4,i[_++]=15&e[t]}PC_decodeSpm(e,t){const s=2*r.READ_BE_UINT16(e);e=e.subarray(2);let i=0;const _=t.subarray(1024);for(let t=0;t<s;++t)_[i++]=e[t]>>4,_[i++]=15&e[t];const a=t.subarray(1024);a.subarray(s);let o=0,n=0;do{const e=a[n++];if(15===e){let e=a[n++],s=a[n++];15===e&&(s=s<<4|a[n++],e=a[n++]),s+=4,t.fill(e,o,o+s),o+=s}else t[o++]=e}while(n<s)}drawSpriteSub1(e,t,s,i,r,_){let a=0,o=0;for(;i--;){for(let s=0;s<r;++s)0!==e[a+s]&&(t[o+s]=e[a+s]|_);a+=s,o+=256}}drawSpriteSub2(e,t,s,i,r,_){let a=e.byteOffset;e=new Uint8Array(e.buffer);let o=0;for(;i--;){for(let s=0;s<r;++s)0!==e[-s+a]&&(t[o+s]=e[-s+a]|_);a+=s,o+=256}}drawSpriteSub3(e,t,s,i,r,_){let a=0,o=0;for(;i--;){for(let s=0;s<r;++s)0==e[a+s]||128&t[o+s]||(t[o+s]=e[a+s]|_);a+=s,o+=256}}drawSpriteSub4(e,t,s,i,r,_){let a=e.byteOffset,o=0;for(e=new Uint8Array(e.buffer);i--;){for(let s=0;s<r;++s)0==e[-s+a]||128&t[s+o]||(t[s+o]=e[-s+a]|_);a+=s,o+=256}}drawSpriteSub5(e,t,s,i,r,_){let a=0,o=0;for(;i--;){for(let i=0;i<r;++i)0==e[i*s+a]||128&t[i+o]||(t[i+o]=e[i*s+a]|_);++a,o+=256}}drawSpriteSub6(e,t,s,i,r,_){let a=e.byteOffset,o=0;for(e=new Uint8Array(e.buffer);i--;){for(let i=0;i<r;++i)0==e[-i*s+a]||128&t[i+o]||(t[i+o]=e[-i*s+a]|_);++a,o+=256}}markBlockAsDirty(e,t,s,i,r){let _=r*e/8>>0,a=r*t/8>>0,o=r*(e+s-1)/8>>0,n=r*(t+i-1)/8>>0;_<0&&(_=0),o>(this._w/8>>0)-1&&(o=(this._w/8>>0)-1),a<0&&(a=0),n>(this._h/8>>0)-1&&(n=(this._h/8>>0)-1>>0);for(;a<=n;++a)for(let e=_;e<=o;++e)this._screenBlocks[a*(this._w/8>>0)+e]=2}async updateScreen(e=!1){if(this._fullRefresh)this._stub.copyRect(0,0,this._w,this._h,this._frontLayer,this._w),await this._stub.updateScreen(this._shakeOffset),this._fullRefresh=!1;else{let e,t,s=0;const i=this._screenBlocks;let r=0;for(t=0;t<this._h/8;++t){let _=0;for(e=0;e<this._w/8;++e)if(0!==i[e+r])--i[e+r],++_;else if(0!==_){let i=8*(e-_);this._stub.copyRect(i,8*t,8*_,8,this._frontLayer,this._w),_=0,++s}if(0!==_){let i=8*(e-_);this._stub.copyRect(i,8*t,8*_,8,this._frontLayer,this._w),++s}r+=this._w/8}0!==s&&await this._stub.updateScreen(this._shakeOffset)}0!==this._shakeOffset&&(this._shakeOffset=0,this._fullRefresh=!0)}updateWidescreen(){this._stub.hasWidescreen()&&(this._widescreenMode===r.WidescreenMode.kWidescreenMirrorRoom?this._stub.copyWidescreenMirror(this._w,this._h,this._backLayer):this._widescreenMode===r.WidescreenMode.kWidescreenBlur?this._stub.copyWidescreenBlur(this._w,this._h,this._backLayer):this._stub.clearWidescreen())}}n._conradPal1=a._conradPal1,n._conradPal2=a._conradPal2,n._textPal=a._textPal,n._palSlot0xF=a._palSlot0xF,n._font8Jp=a._font8Jp,n.GAMESCREEN_W=256,n.GAMESCREEN_H=224,n.CHAR_W=8,n.CHAR_H=8,n.AMIGA_planar16=(e,t,s,i,_)=>{const a=16*t,o=2*t*s;let n=0,l=0;for(let h=0;h<s;++h){for(let s=0;s<t;++s){for(let t=0;t<16;++t){let a=0;const h=1<<15-t;for(let e=0;e<i;++e)r.READ_BE_UINT16(new Uint8Array(_,n+e*o))&h&&(a|=1<<e);e[l+16*s+t]=a}n+=2}l+=a}},t.Video=n},14:function(e,t,s){t.__esModule=!0;var i=e(2),r=e(11),_=e(3),a=e(13),o=e(15),n=e(7);class l{constructor(e,t,s){this._res=e,this._stub=t,this._vid=s,this._skill=i.Skill.kSkillNormal,this._level=0}async handleTitleScreen(){this._charVar1=0,this._charVar2=0,this._charVar3=0,this._charVar4=0,this._charVar5=0;const e=new Array(6).fill(null).map((()=>({str:0,opt:0})));let t=0;e[t].str=r.LocaleData.Id.LI_07_START,e[t].opt=l.MENU_OPTION_ITEM_START,++t,this._res._isDemo||(n.g_options.enable_password_menu?(e[t].str=r.LocaleData.Id.LI_08_SKILL,e[t].opt=l.MENU_OPTION_ITEM_SKILL,++t,e[t].str=r.LocaleData.Id.LI_09_PASSWORD,e[t].opt=l.MENU_OPTION_ITEM_PASSWORD,++t):(e[t].str=r.LocaleData.Id.LI_06_LEVEL,e[t].opt=l.MENU_OPTION_ITEM_LEVEL,++t)),e[t].str=r.LocaleData.Id.LI_10_INFO,e[t].opt=l.MENU_OPTION_ITEM_INFO,++t,e[t].str=r.LocaleData.Id.LI_23_DEMO,e[t].opt=l.MENU_OPTION_ITEM_DEMO,++t,e[t].str=r.LocaleData.Id.LI_11_QUIT,e[t].opt=l.MENU_OPTION_ITEM_QUIT,++t,this._selectedOption=-1,this._currentScreen=-1,this._nextScreen=0;let s=!1,o=0;const h=[{lang:i.Language.LANG_EN,bitmap16x12:l._flagEn16x12},{lang:i.Language.LANG_FR,bitmap16x12:l._flagFr16x12},{lang:i.Language.LANG_DE,bitmap16x12:l._flagDe16x12},{lang:i.Language.LANG_SP,bitmap16x12:l._flagSp16x12},{lang:i.Language.LANG_IT,bitmap16x12:l._flagIt16x12},{lang:i.Language.LANG_JP,bitmap16x12:l._flagJp16x12}];let c=0;for(let e=0;e<h.length;++e)if(h[e].lang===this._res._lang){c=e;break}for(;!s&&!this._stub._pi.quit;){let i=-1,r=c;if(0===this._nextScreen&&(await this._vid.fadeOut(),await this.loadPicture("menu1"),this._vid.fullRefresh(),this._charVar3=1,this._charVar4=2,o=0,this._currentScreen=this._nextScreen,this._nextScreen=-1),n.g_options.enable_language_selection&&(this._stub._pi.dirMask&_.DIR_LEFT&&(this._stub._pi.dirMask&=~_.DIR_LEFT,0!==c?--c:c=h.length-1),this._stub._pi.dirMask&_.DIR_RIGHT&&(this._stub._pi.dirMask&=~_.DIR_RIGHT,c!==h.length-1?++c:c=0)),this._stub._pi.dirMask&_.DIR_UP&&(this._stub._pi.dirMask&=~_.DIR_UP,0!==o?--o:o=t-1),this._stub._pi.dirMask&_.DIR_DOWN&&(this._stub._pi.dirMask&=~_.DIR_DOWN,o!==t-1?++o:o=0),this._stub._pi.enter&&(this._stub._pi.enter=!1,i=o),-1!==i){switch(this._selectedOption=e[i].opt,this._selectedOption){case l.MENU_OPTION_ITEM_START:s=!0;break;case l.MENU_OPTION_ITEM_SKILL:this._currentScreen=1;break;case l.MENU_OPTION_ITEM_PASSWORD:this._currentScreen=2,s=this.handlePasswordScreen();break;case l.MENU_OPTION_ITEM_LEVEL:this._currentScreen=3,s=this.handleLevelScreen();break;case l.MENU_OPTION_ITEM_INFO:this._currentScreen=4,await this.handleInfoScreen();break;case l.MENU_OPTION_ITEM_DEMO:case l.MENU_OPTION_ITEM_QUIT:s=!0}this._nextScreen=0;continue}r!==c&&(await this._res.setLanguage(h[c].lang),this._vid._frontLayer.set(this._vid._backLayer.subarray(0,this._vid._layerSize)));const u=26-2*t;for(let s=0;s<t;++s)this.drawString(this._res.getMenuString(e[s].str),u+2*s,20,s===o?2:3);if(r!==c){this._stub.copyRect(0,0,a.Video.GAMESCREEN_W,a.Video.GAMESCREEN_H,this._vid._frontLayer,a.Video.GAMESCREEN_W);const e=16,t=12,s=a.Video.GAMESCREEN_W-e-8,i=8;this._stub.copyRectRgb24(s,i,e,t,h[c].bitmap16x12)}await this._vid.updateScreen(),await this._stub.sleep(80),await this._stub.processEvents()}}handlePasswordScreen(){return!0}async handleInfoScreen(){this._vid.fadeOut(),this._res._lang===i.Language.LANG_FR?await this.loadPicture("instru_f"):await this.loadPicture("instru_e"),this._vid.fullRefresh(),await this._vid.updateScreen(!0);do{if(await this._stub.sleep(80),await this._stub.processEvents(),this._stub._pi.escape){this._stub._pi.escape=!1;break}if(this._stub._pi.enter){this._stub._pi.enter=!1;break}}while(!this._stub._pi.quit)}handleLevelScreen(){return!0}drawString(e,t,s,i){const r=this._vid._charFrontColor,_=this._vid._charTransparentColor,a=this._vid._charShadowColor;switch(i){case 0:this._vid._charFrontColor=this._charVar1,this._vid._charTransparentColor=this._charVar2,this._vid._charShadowColor=this._charVar2;break;case 1:this._vid._charFrontColor=this._charVar2,this._vid._charTransparentColor=this._charVar1,this._vid._charShadowColor=this._charVar1;break;case 2:this._vid._charFrontColor=this._charVar3,this._vid._charTransparentColor=255,this._vid._charShadowColor=this._charVar1;break;case 3:this._vid._charFrontColor=this._charVar4,this._vid._charTransparentColor=255,this._vid._charShadowColor=this._charVar1;break;case 4:this._vid._charFrontColor=this._charVar2,this._vid._charTransparentColor=255,this._vid._charShadowColor=this._charVar1;break;case 5:this._vid._charFrontColor=this._charVar2,this._vid._charTransparentColor=255,this._vid._charShadowColor=this._charVar5}this.drawString2(e,t,s),this._vid._charFrontColor=r,this._vid._charTransparentColor=_,this._vid._charShadowColor=a}drawString2(e,t,s){const r=a.Video.CHAR_W,_=a.Video.CHAR_H;let o=0;switch(this._res._type){case i.ResourceType.kResourceTypeAmiga:for(;e[o];++o)this._vid.AMIGA_drawStringChar(this._vid._frontLayer,this._vid._w,a.Video.CHAR_W*(s+o),a.Video.CHAR_H*t,this._res._fnt,this._vid._charFrontColor,e.charCodeAt(o));break;case i.ResourceType.kResourceTypeDOS:for(;e[o];++o)this._vid.PC_drawChar(e.charCodeAt(o),t,s+o,!0);break;case i.ResourceType.kResourceTypeMac:for(;e[o];++o)this._vid.MAC_drawStringChar(this._vid._frontLayer,this._vid._w,a.Video.CHAR_W*(s+o),a.Video.CHAR_H*t,this._res._fnt,this._vid._charFrontColor,e.charCodeAt(o))}this._vid.markBlockAsDirty(s*r,t*_,o*r,_,this._vid._layerScale)}async loadPicture(e){await this._res.load_MAP_menu(e,this._res._scratchBuffer);for(let e=0;e<4;++e)for(let t=0;t<224;++t)for(let s=0;s<64;++s)this._vid._frontLayer[e+4*s+256*t]=this._res._scratchBuffer[14336*e+s+64*t];this._vid._backLayer.set(this._vid._frontLayer.subarray(0,this._vid._layerSize)),await this._res.load_PAL_menu(e,this._res._scratchBuffer),this._stub.setPalette(this._res._scratchBuffer,256),this._vid.updateWidescreen()}getLevelPassword(e,t){switch(this._res._type){case i.ResourceType.kResourceTypeAmiga:if(e<7)return this._res._lang===i.Language.LANG_FR?o._passwordsFrAmiga[7*t+e]:o._passwordsEnAmiga[7*t+e];break;case i.ResourceType.kResourceTypeMac:return o._passwordsMac[8*t+e];case i.ResourceType.kResourceTypeDOS:}return o._passwordsDOS[8*t+e]}}l.kMacTitleScreen_MacPlay=1,l.kMacTitleScreen_Presage=2,l.kMacTitleScreen_Flashback=3,l.kMacTitleScreen_LeftEye=4,l.kMacTitleScreen_RightEye=5,l.kMacTitleScreen_Controls=6,l.MENU_OPTION_ITEM_START=0,l.MENU_OPTION_ITEM_SKILL=1,l.MENU_OPTION_ITEM_PASSWORD=2,l.MENU_OPTION_ITEM_LEVEL=3,l.MENU_OPTION_ITEM_INFO=4,l.MENU_OPTION_ITEM_DEMO=5,l.MENU_OPTION_ITEM_QUIT=6,l._levelNames=o._levelNames,l._passwordsDOS=o._passwordsDOS,l._passwordsFrAmiga=o._passwordsFrAmiga,l._passwordsEnAmiga=o._passwordsEnAmiga,l._passwordsMac=o._passwordsMac,l._flagEn16x12=o._flagEn16x12,l._flagFr16x12=o._flagFr16x12,l._flagDe16x12=o._flagDe16x12,l._flagIt16x12=o._flagIt16x12,l._flagJp16x12=o._flagJp16x12,l._flagSp16x12=o._flagSp16x12,t.Menu=l},15:function(e,t,s){t.__esModule=!0;const i=Uint16Array.from([0,0,1,3,1,4,65535,0,1,2,3,0,4,0,65535,256,65535,0,6,0,1,1,65535,0,65535,512,32775,0,3,1,1,11,1,5,9,0,1,6,65535,0,11,0,1,10,65535,1,65535,2,65535,0,13,4,13,0,13,1,13,2,13,3,65535,0,65535,1,1,12,1,13,1,14,1,15,1,16,15,0,15,1,15,1,15,3,15,2,15,4,1,8,1,7,15,5,65535,0,4,1,17,0,1,9,18,0,65535,0,20,0,21,0,22,0,22,1,65535,18,23,0,1,17,24,0,1,19,25,0,26,0,25,1,27,0,28,0,15,6,15,6,15,7,15,8,15,9,15,10,29,0,27,1,30,0,65535,0]),r=Uint16Array.from([0,0,1,3,1,4,2,0,1,2,3,0,4,0,65535,0,65535,0,6,0,1,1,65535,0,65535,0,7,0,3,1,1,11,1,5,9,0,1,6,10,0,11,0,1,10,12,1,65535,2,65535,0,13,4,13,0,13,1,13,2,13,3,65535,0,65535,1,1,12,1,13,1,14,1,15,1,16,15,0,15,1,15,1,15,3,15,2,15,4,1,8,1,7,15,5,65535,0,4,1,17,0,1,9,18,0,65535,0,20,0,21,0,22,0,22,1,65535,18,23,0,1,17,24,0,1,19,25,0,26,0,25,1,27,0,28,0,15,6,15,6,15,7,15,8,15,9,15,10,29,0,27,1]),_=Uint8Array.from([1,32,0,6,33,0,255]),a=Uint8Array.from([64,34,0,255]),o=Uint16Array.from([256,255,255,255,255,255,254,254,253,252,252,251,250,249,248,247,246,244,243,242,240,238,237,235,233,232,230,228,226,223,221,219,217,214,212,209,207,204,201,198,196,193,190,187,184,181,177,174,171,167,164,161,157,154,150,146,143,139,135,131,127,124,120,116,112,108,104,100,95,91,87,83,79,74,70,66,61,57,53,48,44,40,35,31,26,22,17,13,8,4,0,65532,65528,65523,65519,65514,65510,65505,65501,65496,65492,65488,65483,65479,65475,65470,65466,65462,65457,65453,65449,65445,65441,65436,65432,65428,65424,65420,65416,65412,65408,65405,65401,65397,65393,65390,65386,65382,65379,65375,65372,65369,65365,65362,65359,65355,65352,65349,65346,65343,65340,65338,65335,65332,65329,65327,65324,65322,65319,65317,65315,65313,65310,65308,65306,65304,65303,65301,65299,65298,65296,65294,65293,65292,65290,65289,65288,65287,65286,65285,65284,65284,65283,65282,65282,65281,65281,65281,65281,65281,65280,65281,65281,65281,65281,65281,65282,65282,65283,65284,65284,65285,65286,65287,65288,65289,65290,65292,65293,65294,65296,65298,65299,65301,65303,65304,65306,65308,65310,65313,65315,65317,65319,65322,65324,65327,65329,65332,65335,65338,65340,65343,65346,65349,65352,65355,65359,65362,65365,65369,65372,65375,65379,65382,65386,65390,65393,65397,65401,65405,65409,65412,65416,65420,65424,65428,65432,65436,65441,65445,65449,65453,65457,65462,65466,65470,65475,65479,65483,65488,65492,65496,65501,65505,65510,65514,65519,65523,65528,65532,0,4,8,13,17,22,26,31,35,40,44,48,53,57,61,66,70,74,79,83,87,91,95,100,104,108,112,116,120,124,128,131,135,139,143,146,150,154,157,161,164,167,171,174,177,181,184,187,190,193,196,198,201,204,207,209,212,214,217,219,221,223,226,228,230,232,233,235,237,238,240,242,243,244,246,247,248,249,250,251,252,252,253,254,254,255,255,255,255,255]),n=Uint16Array.from([0,4,8,13,17,22,26,31,35,40,44,48,53,57,61,66,70,74,79,83,87,91,95,100,104,108,112,116,120,124,127,131,135,139,143,146,150,154,157,161,164,167,171,174,177,181,184,187,190,193,196,198,201,204,207,209,212,214,217,219,221,223,226,228,230,232,233,235,237,238,240,242,243,244,246,247,248,249,250,251,252,252,253,254,254,255,255,255,255,255,256,255,255,255,255,255,254,254,253,252,252,251,250,249,248,247,246,244,243,242,240,238,237,235,233,232,230,228,226,223,221,219,217,214,212,209,207,204,201,198,196,193,190,187,184,181,177,174,171,167,164,161,157,154,150,146,143,139,135,131,127,124,120,116,112,108,104,100,95,91,87,83,79,74,70,66,61,57,53,48,44,40,35,31,26,22,17,13,8,4,0,65532,65528,65523,65519,65514,65510,65505,65501,65496,65492,65488,65483,65479,65475,65470,65466,65462,65457,65453,65449,65445,65441,65436,65432,65428,65424,65420,65416,65412,65408,65405,65401,65397,65393,65390,65386,65382,65379,65375,65372,65369,65365,65362,65359,65355,65352,65349,65346,65343,65340,65338,65335,65332,65329,65327,65324,65322,65319,65317,65315,65313,65310,65308,65306,65304,65303,65301,65299,65298,65296,65294,65293,65292,65290,65289,65288,65287,65286,65285,65284,65284,65283,65282,65282,65281,65281,65281,65281,65281,65280,65281,65281,65281,65281,65281,65282,65282,65283,65284,65284,65285,65286,65287,65288,65289,65290,65292,65293,65294,65296,65298,65299,65301,65303,65304,65306,65308,65310,65313,65315,65317,65319,65322,65324,65327,65329,65332,65335,65338,65340,65343,65346,65349,65352,65355,65359,65362,65365,65369,65372,65375,65379,65382,65386,65390,65393,65397,65401,65405,65409,65412,65416,65420,65424,65428,65432,65436,65441,65445,65449,65453,65457,65462,65466,65470,65475,65479,65483,65488,65492,65496,65501,65505,65510,65514,65519,65523,65528,65532]),l=Uint8Array.from([254,20,0,1,0,4,32,32,84,104,101,32,70,108,97,115,104,66,97,99,107,32,84,101,97,109,32,105,115,46,46,46,254,50,254,20,0,1,0,7,0,1,0,5,32,32,73,110,105,116,105,97,108,32,80,114,111,106,101,99,116,32,80,114,111,103,114,97,109,109,101,114,115,58,124,124,254,30,32,32,32,32,32,32,32,32,32,32,32,32,32,66,101,110,111,105,115,116,32,65,114,111,110,32,32,32,32,32,32,124,254,30,32,32,32,32,32,32,32,32,32,32,32,32,80,104,105,108,105,112,112,101,32,67,104,97,115,116,101,108,32,32,32,124,254,30,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,80,97,117,108,32,67,117,105,115,115,101,116,32,32,32,124,254,30,32,32,32,32,32,32,32,32,32,32,32,32,70,114,101,100,101,114,105,99,32,83,97,118,111,105,114,32,32,32,32,124,254,80,254,30,0,1,0,5,32,32,71,114,97,112,104,105,99,32,65,114,116,105,115,116,115,58,124,124,254,30,32,32,32,32,32,32,32,32,32,32,32,32,32,80,97,116,114,105,99,107,32,68,97,104,101,114,32,32,32,32,32,124,254,30,32,32,32,32,32,32,32,32,32,32,32,32,32,84,104,105,101,114,114,121,32,76,101,118,97,115,116,114,101,32,32,124,254,30,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,68,101,110,105,115,32,77,101,114,99,105,101,114,32,32,32,124,254,30,32,32,32,32,32,32,32,32,32,32,32,32,32,84,104,105,101,114,114,121,32,80,101,114,114,101,97,117,32,32,32,124,254,30,32,32,32,32,32,32,32,32,32,32,32,67,104,114,105,115,116,105,97,110,32,82,111,98,101,114,116,32,32,32,32,124,254,30,32,32,32,32,32,32,32,32,32,32,32,32,32,70,97,98,114,105,99,101,32,86,105,115,115,101,114,111,116,32,32,124,254,80,254,30,0,1,0,7,32,32,80,67,32,86,101,114,115,105,111,110,32,80,114,111,103,114,97,109,109,101,114,115,58,124,124,254,30,32,32,32,32,32,32,32,32,32,32,32,32,80,104,105,108,105,112,112,101,32,67,104,97,115,116,101,108,32,32,32,124,254,30,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,80,97,117,108,32,67,117,105,115,115,101,116,32,32,32,124,254,30,32,32,32,32,32,32,32,32,32,32,32,32,32,84,104,105,101,114,114,121,32,71,97,101,114,116,104,110,101,114,32,124,254,30,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,65,108,97,105,110,32,82,97,109,111,110,100,32,32,32,32,124,254,180,254,30,0,1,0,5,32,32,65,100,100,105,116,105,111,110,97,108,32,80,67,32,103,114,97,112,104,105,99,115,58,124,124,254,30,124,124,254,30,32,32,32,32,32,32,32,32,32,32,32,32,32,84,104,105,101,114,114,121,32,76,101,118,97,115,116,114,101,32,32,124,254,30,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,68,101,110,105,115,32,77,101,114,99,105,101,114,32,32,32,124,254,30,32,32,32,32,32,32,32,32,32,32,32,32,32,84,104,105,101,114,114,121,32,80,101,114,114,101,97,117,32,32,32,124,254,80,254,30,0,1,0,5,32,32,83,116,111,114,121,58,124,124,254,30,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,80,97,117,108,32,67,117,105,115,115,101,116,32,32,32,124,254,80,254,30,0,1,0,5,32,32,76,101,118,101,108,32,68,101,115,105,103,110,58,124,124,254,30,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,80,97,117,108,32,67,117,105,115,115,101,116,32,32,32,124,254,30,32,32,32,32,32,32,32,32,32,32,32,32,32,80,97,116,114,105,99,107,32,68,97,104,101,114,32,32,32,32,32,124,254,30,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,68,101,110,105,115,32,77,101,114,99,105,101,114,32,32,32,124,254,30,32,32,32,32,32,32,32,32,32,32,32,32,70,114,101,100,101,114,105,99,32,83,97,118,111,105,114,32,32,32,32,124,254,30,32,32,32,32,32,32,32,32,32,32,32,32,32,70,97,98,114,105,99,101,32,86,105,115,115,101,114,111,116,32,32,124,254,80,254,30,0,1,0,5,32,32,77,117,115,105,99,58,124,124,254,30,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,74,101,97,110,32,66,97,117,100,108,111,116,32,32,32,124,254,30,32,32,32,32,32,32,32,32,32,32,32,32,32,70,97,98,114,105,99,101,32,86,105,115,115,101,114,111,116,32,32,124,254,80,254,30,0,1,0,8,32,32,83,111,117,110,100,32,102,120,58,124,124,254,30,32,32,32,32,32,32,32,32,32,32,32,32,32,66,101,110,111,105,115,116,32,65,114,111,110,32,32,32,32,32,32,124,254,30,32,32,32,32,32,32,32,32,32,32,32,32,80,104,105,108,105,112,112,101,32,67,104,97,115,116,101,108,32,32,32,124,254,30,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,80,97,117,108,32,67,117,105,115,115,101,116,32,32,32,124,254,30,32,32,32,32,32,32,32,32,32,32,32,32,32,70,97,98,114,105,99,101,32,86,105,115,115,101,114,111,116,32,32,124,254,80,254,30,0,1,0,6,32,32,65,99,116,111,114,115,58,124,124,254,30,32,32,32,32,32,32,32,32,32,32,32,32,32,66,101,110,111,105,115,116,32,65,114,111,110,32,32,32,32,32,32,124,254,30,32,32,32,32,32,32,32,32,32,32,32,32,32,80,97,116,114,105,99,107,32,68,97,104,101,114,32,32,32,32,32,124,254,30,32,32,32,32,32,32,32,32,32,32,32,32,32,84,104,105,101,114,114,121,32,76,101,118,97,115,116,114,101,32,32,124,254,30,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,68,101,110,105,115,32,77,101,114,99,105,101,114,32,32,32,124,254,30,32,32,32,32,32,32,32,32,32,32,32,32,32,84,104,105,101,114,114,121,32,80,101,114,114,101,97,117,32,32,32,124,254,30,32,32,32,32,32,32,32,32,32,32,32,67,104,114,105,115,116,105,97,110,32,82,111,98,101,114,116,32,32,32,32,124,254,30,32,32,32,32,32,32,32,32,32,32,32,32,32,70,97,98,114,105,99,101,32,86,105,115,115,101,114,111,116,32,32,124,254,80,254,30,0,1,0,6,32,32,83,116,117,110,116,109,97,110,58,124,124,254,30,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,68,101,110,105,115,32,77,101,114,99,105,101,114,32,32,32,124,254,80,254,30,0,1,0,6,32,32,86,105,100,101,111,32,100,105,114,101,99,116,111,114,115,58,124,124,254,30,32,32,32,32,32,32,32,32,32,32,32,32,32,80,97,116,114,105,99,107,32,68,97,104,101,114,32,32,32,32,32,124,254,30,32,32,32,32,32,32,32,32,32,32,32,32,32,84,104,105,101,114,114,121,32,80,101,114,114,101,97,117,32,32,32,124,254,30,32,32,32,32,32,32,32,32,32,32,32,32,32,70,97,98,114,105,99,101,32,86,105,115,115,101,114,111,116,32,32,124,254,80,254,30,0,1,0,6,32,32,86,105,100,101,111,32,67,111,45,100,105,114,101,99,116,111,114,115,58,124,124,254,30,32,32,32,32,32,32,32,32,32,32,32,32,32,84,104,105,101,114,114,121,32,76,101,118,97,115,116,114,101,32,32,124,254,30,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,68,101,110,105,115,32,77,101,114,99,105,101,114,32,32,32,124,254,30,32,32,32,32,32,32,32,32,32,32,32,67,104,114,105,115,116,105,97,110,32,82,111,98,101,114,116,32,32,32,32,124,254,80,254,30,0,1,0,6,32,32,86,105,100,101,111,32,115,102,120,58,124,124,254,30,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,80,97,117,108,32,67,117,105,115,115,101,116,32,32,32,124,254,30,32,32,32,32,32,32,32,32,32,32,32,32,32,84,104,105,101,114,114,121,32,80,101,114,114,101,97,117,32,32,32,124,254,30,32,32,32,32,32,32,32,32,32,32,32,32,32,70,97,98,114,105,99,101,32,86,105,115,115,101,114,111,116,32,32,124,254,80,254,30,0,1,0,7,32,32,84,101,115,116,101,114,115,58,124,124,254,30,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,80,104,105,108,32,66,114,97,100,108,101,121,32,32,32,124,254,30,32,32,32,32,32,32,32,32,32,32,32,32,80,97,116,114,105,99,105,97,32,67,117,105,115,115,101,116,32,32,32,124,254,30,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,83,105,109,111,110,32,72,97,100,108,105,110,103,116,111,110,124,254,30,32,32,32,32,32,32,32,32,32,32,32,32,32,32,68,97,110,105,101,108,32,76,108,101,119,101,108,108,121,110,32,124,254,30,32,32,32,32,32,32,32,32,32,74,101,97,110,45,80,105,101,114,114,101,32,76,117,99,107,32,32,32,32,32,32,124,254,30,32,32,32,32,32,32,32,32,32,32,32,32,32,32,77,97,114,116,105,110,32,83,109,105,116,104,32,32,32,32,32,124,254,80,254,30,0,1,0,8,32,32,77,97,110,121,32,116,104,97,110,107,115,32,116,111,46,46,46,124,124,254,30,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,76,111,114,105,32,67,104,114,105,115,116,101,110,115,101,110,124,254,30,32,32,32,32,32,32,32,32,32,32,32,80,97,116,114,105,99,105,97,32,67,117,105,115,115,101,116,32,32,32,32,124,254,30,32,32,32,32,32,32,32,32,32,65,110,110,101,45,77,97,114,105,101,32,74,111,97,115,115,105,109,32,32,32,32,124,254,30,32,32,32,32,32,32,32,32,74,101,97,110,45,80,105,101,114,114,101,32,76,117,99,107,32,32,32,32,32,32,32,124,254,30,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,77,97,114,99,32,77,105,110,105,101,114,32,32,32,32,32,124,254,80,254,30,0,1,0,5,32,32,32,32,32,32,32,32,32,68,105,114,101,99,116,101,100,32,32,98,121,32,32,32,32,32,32,32,32,32,124,124,254,30,32,32,32,32,32,32,32,32,32,80,97,117,108,32,67,117,105,115,115,101,116,32,32,32,32,32,32,32,32,32,124,254,80,254,30,0,1,0,3,32,32,32,32,32,32,32,32,32,32,80,114,111,100,117,99,101,100,32,98,121,32,32,32,32,32,32,32,32,32,32,124,124,254,30,32,124,32,32,32,32,32,32,32,68,101,108,112,104,105,110,101,32,83,111,102,116,119,97,114,101,32,32,32,32,32,32,32,124,254,30,32,32,32,32,32,32,32,32,32,32,32,32,32,32,97,110,100,32,32,32,32,32,32,32,32,32,32,32,32,32,32,124,254,30,32,32,32,32,32,32,32,32,32,32,32,32,85,83,32,71,79,76,68,32,32,32,32,32,32,32,32,32,32,32,32,124,254,30,32,124,32,124,32,124,32,124,32,124,32,32,32,32,32,32,32,32,32,32,40,99,41,77,67,77,88,67,73,73,73,32,32,32,32,32,32,32,32,32,32,124,254,80,254,255,0,255]),h=Uint8Array.from([254,20,0,1,0,8,32,32,32,32,32,84,104,101,32,70,108,97,115,104,66,97,99,107,32,84,101,97,109,32,105,115,46,46,46,254,50,0,1,0,8,32,32,65,109,105,103,97,32,86,101,114,115,105,111,110,58,124,254,20,124,124,254,20,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,66,101,110,111,105,115,116,32,65,114,111,110,32,32,32,32,124,254,20,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,84,104,105,101,114,114,121,32,76,101,118,97,115,116,114,101,32,124,254,20,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,84,104,105,101,114,114,121,32,80,101,114,114,101,97,117,32,32,124,254,20,254,20,0,1,0,7,0,1,0,9,32,32,80,114,111,103,114,97,109,109,101,114,115,58,124,124,254,20,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,66,101,110,111,105,115,116,32,65,114,111,110,32,32,32,32,124,254,20,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,80,104,105,108,105,112,112,101,32,67,104,97,115,116,101,108,32,124,254,20,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,80,97,117,108,32,67,117,105,115,115,101,116,32,124,254,20,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,70,114,101,100,101,114,105,99,32,83,97,118,111,105,114,32,32,124,254,20,254,20,0,1,0,7,32,32,71,114,97,112,104,105,99,32,65,114,116,105,115,116,115,58,124,124,254,20,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,80,97,116,114,105,99,107,32,68,97,104,101,114,32,32,32,32,124,254,20,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,84,104,105,101,114,114,121,32,76,101,118,97,115,116,114,101,32,124,254,20,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,68,101,110,105,115,32,77,101,114,99,105,101,114,32,32,124,254,20,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,84,104,105,101,114,114,121,32,80,101,114,114,101,97,117,32,32,124,254,20,32,32,32,32,32,32,32,32,32,32,32,32,32,67,104,114,105,115,116,105,97,110,32,82,111,98,101,114,116,32,32,32,124,254,20,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,70,97,98,114,105,99,101,32,86,105,115,115,101,114,111,116,32,124,254,20,254,20,0,1,0,7,32,32,72,97,114,100,119,97,114,101,32,69,110,103,105,110,101,101,114,58,124,124,254,20,32,32,32,32,32,32,32,32,32,32,32,32,32,32,84,104,105,101,114,114,121,32,71,97,101,114,116,104,110,101,114,32,124,254,20,0,1,0,7,32,32,83,116,111,114,121,58,124,124,254,20,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,80,97,117,108,32,67,117,105,115,115,101,116,32,32,124,254,20,0,1,0,8,32,32,76,101,118,101,108,32,68,101,115,105,103,110,58,124,124,254,20,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,80,97,117,108,32,67,117,105,115,115,101,116,32,32,124,254,20,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,80,97,116,114,105,99,107,32,68,97,104,101,114,32,32,32,32,124,254,20,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,68,101,110,105,115,32,77,101,114,99,105,101,114,32,32,124,254,20,32,32,32,32,32,32,32,32,32,32,32,32,32,32,70,114,101,100,101,114,105,99,32,83,97,118,111,105,114,32,32,32,124,254,20,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,70,97,98,114,105,99,101,32,86,105,115,115,101,114,111,116,32,124,254,20,254,20,0,1,0,8,32,32,77,117,115,105,99,58,124,124,254,20,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,74,101,97,110,32,66,97,117,100,108,111,116,32,32,124,254,20,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,82,97,112,104,97,101,108,32,71,101,115,113,117,97,32,32,32,124,254,20,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,70,97,98,114,105,99,101,32,86,105,115,115,101,114,111,116,32,124,254,20,254,20,0,1,0,8,32,32,83,111,117,110,100,32,102,120,58,124,124,254,20,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,66,101,110,111,105,115,116,32,65,114,111,110,32,32,32,32,32,124,254,20,32,32,32,32,32,32,32,32,32,32,32,32,32,32,80,104,105,108,105,112,112,101,32,67,104,97,115,116,101,108,32,32,124,254,20,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,80,97,117,108,32,67,117,105,115,115,101,116,32,32,124,254,20,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,70,97,98,114,105,99,101,32,86,105,115,115,101,114,111,116,32,124,254,20,254,20,0,1,0,6,32,32,65,99,116,111,114,115,58,124,124,254,20,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,66,101,110,111,105,115,116,32,65,114,111,110,32,32,32,32,124,254,20,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,80,97,116,114,105,99,107,32,68,97,104,101,114,32,32,32,32,124,254,20,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,84,104,105,101,114,114,121,32,76,101,118,97,115,116,114,101,32,124,254,20,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,68,101,110,105,115,32,77,101,114,99,105,101,114,32,32,124,254,20,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,84,104,105,101,114,114,121,32,80,101,114,114,101,97,117,32,32,124,254,20,32,32,32,32,32,32,32,32,32,32,32,32,32,67,104,114,105,115,116,105,97,110,32,82,111,98,101,114,116,32,32,32,124,254,20,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,70,97,98,114,105,99,101,32,86,105,115,115,101,114,111,116,32,124,254,20,254,20,0,1,0,10,32,32,86,105,100,101,111,32,100,105,114,101,99,116,111,114,115,58,124,124,254,20,32,32,32,32,32,32,32,32,32,32,32,32,9,32,32,32,80,97,116,114,105,99,107,32,68,97,104,101,114,32,32,32,32,124,254,20,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,84,104,105,101,114,114,121,32,80,101,114,114,101,97,117,32,32,124,254,20,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,70,97,98,114,105,99,101,32,86,105,115,115,101,114,111,116,32,124,254,20,254,20,0,1,0,10,32,32,86,105,100,101,111,32,67,111,45,100,105,114,101,99,116,111,114,115,58,124,124,254,20,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,84,104,105,101,114,114,121,32,76,101,118,97,115,116,114,101,32,124,254,20,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,68,101,110,105,115,32,77,101,114,99,105,101,114,32,32,124,254,20,32,32,32,32,32,32,32,32,32,32,32,32,32,67,104,114,105,115,116,105,97,110,32,82,111,98,101,114,116,32,32,32,124,254,20,254,20,0,1,0,10,32,32,86,105,100,101,111,32,115,102,120,58,124,124,254,20,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,80,97,117,108,32,67,117,105,115,115,101,116,32,32,124,254,20,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,84,104,105,101,114,114,121,32,80,101,114,114,101,97,117,32,32,124,254,20,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,70,97,98,114,105,99,101,32,86,105,115,115,101,114,111,116,32,124,254,20,254,20,0,1,0,7,32,32,84,101,115,116,101,114,115,58,124,124,254,20,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,80,104,105,108,32,66,114,97,100,108,101,121,32,32,32,32,124,254,20,32,32,32,32,32,32,32,32,32,32,32,32,80,97,116,114,105,99,105,97,32,67,117,105,115,115,101,116,32,32,32,32,124,254,20,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,83,105,109,111,110,32,72,97,100,108,105,110,103,116,111,110,32,124,254,20,32,32,32,32,32,32,32,32,32,32,32,32,32,32,68,97,110,105,101,108,32,76,108,101,119,101,108,108,121,110,32,32,124,254,20,32,32,32,32,32,32,32,32,32,74,101,97,110,45,80,105,101,114,114,101,32,76,117,99,107,32,32,32,32,32,32,32,124,254,20,32,32,32,32,32,32,32,32,32,32,32,32,32,32,77,97,114,116,105,110,32,83,109,105,116,104,32,32,32,32,32,32,124,254,20,254,20,0,1,0,8,32,32,77,97,110,121,32,116,104,97,110,107,115,32,116,111,46,46,46,124,124,254,20,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,76,111,114,105,32,67,104,114,105,115,116,101,110,115,101,110,32,124,254,20,32,32,32,32,32,32,32,32,32,32,32,80,97,116,114,105,99,105,97,32,67,117,105,115,115,101,116,32,32,32,32,32,124,254,20,32,32,32,32,32,32,32,32,32,65,110,110,101,45,77,97,114,105,101,32,74,111,97,115,115,105,109,32,32,32,32,32,124,254,20,32,32,32,32,32,32,32,32,74,101,97,110,45,80,105,101,114,114,101,32,76,117,99,107,32,32,32,32,32,32,32,32,124,254,20,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,77,97,114,99,32,77,105,110,105,101,114,32,32,32,32,32,32,124,254,20,254,20,0,1,0,5,32,32,32,32,32,32,32,32,32,32,32,68,105,114,101,99,116,101,100,32,98,121,32,32,32,32,32,32,32,32,32,32,124,124,254,20,32,32,32,32,32,32,32,32,32,32,80,97,117,108,32,67,117,105,115,115,101,116,32,32,32,32,32,32,32,32,32,32,124,254,20,254,20,0,1,0,5,32,32,32,32,32,32,32,32,32,32,80,114,111,100,117,99,101,100,32,98,121,32,32,32,32,32,32,32,32,32,32,32,124,124,254,20,32,32,32,68,101,108,112,104,105,110,101,32,83,111,102,116,119,97,114,101,32,47,32,85,83,32,71,79,76,68,32,32,124,254,20,32,124,32,124,32,124,32,124,32,124,32,124,32,124,32,32,32,32,32,32,32,32,32,32,40,99,41,77,67,77,88,67,73,73,73,32,32,32,32,32,32,32,32,32,32,32,124,254,20,254,40,0,255]),c=Uint8Array.from([0,5,47,50,54,62,48,57,63,20,52,65535]),u=Uint8Array.from([16,21,21,255,21,25,15,255,21,4,21,255,255,0,25,21,21,13,21,13,24,19,255,255,255,20,20,20,20,20,255,255,19,19,19,19,21,20,20,20,20,20,20,19,19,17,255,3,14,19,18,255,6,7,10,10,21,5,19,2,21,9,23,8,11,12,20,20,20,20,20,20,255,255,255]),p=Uint8Array.from([0,0,0,20,0,0,0,82,0,0,6,212,0,0,0,146,0,0,8,36,0,0,0,2,0,40,0,84,0,140,0,178,0,222,1,33,1,84,1,123,1,157,1,194,1,240,2,44,2,102,2,159,2,191,2,247,3,53,3,117,3,164,3,254,4,59,4,123,4,182,4,248,5,59,5,102,5,158,5,210,6,16,0,0,15,255,2,34,3,51,4,68,5,85,6,102,7,119,8,136,9,153,10,170,11,187,12,204,13,221,14,238,15,255,0,0,4,5,5,5,0,0,4,68,5,85,6,102,7,119,8,136,9,153,10,170,11,187,12,204,13,221,14,238,15,255,0,0,0,12,0,0,2,0,1,1,0,2,2,0,3,1,0,4,2,0,5,1,0,6,2,0,7,2,0,8,2,0,9,1,0,10,2,0,11,2,0,10,0,12,2,0,13,1,0,14,2,0,15,1,128,10,0,97,0,0,2,0,16,1,128,2,255,201,255,255,2,128,4,255,177,255,255,2,0,17,1,0,18,2,0,14,0,0,2,128,13,0,0,0,14,1,128,14,0,0,0,14,2,0,19,1,0,20,2,0,21,1,0,22,2,128,11,255,238,0,76,2,0,23,1,0,24,1,0,25,2,0,26,2,0,27,2,0,28,2,0,8,0,0,2,0,24,1,0,25,2,128,13,0,0,0,70,1,128,14,0,0,0,70,2,0,29,1,0,30,2,128,11,0,8,0,77,2,0,14,0,0,2,0,31,1,0,32,2,0,33,2,0,34,2,0,35,1,0,36,2,0,37,1,0,38,1,0,39,2,0,40,1,0,41,2,0,42,1,0,43,1,0,15,0,0,2,0,44,1,0,45,1,0,46,2,0,47,1,0,48,2,128,24,0,0,0,127,1,128,25,0,0,0,127,2,128,10,0,3,255,178,1,128,10,0,3,255,219,1,0,49,1,0,50,1,0,51,1,128,49,0,16,0,34,2,0,52,2,0,15,0,0,2,0,20,2,0,21,1,0,22,2,128,11,255,238,0,76,2,0,24,1,0,25,2,0,37,1,0,38,1,0,39,2,0,40,1,0,41,2,0,42,1,0,53,1,0,54,2,0,11,0,0,2,0,55,1,0,56,2,0,57,1,0,58,2,0,59,2,128,40,255,200,0,11,1,0,60,2,0,61,1,0,62,1,0,63,2,0,8,0,0,2,0,64,1,0,65,2,0,66,1,128,45,0,0,0,126,1,128,46,0,0,0,54,2,0,67,1,0,68,2,0,9,0,0,2,0,69,1,0,70,2,0,71,1,0,72,2,0,73,1,128,45,255,218,0,125,1,128,46,255,229,0,54,2,0,74,1,0,12,0,0,2,0,37,1,0,38,1,0,39,2,0,40,1,0,41,2,0,42,1,0,16,1,128,2,255,201,255,255,2,128,4,255,177,255,255,2,0,17,1,0,18,2,0,14,0,0,2,0,75,1,0,76,2,128,20,0,52,255,223,2,0,77,1,0,78,2,0,79,1,0,80,2,0,81,2,0,82,2,128,24,0,127,0,127,1,128,25,0,127,0,127,2,0,83,3,128,43,255,249,0,5,1,0,12,0,0,2,0,64,1,0,65,2,0,84,1,128,56,255,243,0,0,2,128,46,0,0,0,54,2,128,71,0,0,0,44,1,0,85,2,128,71,0,0,0,13,1,128,85,0,0,255,225,2,0,67,1,0,68,2,0,13,0,0,2,0,57,1,0,58,2,0,59,2,128,40,255,200,0,11,1,0,60,2,128,21,0,0,255,241,1,128,22,0,0,255,241,2,128,11,255,238,0,61,2,0,86,1,0,87,2,0,88,1,0,89,2,0,10,0,0,2,0,90,1,0,91,2,0,92,1,0,93,2,0,94,1,0,95,1,0,96,2,0,97,2,0,98,1,0,10,0,0,2,0,99,1,128,65,0,59,0,31,2,128,86,0,0,255,203,1,128,87,0,0,255,203,2,0,100,1,0,101,2,128,40,0,5,255,243,1,128,24,0,0,0,127,1,128,25,0,0,0,127,2,0,12,0,0,2,0,57,1,0,58,2,0,59,2,128,40,255,200,0,11,1,0,60,2,128,21,0,0,255,223,1,128,22,0,0,255,223,2,128,11,255,238,0,43,2,0,102,1,128,91,0,47,0,0,2,128,98,0,47,0,0,1,0,10,0,0,2,128,24,0,0,0,127,1,128,25,0,0,0,127,2,128,90,0,0,255,163,1,128,91,0,0,255,197,2,128,98,0,0,255,197,1,128,71,0,0,0,44,1,0,85,2,128,71,0,0,0,13,1,128,85,0,0,255,225,2,0,11,0,0,2,0,103,1,0,104,2,0,105,1,0,106,1,0,107,2,0,108,2,128,88,255,210,255,224,1,128,89,255,210,255,224,2,0,109,1,128,20,255,219,0,22,1,0,16,0,0,2,0,66,1,128,45,0,0,0,126,1,128,46,0,0,0,54,2,0,16,1,128,2,255,201,255,255,2,128,4,255,177,255,255,2,0,17,1,0,18,2,128,49,0,4,255,237,1,0,110,1,128,51,0,4,255,151,1,128,49,0,20,255,203,2,128,52,0,4,255,236,2,128,71,0,0,0,4,1,128,85,0,0,255,216,2,0,13,0,0,2,128,49,255,187,255,255,1,128,50,255,187,255,255,1,0,111,1,128,49,255,203,0,33,2,128,52,255,187,255,255,2,0,24,1,0,25,2,0,112,1,0,113,2,0,114,2,0,115,2,128,40,255,238,0,43,1,0,14,0,0,2,0,116,1,128,45,255,241,0,125,1,128,46,0,0,0,54,2,128,49,255,251,255,191,1,0,117,1,0,118,1,128,49,0,29,255,207,2,0,119,2,0,64,1,0,65,2,0,120,1,0,121,1,128,40,255,248,0,5,1,0,15,0,0,2,0,77,1,0,75,1,0,122,2,128,20,0,51,255,220,2,0,78,2,0,123,1,0,124,2,128,21,0,102,255,213,1,0,125,2,128,11,0,67,0,33,2,0,126,1,0,127,1,0,128,1,0,129,2,0,12,0,0,2,128,84,0,0,255,186,1,128,56,255,243,255,243,2,0,86,1,0,87,2,0,88,1,0,89,2,128,71,0,0,255,234,1,128,85,0,0,255,190,2,128,71,0,0,255,203,1,128,85,0,0,255,159,2,128,43,0,10,255,192,1,0,15,0,0,2,0,130,1,0,131,1,128,24,0,127,0,0,1,128,25,0,127,0,0,2,0,83,3,0,132,1,0,133,2,0,134,2,128,49,0,29,0,29,2,0,135,1,128,10,0,22,255,246,2,0,136,2,128,49,255,251,0,45,1,0,137,1,0,11,0,0,2,0,138,1,128,70,0,1,255,233,2,0,139,1,128,120,255,223,0,11,2,0,140,1,0,141,1,0,142,2,0,143,1,0,144,2,0,145,1,0,14,0,0,2,0,146,1,128,2,255,167,0,88,2,0,147,1,0,148,2,0,149,2,0,150,1,0,151,2,0,152,1,0,153,2,0,154,1,0,155,2,128,154,255,225,0,0,1,128,155,255,225,0,0,2,0,10,0,0,2,128,2,255,167,0,88,2,0,156,1,0,157,2,0,158,2,128,115,255,191,0,127,2,128,40,255,171,0,44,1,128,24,0,127,0,127,1,128,25,0,127,0,127,2,0,83,3,0,12,0,0,2,128,23,0,1,0,0,1,0,159,1,0,160,2,128,20,0,2,0,3,2,128,78,0,57,255,240,2,0,161,1,128,127,0,59,0,38,1,0,162,1,128,120,0,1,255,180,2,0,163,2,128,40,255,244,255,246,1,0,13,0,0,2,0,37,1,0,38,1,0,39,2,0,40,1,0,41,2,0,42,1,0,164,1,0,165,2,0,166,1,0,167,2,128,166,255,225,0,0,1,128,167,255,225,0,0,2,0,0,0,0,11,0,38,0,47,0,58,0,67,0,84,0,101,0,110,0,127,0,142,0,151,0,160,0,171,0,198,0,225,0,240,1,11,1,28,1,37,1,48,1,57,1,68,1,85,1,94,1,103,1,112,1,123,1,134,1,143,1,154,1,171,1,180,1,193,1,202,1,211,1,248,2,17,2,28,2,37,2,46,2,55,2,64,2,79,2,90,2,101,2,110,2,119,2,144,2,167,2,176,2,187,2,198,2,209,2,246,3,15,3,26,3,35,3,46,3,55,3,72,3,81,3,106,3,117,3,142,3,153,3,162,3,173,3,206,3,233,3,244,3,253,4,22,4,45,4,56,4,65,4,76,4,87,4,96,4,105,4,114,4,127,4,136,4,153,4,166,4,177,4,194,4,205,4,226,4,251,5,12,5,23,5,32,5,43,5,52,5,77,5,88,5,113,5,132,5,141,5,152,5,179,5,196,5,207,5,218,5,227,5,238,5,247,6,2,6,15,6,26,6,37,6,48,6,59,6,76,6,85,6,94,6,105,6,116,6,127,6,138,6,147,6,156,6,171,6,182,6,191,6,208,6,217,6,226,6,251,7,12,7,23,7,34,7,45,7,62,7,79,7,88,7,99,7,108,7,119,7,134,7,145,7,154,7,163,7,172,7,181,7,190,7,217,7,234,7,243,7,252,8,7,8,28,8,53,8,70,8,95,8,112,8,123,8,140,8,149,8,160,8,175,8,182,8,191,8,202,8,239,9,8,9,33,3,0,0,0,0,127,0,0,127,129,0,11,0,127,0,0,0,127,250,0,248,254,250,253,247,247,252,249,254,248,255,250,0,252,0,168,28,0,255,0,91,0,3,0,30,0,30,3,0,0,0,0,83,0,0,25,173,0,255,0,103,0,74,0,15,0,22,6,0,91,0,0,13,0,0,3,254,6,252,4,252,1,253,0,6,0,83,0,1,0,24,235,0,1,249,3,249,6,250,6,253,2,0,91,0,35,23,23,233,6,6,0,0,0,2,6,3,6,6,3,7,2,10,235,0,0,229,5,0,0,0,26,101,101,155,0,0,222,30,250,1,0,255,0,15,0,93,0,15,0,15,255,0,39,0,25,0,21,0,24,3,0,127,0,127,130,0,0,129,126,0,11,0,127,0,17,230,13,0,251,1,251,3,249,4,250,3,253,6,253,2,0,0,0,2,255,5,0,11,0,127,0,34,227,13,0,251,1,251,3,249,4,250,3,253,6,253,2,0,0,0,2,255,8,0,5,0,96,0,87,1,0,30,6,0,34,155,0,101,155,11,0,8,0,0,28,0,0,87,0,4,255,6,254,8,252,7,247,9,250,3,248,3,250,0,0,129,6,0,36,0,13,253,0,252,255,252,252,254,250,0,254,13,0,2,0,36,0,63,233,250,23,233,3,0,127,0,45,0,82,129,0,0,238,255,0,37,0,80,0,25,0,25,3,0,0,0,105,0,208,25,0,0,48,6,0,1,0,57,24,0,0,21,249,255,249,253,250,250,253,250,2,0,1,0,127,50,231,0,25,255,0,0,0,0,0,42,0,42,255,0,0,0,0,0,24,0,24,3,0,126,0,45,233,45,238,229,42,235,3,0,49,0,102,207,24,0,223,42,245,255,0,86,0,76,0,22,0,22,3,0,47,0,102,44,0,0,25,212,0,6,0,86,0,125,250,253,250,250,253,249,255,249,21,0,0,24,2,0,44,0,127,212,0,0,170,4,0,17,0,112,254,252,20,0,11,19,242,0,255,0,28,0,105,0,13,0,11,255,0,25,0,38,0,25,0,54,16,0,47,0,0,31,0,0,10,254,15,254,9,253,10,251,10,248,10,249,7,244,8,252,2,249,1,0,233,8,249,6,245,3,243,2,243,10,0,23,0,60,8,255,10,253,5,252,5,251,6,247,254,9,254,6,247,15,246,10,245,9,3,0,111,0,31,16,0,0,96,240,0,255,0,107,0,46,0,20,0,39,255,0,113,0,22,0,14,0,23,255,0,115,0,20,0,7,0,7,2,0,110,0,77,0,9,248,255,5,0,111,0,77,0,50,225,0,14,242,8,246,6,245,3,0,36,0,104,45,0,0,7,211,0,3,0,81,0,0,46,0,0,39,210,0,255,0,81,0,0,0,43,0,38,255,0,103,0,36,0,23,0,23,10,0,127,0,75,251,0,251,254,1,0,250,253,253,253,253,252,252,247,255,251,0,251,26,13,9,0,127,0,57,248,0,252,255,250,253,253,253,252,250,253,249,255,251,0,252,29,12,255,0,78,0,73,0,19,0,19,3,0,69,0,54,12,0,4,71,240,0,3,0,69,0,105,27,0,0,22,229,0,3,0,56,0,54,12,0,0,39,244,0,16,0,63,0,127,226,0,0,245,1,241,2,247,3,246,5,246,8,246,7,249,12,248,4,254,7,255,0,23,248,7,250,11,253,13,254,13,10,0,84,0,67,248,0,249,3,251,4,251,5,250,9,2,247,2,250,9,241,9,247,8,249,3,0,70,0,70,57,0,0,57,199,0,255,0,70,0,70,0,47,0,47,3,0,32,0,0,95,0,0,46,161,0,255,0,0,0,33,0,73,0,36,6,0,81,0,46,9,254,15,254,10,0,12,2,0,4,208,0,2,0,67,0,42,12,6,244,0,10,0,0,0,127,0,197,25,0,15,254,13,252,14,26,251,12,248,9,240,10,244,4,241,4,3,0,0,0,61,7,4,12,3,237,1,10,0,54,0,61,13,26,244,7,243,2,249,255,250,255,251,252,6,255,10,251,8,248,4,249,3,0,0,0,0,33,0,0,33,223,0,255,0,33,0,48,0,35,0,35,3,0,81,0,87,46,0,0,40,210,0,14,0,96,0,12,250,10,251,13,254,11,1,10,240,17,252,250,254,252,253,242,0,246,1,243,3,246,5,247,4,249,36,0,11,0,67,0,75,254,242,1,247,1,248,3,247,3,250,3,250,0,9,0,7,1,6,3,7,5,5,3,0,0,0,27,52,0,0,47,204,0,255,0,52,0,74,0,51,0,33,10,0,127,0,70,230,13,0,251,1,251,4,247,3,252,3,253,6,253,255,0,5,255,5,0,9,0,127,0,87,227,13,0,251,1,251,3,249,4,250,3,253,6,253,4,255,8,0,3,0,48,0,87,52,0,0,40,204,0,255,0,52,0,0,0,14,0,14,3,0,0,0,82,0,174,127,0,0,18,3,0,77,0,25,50,232,0,33,213,11,2,0,125,0,0,206,25,0,231,255,0,34,0,79,0,36,0,50,2,0,37,0,127,219,0,0,183,4,0,14,0,114,255,253,16,0,10,16,244,0,255,0,24,0,108,0,11,0,9,6,0,1,0,61,1,251,21,41,245,252,252,251,251,247,254,244,4,0,128,0,0,41,0,0,127,0,42,215,0,3,0,57,0,127,199,0,0,199,57,0,6,0,127,0,127,231,0,4,250,3,253,6,253,4,255,8,0,3,0,68,0,76,59,0,0,51,197,0,8,0,127,0,90,0,37,209,0,1,246,7,245,7,249,8,251,6,254,10,254,10,0,72,0,92,251,0,251,255,1,0,250,253,253,253,253,252,252,247,255,251,0,251,26,13,6,0,72,0,75,248,0,252,255,250,253,253,253,252,250,25,0,3,0,47,0,93,80,0,0,34,176,0,255,0,47,0,93,0,33,0,33,3,0,0,0,26,33,0,0,101,223,0,255,0,33,0,26,0,32,0,32,10,0,127,0,0,0,57,220,2,247,2,247,4,243,230,4,244,8,247,16,246,12,252,15,252,3,0,127,0,66,247,250,246,254,19,0,10,0,72,0,66,244,230,11,249,13,254,7,1,6,1,5,4,250,1,245,6,249,7,252,7,7,0,33,0,127,230,0,0,242,2,242,4,243,4,245,7,247,9,249,255,0,47,0,93,0,13,0,13,3,0,127,0,127,223,0,0,217,33,0,11,0,72,0,39,251,0,251,255,1,0,250,253,253,253,253,252,252,247,255,251,255,251,0,249,27,20,6,0,71,0,16,3,6,244,253,247,249,253,253,252,250,25,0,3,0,94,0,127,162,0,0,222,94,0,3,0,63,0,63,64,0,0,64,192,0,255,0,63,0,63,0,55,0,55,3,0,63,0,0,29,0,0,74,227,0,255,0,63,0,74,0,29,0,29,3,0,34,0,44,28,0,0,62,228,0,4,0,92,0,71,248,0,0,237,2,234,6,226,3,0,0,0,102,26,0,0,25,230,0,3,0,73,0,2,16,0,252,71,244,0,3,0,0,0,104,27,0,0,23,229,0,3,0,127,0,20,0,107,210,0,0,149,6,0,81,0,81,2,9,2,15,0,10,254,12,252,0,0,208,2,0,85,0,67,250,12,0,244,255,0,96,0,0,0,31,0,77,3,0,67,0,87,60,0,0,40,196,0,3,0,125,255,255,0,16,185,252,0,244,3,0,127,255,255,0,27,234,0,0,229,3,0,93,255,242,0,12,217,0,0,244,255,0,103,0,88,0,12,0,12,255,0,26,0,44,0,10,0,10,5,0,72,0,25,12,247,18,247,25,250,0,33,213,11,3,0,46,0,83,81,0,0,44,175,0,255,0,26,0,83,0,100,0,32,6,0,125,0,19,253,6,250,6,249,3,249,1,0,235,24,0,2,0,7,0,39,249,21,0,247,255,0,31,0,52,0,11,0,11,10,0,0,0,87,26,243,0,5,255,5,252,9,253,4,253,3,250,3,1,0,251,1,251,0,6,0,0,0,74,25,0,252,6,253,3,250,3,252,1,248,0,3,0,105,0,127,0,229,22,0,0,27,3,0,54,0,127,0,244,71,252,0,16,3,0,73,0,25,210,0,0,231,46,0,6,0,33,0,2,6,3,6,6,3,7,1,7,234,0,0,232,6,0,73,0,1,0,24,234,0,1,249,3,249,6,250,6,253,2,0,0,0,94,0,162,94,94,3,0,46,0,71,61,30,190,0,255,226,255,0,3,0,125,0,17,0,17,3,0,0,0,0,52,0,0,54,204,0,5,0,57,0,94,1,0,25,5,0,28,173,0,83,173,3,0,113,0,46,14,0,0,81,242,0,255,0,110,0,59,0,17,0,33,255,0,115,0,38,0,12,0,19,255,0,116,0,37,0,6,0,6,2,0,112,0,85,0,7,249,0,2,0,113,0,85,0,42,235,0,11,0,0,0,119,0,228,87,0,4,0,6,1,8,2,7,4,9,9,3,6,3,8,0,6,129,0,6,0,13,0,91,0,3,255,4,252,4,250,2,254,0,0,243,2,0,63,0,91,250,23,233,233,255,0,72,0,104,0,20,0,15,3,0,76,0,59,0,197,51,0,0,59,8,0,90,0,0,37,0,0,47,246,255,245,249,249,249,251,248,254,250,254,246,10,0,92,0,55,0,5,255,5,0,255,253,6,253,3,252,3,247,4,251,1,251,0,13,230,6,0,75,0,55,0,8,255,4,253,6,253,3,250,4,0,231,10,0,48,0,0,13,26,251,0,251,255,247,252,252,253,253,253,253,250,0,1,255,251,0,251,6,0,61,0,0,0,25,250,252,253,253,253,250,255,252,0,248,3,0,0,0,108,0,148,46,0,0,108,6,0,46,0,46,254,247,254,241,0,246,2,244,4,0,0,48,2,0,42,0,60,6,244,0,12,3,0,127,0,63,0,64,130,0,0,238,5,0,55,0,102,244,9,238,9,232,6,0,223,42,245,1,0,127,0,67,0,9,2,0,127,0,0,0,76,180,180,3,0,51,0,0,53,0,2,23,250,1,16,0,30,0,15,2,13,3,13,6,11,8,7,0,23,249,255,252,254,244,248,249,249,248,246,251,246,253,246,254,247,255,241,0,246,30,0,10,0,55,0,87,244,247,246,246,247,241,254,250,254,247,6,9,5,5,5,4,10,3,9,1,10,0,44,0,127,0,251,1,251,0,1,3,250,3,253,4,253,9,252,5,255,5,0,243,26,6,0,61,0,127,0,248,1,252,3,250,3,253,6,252,0,25]),d=Uint16Array.from([0,200,300,400,500,800,1e3,1200,1500,2e3,2200,2500,3e3,3200,3500,5e3]),f=Uint8Array.from([34,0,35,0,255]),y=Uint8Array.from([34,0,35,0,75,0,73,1,77,1,118,2,255]),m=Uint8Array.from([118,2,255]),g=Uint8Array.from([77,1,118,2,255]),b=Uint8Array.from([118,2,172,2,215,3,255]),T=Uint8Array.from([176,3,215,3,255]),E=Uint8Array.from([176,3,215,3,216,3,255]),A=[f,y,m,g,b,T,E],S=[Uint8Array.from([0,0,170,10,101,10,68,8,34,6,32,3,64,5,135,12,118,11,52,3,85,9,48,4,96,7,85,4,119,7,255,15]),Uint8Array.from([0,0,134,12,102,9,68,8,252,5,162,2,73,5,2,0,20,2,55,4,37,3,56,6,175,12,111,9,76,7,255,15]),Uint8Array.from([0,0,121,8,68,5,85,6,102,11,70,5,87,6,34,3,68,8,51,4,172,8,138,6,104,4,86,2,53,2,206,10]),Uint8Array.from([0,0,108,0,57,2,76,2,39,2,16,7,21,1,0,4,16,5,32,8,0,2,48,9,85,11,255,15,51,10,255,15])],w=Uint8Array.from([90,0,113,0,144,0,151,1,88,2,123,2,197,2,234,2,80,3,108,3,168,3,247,3,70,4,152,4,28,5,87,5,105,5,225,5,244,5,25,6,181,6,156,8,17,9,43,9,141,9,166,9,185,9,220,9,239,9,19,10,21,10,23,10,127,10,144,10,33,11,74,11,8,12,32,12,68,12,119,12,14,13,85,13,147,13,187,13,245,13,76,69,32,70,85,83,73,66,76,69,32,69,83,84,10,71,82,73,76,76,69,46,0,77,65,73,78,84,69,78,65,78,84,32,67,65,10,68,79,73,84,32,70,79,78,67,84,73,79,78,78,69,82,0,255,235,236,74,39,83,85,73,83,32,74,65,67,75,46,10,84,85,32,86,69,85,88,32,68,69,83,32,70,65,85,88,10,80,65,80,73,69,82,83,63,11,255,233,234,79,85,73,44,69,84,32,76,69,32,80,76,85,83,10,86,73,84,69,32,80,79,83,83,73,66,76,69,46,11,255,235,236,49,53,48,48,32,67,82,69,68,73,84,83,33,11,255,233,234,49,53,48,48,63,63,63,11,255,235,236,79,85,65,73,83,44,74,39,80,82,69,78,68,83,10,85,78,32,71,82,79,83,32,82,73,83,81,85,69,46,11,255,233,234,77,65,73,83,32,74,69,32,78,39,65,73,32,80,65,83,10,65,83,83,69,90,46,46,46,11,255,235,236,86,65,32,65,32,76,39,65,71,69,78,67,69,10,80,79,85,82,32,76,39,69,77,80,76,79,73,32,69,84,10,84,85,32,65,85,82,65,83,32,85,78,32,74,79,66,46,11,69,84,32,82,69,86,73,69,78,83,32,77,69,10,86,79,73,82,32,81,85,65,78,68,32,84,85,10,65,85,82,65,83,32,68,69,10,76,39,65,82,71,69,78,84,0,255,235,236,74,39,67,79,78,78,65,73,83,32,67,69,10,71,65,82,83,32,76,65,46,32,73,76,32,65,10,85,78,32,65,77,73,32,81,85,73,32,69,83,84,10,85,78,32,82,79,66,79,84,45,70,76,73,67,46,11,79,85,32,80,85,73,83,45,74,69,10,84,82,79,85,86,69,82,32,67,69,84,32,65,77,73,63,11,86,65,32,86,79,73,82,32,65,32,76,65,10,82,69,83,84,82,73,67,84,69,68,32,65,82,69,65,10,49,46,74,69,32,67,82,79,73,83,32,81,85,39,73,76,10,69,83,84,32,68,69,32,71,65,82,68,69,11,77,65,73,83,32,70,65,73,83,32,71,65,70,70,69,10,67,69,83,32,84,89,80,69,83,45,76,65,32,10,83,79,78,84,32,68,65,78,71,69,85,82,69,85,88,0,255,235,236,74,69,32,78,69,32,83,65,73,83,32,82,73,69,78,10,68,69,32,80,76,85,83,44,32,71,65,77,73,78,46,0,255,235,236,67,89,45,66,48,50,49,32,86,69,85,84,10,80,65,83,83,69,82,32,85,78,32,77,65,82,67,72,69,10,65,86,69,67,32,84,79,73,46,11,73,76,32,84,39,65,84,84,69,78,68,82,65,10,68,69,82,82,73,69,82,69,32,76,69,32,66,65,82,46,0,255,235,236,86,65,32,65,85,32,66,65,82,44,32,80,69,84,73,84,10,67,89,45,66,48,50,49,32,84,39,65,84,84,69,78,68,0,255,235,236,78,69,32,84,73,82,69,32,80,65,83,46,10,74,39,83,85,73,83,32,80,65,83,10,67,89,45,66,48,50,49,46,11,83,65,32,80,76,65,78,81,85,69,32,69,83,84,10,69,78,32,68,69,83,83,79,85,83,11,67,39,69,83,84,32,83,79,78,32,67,79,80,65,73,78,10,76,69,32,70,76,73,67,44,32,81,85,73,32,65,10,76,65,32,67,76,69,46,0,255,235,236,74,69,32,78,69,32,83,65,73,83,32,82,73,69,78,10,68,69,32,80,76,85,83,46,0,255,235,236,77,79,78,83,73,69,85,82,46,46,46,10,85,78,32,68,69,78,79,77,77,69,32,74,65,67,75,10,86,79,85,83,32,68,79,78,78,69,32,82,46,68,46,86,10,80,82,69,83,32,68,85,32,66,65,82,0,74,69,32,86,79,85,68,82,65,73,83,32,85,78,10,80,69,82,77,73,83,32,68,69,10,84,82,65,86,65,73,76,46,11,255,235,236,65,72,32,78,79,78,46,67,39,69,83,84,32,80,65,83,10,73,67,73,46,32,86,79,89,69,90,32,76,69,10,71,85,73,67,72,69,84,32,67,46,0,74,69,32,86,79,85,68,82,65,73,83,32,85,78,10,80,69,82,77,73,83,32,100,101,10,84,82,65,86,65,73,76,46,11,255,235,236,66,79,78,46,46,46,32,79,75,44,76,69,10,71,79,85,86,69,82,78,69,85,82,32,86,65,10,86,79,85,83,32,82,69,67,69,86,79,73,82,46,0,74,69,32,86,79,85,68,82,65,73,83,32,85,78,10,80,69,82,77,73,83,32,68,69,10,84,82,65,86,65,73,76,46,11,255,235,236,65,72,32,78,79,78,46,67,69,32,78,39,69,83,84,10,80,65,83,32,73,67,73,46,32,86,79,89,69,90,10,76,69,32,71,85,73,67,72,69,84,32,66,46,0,74,69,32,86,79,85,68,82,65,73,83,10,80,65,82,76,69,82,32,65,32,74,65,67,75,46,11,255,235,236,65,72,32,79,85,65,73,83,63,32,74,65,67,75,10,78,39,69,83,84,32,80,65,83,32,76,65,46,11,255,233,234,72,85,77,46,46,46,74,69,32,86,73,69,78,83,10,68,69,32,76,65,32,80,65,82,84,32,68,69,10,77,79,78,32,65,77,73,32,73,65,78,46,11,255,235,236,79,75,46,74,65,67,75,32,84,39,65,84,84,69,78,68,10,68,69,72,79,82,83,46,0,255,235,236,80,65,83,83,69,32,84,79,78,32,67,72,69,77,73,78,10,71,65,77,73,78,46,32,84,39,69,83,32,84,82,79,80,10,74,69,85,78,69,32,80,79,85,82,10,67,79,78,83,79,77,77,69,82,46,0,255,235,236,80,65,80,73,69,82,83,32,83,46,86,46,80,46,0,255,235,236,74,69,32,83,85,73,83,32,76,69,10,67,79,85,82,83,73,69,82,46,11,255,235,236,65,72,32,79,85,73,33,86,79,73,76,65,44,10,65,77,69,78,69,90,32,67,69,32,80,65,81,85,69,84,10,65,32,76,39,65,71,69,78,67,69,32,68,69,10,86,79,89,65,71,69,46,11,69,84,32,70,65,73,84,69,83,10,65,84,84,69,78,84,73,79,78,44,32,67,65,10,65,32,68,69,32,76,65,32,86,65,76,69,85,82,46,0,76,69,32,84,69,77,80,32,69,83,84,10,69,67,79,85,76,69,0,73,76,32,89,32,65,32,85,78,10,69,77,80,76,65,67,69,77,69,78,84,32,80,79,85,82,10,76,65,32,67,65,82,84,69,46,0,255,235,236,77,69,82,67,73,32,67,79,78,82,65,68,46,10,67,69,83,32,70,76,73,67,83,10,77,39,65,85,82,65,73,69,78,84,32,70,65,73,84,10,76,65,32,80,69,65,85,11,66,79,78,44,74,69,32,83,85,80,80,79,83,69,10,81,85,69,32,84,85,32,78,69,32,84,69,10,82,65,80,69,76,76,69,83,32,80,65,83,32,68,69,10,84,79,78,32,65,77,73,32,73,65,78,46,11,65,76,76,69,90,44,65,83,83,73,69,68,83,10,84,79,73,32,83,85,82,32,67,69,10,83,73,69,71,69,44,79,78,32,86,65,32,89,10,82,69,77,69,68,73,69,82,0,73,65,78,44,67,79,77,77,69,78,84,10,70,65,73,82,69,32,80,79,85,82,10,65,76,76,69,82,32,83,85,82,32,84,69,82,82,69,63,11,255,235,236,76,69,32,86,79,89,65,71,69,32,69,83,84,10,72,79,82,83,32,68,69,32,80,82,73,88,46,11,76,69,32,83,69,85,76,32,77,79,89,69,78,10,83,69,82,65,73,84,32,81,85,69,32,84,85,10,80,65,82,84,73,67,73,80,69,83,32,65,85,10,68,69,65,84,72,32,84,79,87,69,82,46,11,255,233,234,68,69,65,84,72,32,84,79,87,69,82,63,11,255,235,236,79,85,73,44,67,39,69,83,84,32,85,78,32,74,69,85,10,84,69,76,69,86,73,83,69,46,76,69,10,71,65,71,78,65,78,84,32,82,69,67,79,73,84,10,85,78,32,66,73,76,76,69,84,46,11,255,233,234,79,75,46,73,76,32,77,69,32,70,65,85,84,10,65,85,83,83,73,32,68,69,83,32,70,65,85,88,10,80,65,80,73,69,82,83,46,11,255,235,236,78,79,32,80,82,79,66,76,69,77,79,44,10,86,65,32,65,85,32,66,65,82,44,32,69,84,10,68,69,77,65,78,68,69,32,74,65,67,75,10,68,69,32,77,65,32,80,65,82,84,46,11,65,72,44,65,85,32,70,65,73,84,44,74,69,10,84,39,65,73,32,77,73,83,32,68,65,78,83,32,76,65,10,80,79,67,72,69,32,76,69,32,67,72,65,77,80,10,68,69,32,80,82,79,84,69,67,84,73,79,78,11,81,85,69,32,84,85,32,77,39,65,86,65,73,83,10,67,79,77,77,65,78,68,69,46,11,255,233,234,80,65,82,70,65,73,84,46,74,69,32,84,69,10,82,69,77,69,82,67,73,69,46,32,65,32,76,65,10,80,82,79,67,72,65,73,78,69,44,32,73,65,78,46,11,255,235,236,66,79,78,78,69,32,67,72,65,78,67,69,46,74,69,10,84,69,32,67,79,78,84,65,67,84,69,82,65,73,10,65,32,84,79,78,32,65,82,82,73,86,69,32,83,85,82,10,84,69,82,82,69,46,0,255,235,236,66,73,69,78,86,69,78,85,69,32,65,10,78,69,87,32,87,65,83,72,73,78,71,84,79,78,44,10,74,69,85,78,69,32,72,79,77,77,69,46,11,86,79,73,67,73,32,85,78,32,80,76,65,78,10,68,69,32,76,65,32,86,73,76,76,69,44,32,73,76,10,80,79,85,82,82,65,32,86,79,85,83,32,69,84,82,69,10,85,84,73,76,69,46,11,255,233,234,77,69,82,67,73,44,77,79,78,83,73,69,85,82,46,0,255,235,236,66,79,78,32,83,69,74,79,85,82,44,80,65,82,77,73,10,78,79,85,83,46,0,255,235,236,80,79,85,82,32,84,82,65,86,65,73,76,76,69,82,10,73,76,32,86,79,85,83,32,70,65,85,84,32,85,78,10,80,69,82,77,73,83,46,11,86,79,85,83,32,80,79,85,82,82,69,90,32,69,78,10,79,66,84,69,78,73,82,32,85,78,32,65,85,10,67,69,78,84,82,69,32,65,68,77,73,78,73,83,45,10,45,84,82,65,84,73,70,46,0,255,235,236,74,69,32,78,39,65,73,32,80,65,83,32,76,69,10,84,69,77,80,83,46,0,66,79,78,74,79,85,82,32,67,72,69,90,10,86,79,85,83,46,0,255,235,236,74,39,65,73,32,68,69,74,65,32,86,85,10,67,69,32,84,89,80,69,32,76,65,32,65,85,10,66,65,82,46,0,66,79,78,74,79,85,82,32,67,72,69,90,10,86,79,85,83,46,0,79,85,73,44,74,69,32,76,69,10,67,79,78,78,65,73,83,46,67,39,69,83,84,32,85,78,10,72,65,66,73,84,85,69,46,0,32,0,32,0,74,69,32,86,79,85,68,82,65,73,83,32,85,78,10,80,69,82,77,73,83,32,68,69,10,84,82,65,86,65,73,76,46,11,255,235,236,80,65,83,32,68,69,32,80,82,79,66,76,69,77,69,10,80,79,85,82,32,65,86,79,73,82,32,85,78,10,80,69,82,77,73,83,46,46,46,11,73,76,32,77,69,32,70,65,85,84,10,86,79,84,82,69,32,67,65,82,84,69,32,73,68,46,0,255,235,236,65,85,32,83,69,67,79,85,82,83,46,46,46,0,255,235,236,65,73,68,69,90,32,77,79,73,44,74,69,85,78,69,10,72,79,77,77,69,46,74,39,65,73,32,69,84,69,10,65,84,84,65,81,85,69,32,80,65,82,32,68,69,83,10,77,85,84,65,78,84,83,46,46,46,11,69,84,32,74,69,32,78,69,32,80,69,85,88,10,80,76,85,83,32,77,65,82,67,72,69,82,11,82,69,84,82,79,85,86,69,90,32,77,79,78,10,84,69,76,69,80,79,82,84,69,85,82,44,10,73,76,32,77,69,32,70,65,85,84,32,68,69,83,10,83,79,73,78,83,32,85,82,71,69,78,84,83,46,0,255,235,236,77,69,82,67,73,46,86,79,85,83,32,86,69,78,69,90,10,68,69,32,77,69,32,83,65,85,86,69,82,32,76,65,10,86,73,69,46,0,255,235,236,80,79,85,82,32,65,76,76,69,82,32,65,32,78,69,87,10,87,65,83,72,73,78,71,84,79,78,44,84,85,10,68,79,73,83,32,83,65,85,84,69,82,32,68,65,78,83,10,67,69,32,71,82,65,78,68,32,84,82,79,85,11,77,65,73,83,32,65,32,84,65,32,80,76,65,67,69,10,74,39,85,84,73,76,73,83,69,82,65,73,83,10,85,78,69,32,67,69,73,78,84,85,82,69,10,65,78,84,73,45,71,46,11,255,233,234,79,85,32,80,85,73,83,45,74,69,32,69,78,10,84,82,79,85,86,69,82,32,85,78,69,63,11,255,235,236,72,69,46,72,69,46,74,69,32,80,69,85,88,10,84,69,32,76,65,32,86,69,78,68,82,69,58,10,53,48,48,32,67,82,69,68,73,84,83,46,0,66,79,78,32,86,79,89,65,71,69,44,74,69,85,78,69,10,72,79,77,77,69,46,0,73,76,32,70,65,85,68,82,65,73,84,10,85,78,69,32,80,73,76,69,10,67,72,65,82,71,69,69,32,65,32,66,76,79,67,0,74,69,32,86,79,85,68,82,65,73,83,32,85,78,10,80,69,82,77,73,83,32,68,69,10,84,82,65,86,65,73,76,46,11,255,235,236,80,82,69,77,73,69,82,32,69,84,65,71,69,0,85,78,69,32,86,79,73,88,10,73,78,84,69,82,73,69,85,82,69,32,115,101,10,70,65,73,84,32,69,78,84,69,78,68,82,69,58,11,255,235,236,70,65,73,83,45,77,79,73,10,67,79,78,70,73,65,78,67,69,46,80,79,83,69,10,76,65,32,67,72,65,82,71,69,10,65,84,79,77,73,81,85,69,32,73,67,73,46,46,46,11,69,84,32,70,85,73,83,32,65,86,65,78,84,10,81,85,39,69,76,76,69,32,78,39,65,84,45,10,45,84,69,73,71,78,69,32,76,69,32,78,79,89,65,85,10,68,69,32,76,65,32,80,76,65,78,69,84,69,46,0,255,235,236,74,69,32,86,79,85,83,32,83,85,73,83,44,10,74,69,85,78,69,32,72,79,77,77,69,46,11,71,85,73,68,69,90,45,77,79,73,10,74,85,83,81,85,39,65,85,32,67,69,78,84,82,69,10,68,69,32,82,69,67,72,69,82,67,72,69,46,0,255,235,236,77,69,82,67,73,32,68,69,32,86,79,84,82,69,10,65,73,68,69,46,46,46,11,73,76,32,78,39,89,32,65,32,80,76,85,83,10,68,69,32,68,65,78,71,69,82,44,10,77,65,73,78,84,69,78,65,78,84,0,255,235,236,65,76,79,82,83,44,77,39,65,86,69,90,10,86,79,85,83,32,65,80,80,79,82,84,69,10,76,69,32,80,65,81,85,69,84,63,0,67,79,77,66,73,69,78,32,67,79,85,84,69,10,85,78,32,66,73,76,76,69,84,32,80,79,85,82,10,76,65,32,84,69,82,82,69,63,11,255,235,236,53,48,32,48,48,48,32,67,82,69,68,73,84,83,46,0,255,235,236,68,79,78,78,65,78,84,44,68,79,78,78,65,78,84,46,10,49,53,48,48,32,67,82,69,68,73,84,83,32,69,84,10,76,69,83,32,80,65,80,73,69,82,83,32,83,79,78,84,10,65,32,84,79,73,46,0]),R=Uint8Array.from([90,0,109,0,131,0,151,1,72,2,108,2,183,2,233,2,64,3,95,3,159,3,219,3,29,4,89,4,221,4,8,5,26,5,131,5,142,5,172,5,57,6,35,8,142,8,162,8,243,8,9,9,40,9,81,9,112,9,147,9,149,9,151,9,238,9,0,10,128,10,162,10,75,11,100,11,143,11,183,11,64,12,118,12,199,12,244,12,38,13,84,104,101,32,102,117,115,101,32,105,115,10,98,108,111,119,110,46,0,84,104,97,116,32,115,104,111,117,108,100,10,119,111,114,107,32,110,111,119,46,0,255,235,236,73,39,109,32,74,97,99,107,46,89,111,117,39,114,101,10,97,102,116,101,114,32,115,111,109,101,32,102,97,108,115,101,10,112,97,112,101,114,115,63,11,255,233,234,89,101,115,44,97,110,100,32,97,115,10,113,117,105,99,107,108,121,32,97,115,10,112,111,115,115,105,98,108,101,46,11,255,235,236,49,53,48,48,32,99,114,101,100,105,116,115,33,11,255,233,234,49,53,48,48,63,63,63,11,255,235,236,89,101,97,104,44,73,39,109,32,116,97,107,105,110,103,10,97,32,98,105,103,32,114,105,115,107,32,104,101,114,101,46,11,255,233,234,66,117,116,32,73,32,100,111,110,39,116,10,104,97,118,101,32,101,110,111,117,103,104,46,46,46,11,255,235,236,71,111,32,116,111,32,116,104,101,10,69,109,112,108,111,121,109,101,110,116,10,79,102,102,105,99,101,44,32,121,111,117,39,108,108,10,102,105,110,100,32,119,111,114,107,32,116,104,101,114,101,46,11,65,110,100,32,99,111,109,101,32,98,97,99,107,32,116,111,10,109,101,32,119,104,101,110,32,121,111,117,39,118,101,10,103,111,116,32,116,104,101,32,109,111,110,101,121,46,0,255,235,236,73,32,107,110,111,119,32,116,104,97,116,32,103,117,121,46,10,72,101,32,104,97,115,32,97,32,102,114,105,101,110,100,10,105,110,32,116,104,101,32,112,111,108,105,99,101,46,11,255,233,234,87,104,101,114,101,32,99,97,110,32,73,32,102,105,110,100,10,116,104,105,115,32,102,114,105,101,110,100,63,11,255,235,236,71,111,32,116,111,32,82,101,115,116,114,105,99,116,101,100,10,65,114,101,97,32,49,44,32,73,32,116,104,105,110,107,10,104,101,39,115,32,111,110,32,100,117,116,121,10,116,104,101,114,101,46,11,66,117,116,32,98,101,32,99,97,114,101,102,117,108,44,10,116,104,111,115,101,32,103,117,121,115,32,97,114,101,10,109,101,97,110,33,0,255,235,236,73,32,100,111,110,39,116,32,107,110,111,119,10,97,110,121,116,104,105,110,103,32,109,111,114,101,44,10,115,111,110,46,0,255,235,236,67,89,45,66,48,50,49,32,119,97,110,116,115,10,116,111,32,109,97,107,101,32,97,32,100,101,97,108,10,119,105,116,104,32,121,111,117,46,11,72,101,39,108,108,32,98,101,32,119,97,105,116,105,110,103,10,98,101,104,105,110,100,32,116,104,101,32,98,97,114,46,0,255,235,236,71,111,32,116,111,32,116,104,101,32,98,97,114,44,10,115,111,110,44,32,67,89,45,66,48,50,49,39,115,10,119,97,105,116,105,110,103,32,102,111,114,32,121,111,117,46,0,255,235,236,68,111,110,39,116,32,115,104,111,111,116,44,73,39,109,10,110,111,116,32,67,89,45,66,48,50,49,33,11,72,105,115,32,104,105,100,101,111,117,116,39,115,10,100,111,119,110,32,98,101,108,111,119,46,11,72,105,115,32,112,97,108,44,116,104,101,32,99,111,112,10,104,97,115,32,116,104,101,32,107,101,121,46,0,255,235,236,73,32,100,111,110,39,116,32,107,110,111,119,10,97,110,121,116,104,105,110,103,32,101,108,115,101,46,0,255,235,236,83,105,114,46,46,46,32,115,111,109,101,32,103,117,121,11,99,97,108,108,101,100,32,74,97,99,107,10,97,114,114,97,110,103,101,100,32,116,111,32,109,101,101,116,10,121,111,117,32,98,121,32,116,104,101,32,98,97,114,46,0,73,39,100,32,108,105,107,101,32,97,10,119,111,114,107,32,112,101,114,109,105,116,46,11,255,235,236,78,111,44,32,105,116,39,115,32,110,111,116,10,104,101,114,101,46,32,83,101,101,32,87,105,110,100,111,119,10,67,46,0,73,39,100,32,108,105,107,101,32,97,10,119,111,114,107,32,112,101,114,109,105,116,46,11,255,235,236,71,111,111,100,46,46,46,79,46,107,46,44,116,104,101,10,98,111,115,115,32,119,105,108,108,32,115,101,101,10,121,111,117,32,110,111,119,46,0,73,39,100,32,108,105,107,101,32,97,10,119,111,114,107,32,112,101,114,109,105,116,46,11,255,235,236,78,111,44,32,105,116,39,115,32,110,111,116,10,104,101,114,101,46,32,83,101,101,32,87,105,110,100,111,119,10,66,46,0,73,39,100,32,108,105,107,101,32,116,111,10,115,112,101,97,107,32,116,111,32,74,97,99,107,46,11,255,235,236,79,104,32,121,101,97,104,63,32,74,97,99,107,39,115,10,110,111,116,32,104,101,114,101,46,11,255,233,234,73,39,118,101,32,98,101,101,110,32,115,101,110,116,10,98,121,32,109,121,32,102,114,105,101,110,100,10,73,97,110,46,11,255,235,236,79,46,107,46,32,74,97,99,107,39,115,10,119,97,105,116,105,110,103,32,102,111,114,32,121,111,117,10,111,117,116,115,105,100,101,46,0,255,235,236,66,101,97,116,32,105,116,32,115,111,110,46,10,89,111,117,39,114,101,32,116,111,111,32,121,111,117,110,103,10,116,111,32,100,114,105,110,107,46,0,255,235,236,80,97,112,101,114,115,32,112,108,101,97,115,101,46,0,73,39,109,32,116,104,101,10,109,101,115,115,101,110,103,101,114,46,11,255,235,236,79,104,32,121,101,115,33,32,72,101,114,101,44,10,116,97,107,101,32,116,104,105,115,32,112,97,114,99,101,108,10,116,111,32,116,104,101,32,116,114,97,118,101,108,10,97,103,101,110,99,121,46,11,65,110,100,32,98,101,32,99,97,114,101,102,117,108,10,105,116,39,115,32,118,97,108,117,97,98,108,101,46,0,84,73,77,69,32,73,83,32,85,80,0,84,104,101,114,101,39,115,32,97,32,112,108,97,99,101,10,102,111,114,32,116,104,101,32,99,97,114,100,46,0,255,235,236,84,104,97,110,107,115,44,32,67,111,110,114,97,100,46,10,84,104,111,115,101,32,99,111,112,115,10,119,111,117,108,100,39,118,101,32,104,97,100,32,109,121,10,104,105,100,101,33,11,87,101,108,108,44,73,32,115,117,112,112,111,115,101,10,121,111,117,32,100,111,110,39,116,10,114,101,109,101,109,98,101,114,32,121,111,117,114,10,111,108,100,32,112,97,108,32,73,97,110,46,11,84,97,107,101,32,97,32,115,101,97,116,44,10,119,101,39,108,108,32,102,105,120,32,116,104,97,116,10,115,104,111,114,116,108,121,46,0,73,97,110,44,119,104,97,116,32,100,111,32,121,111,117,10,104,97,118,101,32,116,111,32,100,111,32,116,111,10,103,101,116,32,116,111,32,69,65,82,84,72,63,11,255,235,236,84,104,101,32,99,111,115,116,32,111,102,32,116,104,101,10,116,105,99,107,101,116,32,105,115,10,97,115,116,114,111,110,111,109,105,99,97,108,46,11,84,104,101,32,111,110,108,121,32,119,97,121,10,119,111,117,108,100,32,98,101,32,102,111,114,32,121,111,117,10,116,111,32,116,97,107,101,32,112,97,114,116,32,105,110,10,68,101,97,116,104,32,84,111,119,101,114,46,11,255,233,234,68,101,97,116,104,32,84,111,119,101,114,63,11,255,235,236,89,101,115,44,105,116,39,115,32,97,10,116,101,108,101,118,105,115,105,111,110,32,103,97,109,101,46,10,84,104,101,32,119,105,110,110,101,114,32,103,101,116,115,10,97,32,116,105,99,107,101,116,46,11,255,233,234,79,46,107,46,67,97,110,32,121,111,117,10,115,117,112,112,108,121,32,102,97,108,115,101,10,112,97,112,101,114,115,63,11,255,235,236,78,111,32,112,114,111,98,108,101,109,46,10,71,111,32,116,111,32,116,104,101,32,98,97,114,10,97,110,100,32,97,115,107,32,102,111,114,10,74,97,99,107,46,11,83,97,121,32,73,32,115,101,110,116,32,121,111,117,46,10,79,104,44,98,121,32,116,104,101,32,119,97,121,46,46,46,11,73,32,112,117,116,32,116,104,101,32,102,111,114,99,101,10,102,105,101,108,100,32,121,111,117,32,97,115,107,101,100,10,109,101,32,102,111,114,32,105,110,32,121,111,117,114,10,112,111,99,107,101,116,46,11,255,233,234,71,114,101,97,116,46,84,104,97,110,107,10,121,111,117,44,32,73,97,110,46,39,84,105,108,108,10,116,104,101,32,110,101,120,116,32,116,105,109,101,46,46,46,11,255,235,236,71,111,111,100,32,108,117,99,107,46,73,39,108,108,10,98,101,32,105,110,32,116,111,117,99,104,32,119,104,101,110,10,121,111,117,32,103,101,116,32,116,111,10,69,97,114,116,104,46,0,255,235,236,87,101,108,99,111,109,101,32,116,111,10,78,101,119,32,87,97,115,104,105,110,103,116,111,110,44,10,121,111,117,110,103,32,109,97,110,46,11,72,101,114,101,39,115,32,97,32,109,97,112,32,111,102,10,116,104,101,32,99,105,116,121,44,119,104,105,99,104,10,121,111,117,32,109,97,121,32,102,105,110,100,10,117,115,101,102,117,108,46,11,255,233,234,84,104,97,110,107,32,121,111,117,46,0,255,235,236,72,97,118,101,32,97,32,110,105,99,101,10,100,97,121,46,0,255,235,236,89,111,117,32,109,117,115,116,32,104,97,118,101,32,97,10,112,101,114,109,105,116,32,105,110,32,111,114,100,101,114,10,116,111,32,119,111,114,107,46,11,89,111,117,32,99,97,110,32,103,101,116,32,111,110,101,10,97,116,32,116,104,101,32,65,100,109,105,110,10,67,101,110,116,101,114,46,0,255,235,236,73,32,100,111,110,39,116,32,104,97,118,101,10,116,105,109,101,46,0,71,111,111,100,32,109,111,114,110,105,110,103,46,11,255,235,236,71,111,111,100,32,109,111,114,110,105,110,103,46,0,255,235,236,73,39,118,101,32,115,101,101,110,32,116,104,97,116,10,103,117,121,32,98,101,102,111,114,101,32,105,110,10,116,104,101,32,98,97,114,46,0,71,111,111,100,32,109,111,114,110,105,110,103,46,11,255,235,236,71,111,111,100,32,109,111,114,110,105,110,103,46,0,255,235,236,89,101,115,44,73,32,107,110,111,119,32,104,105,109,46,10,72,101,39,115,32,97,32,114,101,103,117,108,97,114,46,0,32,0,32,0,73,39,100,32,108,105,107,101,32,97,10,119,111,114,107,32,112,101,114,109,105,116,46,11,255,235,236,84,104,101,114,101,39,115,32,110,111,10,112,114,111,98,108,101,109,32,103,101,116,116,105,110,103,10,97,32,112,101,114,109,105,116,46,46,46,11,73,32,110,101,101,100,32,121,111,117,114,32,73,68,10,99,97,114,100,46,0,255,235,236,72,69,76,80,46,46,46,72,69,76,80,46,46,46,0,255,235,236,72,101,108,112,32,109,101,32,121,111,117,110,103,10,109,97,110,46,32,73,39,118,101,32,98,101,101,110,10,97,116,116,97,99,107,101,100,32,98,121,10,109,117,116,97,110,116,115,46,46,46,11,97,110,100,32,73,32,99,97,110,39,116,10,119,97,108,107,46,11,70,105,110,100,32,109,121,10,116,101,108,101,112,111,114,116,101,114,44,73,10,110,101,101,100,32,117,114,103,101,110,116,32,109,101,100,45,10,105,99,97,108,32,97,115,115,105,115,116,97,110,99,101,46,0,255,235,236,84,104,97,110,107,115,46,89,111,117,32,106,117,115,116,10,115,97,118,101,100,32,109,121,32,108,105,102,101,46,0,255,235,236,84,111,32,103,101,116,32,116,111,32,78,101,119,10,87,97,115,104,105,110,103,116,111,110,44,121,111,117,10,104,97,118,101,32,116,111,32,106,117,109,112,10,105,110,116,111,32,116,104,105,115,32,104,111,108,101,44,11,98,117,116,32,105,102,32,73,32,119,101,114,101,10,121,111,117,32,73,39,100,32,117,115,101,32,97,110,10,65,110,116,105,45,71,32,98,101,108,116,46,11,255,233,234,87,104,101,114,101,32,99,97,110,32,73,32,102,105,110,100,10,111,110,101,63,11,255,235,236,78,111,119,44,32,73,32,99,97,110,10,115,101,108,108,32,121,111,117,32,111,110,101,58,10,53,48,48,32,99,114,101,100,105,116,115,46,0,255,235,236,66,111,110,32,118,111,121,97,103,101,44,121,111,117,110,103,10,109,97,110,46,0,73,32,110,101,101,100,32,97,32,102,117,108,108,121,10,99,104,97,114,103,101,100,32,109,97,103,110,101,116,105,99,10,99,97,114,116,114,105,100,103,101,46,0,73,39,100,32,108,105,107,101,32,97,10,119,111,114,107,32,112,101,114,109,105,116,46,11,255,235,236,70,105,114,115,116,32,102,108,111,111,114,46,0,65,110,32,105,110,110,101,114,32,118,111,105,99,101,10,105,110,116,101,114,114,117,112,116,115,32,121,111,117,114,10,116,104,111,117,103,104,116,115,46,11,255,235,236,84,114,117,115,116,32,109,101,44,115,111,110,44,112,117,116,10,116,104,101,32,97,116,111,109,105,99,10,99,104,97,114,103,101,32,104,101,114,101,46,46,46,11,97,110,100,32,102,108,101,101,32,97,115,10,115,111,111,110,32,97,115,32,105,116,10,114,101,97,99,104,101,115,32,116,104,101,10,112,108,97,110,101,116,39,115,32,99,111,114,101,46,0,255,235,236,76,101,97,100,32,111,110,44,121,111,117,110,103,10,109,97,110,46,11,84,97,107,101,32,109,101,32,116,111,32,116,104,101,10,82,101,115,101,97,114,99,104,32,67,101,110,116,101,114,46,0,255,235,236,84,104,97,110,107,32,121,111,117,32,102,111,114,10,121,111,117,114,32,104,101,108,112,46,46,46,11,73,32,97,114,114,105,118,101,100,32,115,97,102,101,108,121,10,97,110,100,32,116,104,101,114,101,39,115,32,110,111,10,108,111,110,103,101,114,32,97,110,121,10,100,97,110,103,101,114,46,0,255,235,236,87,101,108,108,32,116,104,101,110,44,104,97,118,101,10,121,111,117,32,98,114,111,117,103,104,116,32,109,101,10,116,104,101,32,112,97,114,99,101,108,63,0,72,111,119,32,109,117,99,104,32,105,115,32,97,10,116,105,99,107,101,116,32,116,111,32,69,97,114,116,104,63,11,255,235,236,53,48,44,48,48,48,32,99,114,101,100,105,116,115,46,0,255,235,236,73,32,115,99,114,97,116,99,104,32,121,111,117,114,10,98,97,99,107,44,121,111,117,32,115,99,114,97,116,99,104,10,109,105,110,101,58,11,49,53,48,48,32,99,114,101,100,105,116,115,32,97,110,100,10,116,104,101,32,112,97,112,101,114,115,32,97,114,101,10,121,111,117,114,115,46,0]),P=Uint8Array.from([90,0,123,0,155,0,176,1,99,2,135,2,211,2,4,3,109,3,134,3,191,3,14,4,94,4,173,4,48,5,96,5,115,5,221,5,238,5,9,6,192,6,187,8,36,9,57,9,135,9,159,9,190,9,239,9,14,10,48,10,50,10,52,10,157,10,178,10,66,11,102,11,31,12,59,12,108,12,157,12,57,13,116,13,197,13,237,13,32,14,68,73,69,32,83,73,67,72,69,82,85,78,71,10,73,83,84,10,68,85,82,67,72,71,69,66,82,65,78,78,84,46,0,68,65,83,32,77,91,83,83,84,69,32,74,69,84,90,84,10,70,85,78,75,84,73,79,78,73,69,82,69,78,46,0,255,235,236,73,67,72,32,66,73,78,32,74,65,67,75,46,10,83,73,69,32,87,79,76,76,69,78,10,71,69,70,92,76,83,67,72,84,69,10,80,65,80,73,69,82,69,63,11,255,233,234,74,65,44,32,85,78,68,32,83,79,10,83,67,72,78,69,76,76,32,87,73,69,10,77,93,71,76,73,67,72,46,11,255,235,236,49,53,48,48,32,67,82,69,68,73,84,83,33,11,255,233,234,49,53,48,48,63,63,63,11,255,235,236,74,65,44,32,69,83,32,73,83,84,32,69,73,78,10,71,82,79,83,83,69,83,32,82,73,83,73,75,79,11,255,233,234,65,66,69,82,32,73,67,72,32,72,65,66,69,10,78,73,67,72,84,32,71,69,78,85,71,46,46,46,11,255,235,236,71,69,72,69,78,32,83,73,69,32,90,85,77,10,65,82,66,69,73,84,83,65,77,84,44,32,68,79,82,84,10,70,73,78,68,69,78,32,83,73,69,10,65,82,66,69,73,84,46,11,85,78,68,32,75,79,77,77,69,78,32,83,73,69,10,90,85,82,91,67,75,44,32,87,69,78,78,32,83,73,69,10,68,65,83,32,71,69,76,68,32,72,65,66,69,78,46,0,255,235,236,73,67,72,32,75,69,78,78,69,10,67,89,45,66,48,50,49,46,10,83,69,73,78,32,70,82,69,85,78,68,32,73,83,84,10,66,69,73,32,68,69,82,32,80,79,76,73,90,69,73,46,11,255,233,234,87,79,32,75,65,78,78,32,73,67,72,10,68,69,78,32,70,73,78,68,69,78,63,11,255,235,236,73,78,32,68,69,82,32,86,69,82,66,79,45,10,84,69,78,69,78,32,90,79,78,69,46,32,69,82,10,73,83,84,32,68,79,82,84,10,65,78,71,69,83,84,69,76,76,84,46,11,65,66,69,82,44,32,80,65,83,83,32,65,85,70,33,10,68,73,69,83,69,32,76,69,85,84,69,32,83,73,78,68,10,71,69,70,92,72,82,76,73,67,72,0,255,235,236,77,69,72,82,32,87,69,73,83,83,32,73,67,72,10,78,73,67,72,84,44,32,77,69,73,78,10,83,79,72,78,46,0,255,235,236,67,89,45,66,79,50,49,32,77,93,67,72,84,69,10,69,73,78,32,71,69,83,67,72,92,70,84,10,77,73,84,32,68,73,82,32,77,65,67,72,69,78,46,11,69,82,32,87,65,82,84,69,84,32,72,73,78,84,69,82,10,68,69,82,32,75,78,69,73,80,69,46,0,255,235,236,71,69,72,32,90,85,82,32,75,78,69,73,80,69,44,10,67,89,45,66,79,50,49,32,87,65,82,84,69,84,10,68,79,82,84,32,65,85,70,32,68,73,67,72,46,0,255,235,236,78,73,67,72,84,32,83,67,72,73,69,83,83,69,78,44,10,73,67,72,32,66,73,78,32,78,73,67,72,84,10,67,89,45,66,79,50,49,33,11,83,69,73,78,32,86,69,82,83,84,69,67,75,10,73,83,84,32,71,65,78,90,32,85,78,84,69,78,46,11,68,69,82,32,80,79,76,73,90,73,83,84,32,72,65,84,10,68,69,78,32,83,67,72,76,91,83,83,69,76,46,0,255,235,236,77,69,72,82,32,87,69,73,83,83,10,73,67,72,32,78,73,67,72,84,46,0,255,235,236,83,73,82,46,46,46,32,74,65,67,75,32,72,65,84,10,69,73,78,32,84,82,69,70,70,69,78,10,66,69,73,32,68,69,82,32,75,78,69,73,80,69,10,65,82,82,65,78,71,73,69,82,84,0,73,67,72,32,77,93,67,72,84,69,32,69,73,78,69,10,65,82,66,69,73,84,83,69,82,76,65,85,66,78,73,83,11,255,235,236,78,69,73,78,44,32,78,73,67,72,84,10,72,73,69,82,46,32,71,69,72,69,78,32,83,73,69,10,90,85,32,83,67,72,65,76,84,69,82,32,67,46,0,73,67,72,32,77,93,67,72,84,69,32,69,73,78,69,10,65,82,66,69,73,84,83,69,82,76,65,85,66,78,73,83,11,255,235,236,71,85,84,46,46,46,32,79,46,75,46,44,32,68,69,82,10,67,72,69,70,32,87,73,76,76,32,83,73,69,10,74,69,84,90,84,32,83,69,72,69,78,46,0,73,67,72,32,77,93,67,72,84,69,32,69,73,78,69,10,65,82,66,69,73,84,83,69,82,76,65,85,66,78,73,83,11,255,235,236,78,69,73,78,44,32,78,73,67,72,84,10,72,73,69,82,46,32,71,69,72,69,78,32,83,73,69,10,90,85,32,83,67,72,65,76,84,69,82,32,66,46,0,73,67,72,32,77,93,67,72,84,69,10,74,65,67,75,32,83,80,82,69,67,72,69,78,46,11,255,235,236,65,67,72,32,74,65,63,32,74,65,67,75,10,73,83,84,32,78,73,67,72,84,32,68,65,46,11,255,233,234,73,67,72,32,75,79,77,77,69,32,86,79,78,10,77,69,73,78,69,77,32,70,82,69,85,78,68,10,73,65,78,46,11,255,235,236,79,46,75,46,32,74,65,67,75,32,87,65,82,84,69,84,10,68,82,65,85,83,83,69,78,32,65,85,70,10,68,73,67,72,46,0,255,235,236,78,69,69,44,32,77,69,73,78,32,83,79,72,78,46,10,68,85,32,66,73,83,84,32,90,85,32,74,85,78,71,10,90,85,77,32,84,82,73,78,75,69,78,46,0,255,235,236,80,65,80,73,69,82,69,44,32,66,73,84,84,69,46,0,255,235,236,73,67,72,32,66,73,78,32,68,69,82,10,66,79,84,69,46,11,255,235,236,79,72,32,74,65,33,10,68,73,69,83,69,83,32,80,65,75,69,84,10,77,85,83,83,32,90,85,77,10,82,69,73,83,69,66,91,82,79,11,83,69,73,69,78,32,83,73,69,10,86,79,82,83,73,67,72,84,73,71,44,10,69,83,32,73,83,84,32,83,69,72,82,10,87,69,82,84,86,79,76,76,0,90,69,73,84,32,65,66,71,69,76,65,85,70,69,78,46,0,68,73,69,32,75,65,82,84,69,32,72,65,84,10,69,73,78,69,78,32,80,76,65,84,90,46,0,255,235,236,68,65,78,75,69,44,32,67,79,78,82,65,68,46,10,68,73,69,32,80,79,76,73,90,73,83,84,69,78,10,72,92,84,84,69,78,32,77,69,73,78,32,86,69,82,45,10,83,84,69,67,75,32,71,69,70,85,78,68,69,78,46,11,68,85,32,69,82,73,78,78,69,82,83,84,10,68,73,67,72,32,87,79,72,76,32,78,73,67,72,84,10,65,78,32,68,69,73,78,69,78,32,65,76,84,69,78,10,75,85,77,80,69,76,32,73,65,78,46,11,83,69,84,90,32,68,73,67,72,44,32,87,73,82,10,66,82,73,78,71,69,78,32,68,69,73,78,32,71,69,45,10,68,92,67,72,84,78,73,83,32,87,73,69,68,69,82,10,73,78,32,79,82,68,78,85,78,71,46,0,73,65,78,44,32,87,65,83,32,77,85,83,83,10,73,67,72,32,77,65,67,72,69,78,44,32,85,77,10,90,85,82,32,69,82,68,69,32,90,85,10,75,79,77,77,69,78,63,11,68,69,82,32,80,82,69,73,83,32,70,91,82,10,68,65,83,32,84,73,67,75,69,84,32,73,83,84,10,65,83,84,82,79,78,79,77,73,83,67,72,46,11,255,235,236,68,69,82,32,69,73,78,90,73,71,69,32,87,69,71,10,87,92,82,69,32,68,73,69,10,84,69,73,76,78,65,72,77,69,10,65,77,32,84,79,68,69,83,84,85,82,77,46,11,255,233,234,84,79,68,69,83,84,85,82,77,63,11,255,235,236,68,65,83,32,73,83,84,32,69,73,78,69,10,70,69,82,78,83,69,72,83,72,79,87,46,10,68,69,82,32,71,69,87,73,78,78,69,82,32,66,69,45,10,75,79,77,77,84,32,69,73,78,32,84,73,67,75,69,84,11,255,233,234,75,65,78,78,83,84,32,68,85,32,77,73,82,10,70,65,76,83,67,72,69,32,80,65,80,73,69,82,69,10,66,69,83,79,82,71,69,78,63,11,255,235,236,75,69,73,78,32,80,82,79,66,76,69,77,46,10,71,69,72,32,90,85,82,32,75,78,69,73,80,69,44,10,85,78,68,32,70,82,65,71,10,78,65,67,72,32,74,65,67,75,46,11,83,65,71,44,32,68,65,83,83,32,68,85,32,86,79,78,10,77,73,82,32,75,79,77,77,83,84,46,10,65,67,72,46,46,46,11,46,46,73,67,72,32,72,65,66,69,32,91,66,82,73,45,10,71,69,78,83,32,69,73,78,32,83,67,72,85,84,90,45,10,70,69,76,68,44,32,73,78,32,68,69,73,78,69,10,84,65,83,67,72,69,32,71,69,83,84,69,67,75,84,46,11,255,233,234,71,82,79,83,83,65,82,84,73,71,46,10,68,65,78,75,69,44,32,73,65,78,46,32,66,73,83,10,68,69,77,78,92,67,72,83,84,46,11,255,235,236,73,67,72,32,77,69,76,68,69,32,77,73,67,72,44,10,87,69,78,78,32,68,85,32,65,85,70,10,68,69,82,32,69,82,68,69,32,66,73,83,84,46,0,255,235,236,87,73,76,76,75,79,77,77,69,78,32,73,78,10,78,69,87,32,87,65,83,72,73,78,71,84,79,78,44,10,74,85,78,71,69,82,32,77,65,78,78,46,11,72,73,69,82,32,73,83,84,32,69,73,78,10,83,84,65,68,84,80,76,65,78,44,10,83,73,69,32,87,69,82,68,69,78,32,73,72,78,10,66,82,65,85,67,72,69,78,46,11,255,233,234,68,65,78,75,69,46,0,255,235,236,83,67,72,93,78,69,78,32,84,65,71,10,78,79,67,72,33,0,255,235,236,83,73,69,32,66,82,65,85,67,72,69,78,10,69,73,78,69,32,65,82,66,69,73,84,83,45,10,69,82,76,65,85,66,78,73,83,46,11,83,73,69,32,66,69,75,79,77,77,69,78,10,69,73,78,69,32,73,78,32,68,69,82,10,86,69,82,87,65,76,84,85,78,71,46,0,255,235,236,73,67,72,32,72,65,66,69,32,75,69,73,78,69,10,90,69,73,84,46,0,71,85,84,69,78,32,77,79,82,71,69,78,46,11,255,235,236,71,85,84,69,78,32,77,79,82,71,69,78,46,0,255,235,236,73,67,72,32,83,65,72,32,68,73,69,83,69,78,10,84,89,80,69,78,32,83,67,72,79,78,32,77,65,76,10,73,78,32,68,69,82,32,75,78,69,73,80,69,46,0,71,85,84,69,78,32,77,79,82,71,69,78,46,11,255,235,236,71,85,84,69,78,32,77,79,82,71,69,78,46,0,255,235,236,73,67,72,32,75,69,78,78,69,32,73,72,78,46,10,73,83,84,32,83,84,65,77,77,75,85,78,68,69,46,0,32,0,32,0,73,67,72,32,77,93,67,72,84,69,32,69,73,78,69,10,65,82,66,69,73,84,83,69,82,76,65,85,66,78,73,83,11,255,235,236,75,69,73,78,32,80,82,79,66,76,69,77,44,10,69,73,78,69,32,69,82,76,65,85,66,78,73,83,10,90,85,32,66,69,75,79,77,77,69,78,46,46,46,11,73,67,72,32,66,69,78,93,84,73,71,69,10,73,72,82,69,32,75,65,82,84,69,46,0,255,235,236,72,73,76,70,69,46,46,46,10,72,73,76,70,69,46,46,46,0,255,235,236,72,69,76,70,69,78,32,83,73,69,32,77,73,82,46,10,73,67,72,32,87,85,82,68,69,32,86,79,78,10,77,85,84,65,78,84,69,78,10,65,78,71,69,71,82,73,70,70,69,78,46,46,46,11,85,78,68,32,73,67,72,32,75,65,78,78,10,78,73,67,72,84,32,76,65,85,70,69,78,46,11,72,79,76,69,78,32,83,73,69,32,77,69,73,78,69,78,10,84,69,76,69,80,79,82,84,69,82,44,32,73,67,72,10,66,82,65,85,67,72,69,32,92,82,90,84,45,10,76,73,67,72,69,32,72,73,76,70,69,46,0,255,235,236,68,65,78,75,69,46,32,83,73,69,32,82,69,84,45,10,84,69,84,69,78,32,77,69,73,78,32,76,69,66,69,78,0,255,235,236,83,80,82,73,78,71,69,78,32,83,73,69,32,73,78,10,68,73,69,83,69,83,32,76,79,67,72,44,11,85,77,32,78,65,67,72,32,78,69,87,10,87,65,83,72,73,78,71,84,79,78,10,90,85,32,75,79,77,77,69,78,46,11,65,66,69,82,44,32,73,67,72,32,87,91,82,68,69,10,69,73,78,69,78,32,65,78,84,73,45,71,45,10,71,91,82,84,69,76,32,66,69,78,85,84,90,69,78,46,11,255,233,234,87,79,32,75,65,78,78,32,73,67,72,10,69,73,78,69,78,32,66,69,75,79,77,77,69,78,63,11,255,235,236,78,85,78,44,32,73,67,72,10,86,69,82,75,65,85,70,69,32,69,73,78,69,78,58,10,53,48,48,32,67,82,69,68,73,84,83,46,0,255,235,236,71,85,84,69,32,82,69,73,83,69,44,10,74,85,78,71,69,82,32,77,65,78,78,46,0,73,67,72,32,66,82,65,85,67,72,69,32,69,73,78,10,65,85,70,71,69,76,65,68,69,78,69,83,32,77,65,45,10,71,78,69,84,45,67,65,82,84,82,73,68,71,69,46,0,73,67,72,32,77,93,67,72,84,69,32,69,73,78,69,10,65,82,66,69,73,84,83,69,82,76,65,85,66,78,73,83,11,255,235,236,69,82,83,84,69,32,69,84,65,71,69,46,0,69,73,78,69,32,73,78,78,69,82,69,10,83,84,73,77,77,69,10,85,78,84,69,82,66,82,73,67,72,84,10,68,69,73,78,69,32,71,69,68,65,78,75,69,78,46,11,255,235,236,86,69,82,84,82,65,85,32,77,73,82,44,10,66,82,73,78,71,32,68,73,69,32,65,84,79,77,45,10,76,65,68,85,78,71,32,72,73,69,82,32,65,78,46,46,11,85,78,68,32,70,76,73,69,72,69,44,32,66,69,45,10,86,79,82,32,83,73,69,32,68,65,83,32,72,69,82,90,10,68,69,83,32,80,76,65,78,69,84,69,78,10,69,82,82,69,73,67,72,84,32,72,65,84,46,0,255,235,236,90,85,77,32,70,79,82,83,67,72,85,78,71,83,45,10,90,69,78,84,82,85,77,44,32,66,73,84,84,69,46,11,78,65,67,72,32,73,72,78,69,78,44,10,74,85,78,71,69,82,32,77,65,78,78,0,255,235,236,68,65,78,75,69,32,70,91,82,10,73,72,82,69,32,72,73,76,70,69,11,73,67,72,32,66,73,78,32,83,73,67,72,69,82,10,65,78,71,69,75,79,77,77,69,78,46,32,69,83,10,66,69,83,84,69,72,84,32,75,69,73,78,69,10,71,69,70,65,72,82,32,77,69,72,82,46,0,255,235,236,72,65,66,69,78,32,83,73,69,32,77,73,82,10,68,65,83,32,80,65,75,69,84,10,77,73,84,71,69,66,82,65,67,72,84,63,0,87,65,83,32,75,79,83,84,69,84,32,69,73,78,10,84,73,67,75,69,84,32,90,85,82,10,69,82,68,69,63,11,255,235,236,53,48,46,48,48,48,32,99,114,101,100,105,116,115,46,0,255,235,236,69,73,78,69,32,72,65,78,68,10,87,92,83,67,72,84,10,68,73,69,32,65,78,68,69,82,69,46,11,49,46,53,48,48,32,67,82,69,68,73,84,83,10,85,78,68,32,68,73,69,32,80,65,80,73,69,82,69,10,71,69,72,93,82,69,78,32,68,73,82,46,0]),v=Uint8Array.from([90,0,113,0,143,0,167,1,113,2,141,2,216,2,9,3,110,3,132,3,190,3,8,4,81,4,155,4,24,5,73,5,96,5,195,5,212,5,242,5,141,6,155,8,16,9,42,9,137,9,157,9,186,9,225,9,254,9,33,10,35,10,37,10,141,10,161,10,42,11,81,11,5,12,31,12,72,12,122,12,6,13,64,13,137,13,173,13,232,13,72,65,32,83,65,76,84,65,68,79,10,69,76,32,70,85,83,73,66,76,69,46,0,69,83,84,79,32,68,69,66,69,82,73,65,10,70,85,78,67,73,79,78,65,82,32,65,72,79,82,65,46,0,255,235,236,83,79,89,32,74,65,67,75,46,64,69,83,84,65,83,10,66,85,83,67,65,78,68,79,10,68,79,67,85,77,69,78,84,65,67,73,79,78,10,70,65,76,83,65,63,11,255,233,234,83,73,44,32,89,32,76,79,10,77,65,83,32,82,65,80,73,68,79,10,80,79,83,73,66,76,69,46,11,255,235,236,123,49,53,48,48,32,67,82,69,68,73,84,79,83,33,11,255,233,234,64,64,64,49,53,48,48,63,63,63,11,255,235,236,83,73,73,73,44,32,67,79,82,82,79,32,85,78,10,71,82,65,78,32,80,69,76,73,71,82,79,10,65,81,85,73,46,11,255,233,234,80,69,82,79,44,32,89,79,32,78,79,10,84,69,78,71,79,32,83,85,70,73,67,73,69,78,84,69,11,255,235,236,86,69,32,65,32,76,65,32,79,70,73,67,73,78,65,10,68,69,32,69,77,80,76,69,79,44,10,65,76,76,73,32,69,78,67,79,78,84,82,65,82,65,83,10,84,82,65,66,65,74,79,46,11,89,32,86,85,69,76,86,69,32,65,32,86,69,82,77,69,10,67,85,65,78,68,79,32,84,69,78,71,65,83,10,76,65,32,80,65,83,84,65,46,0,255,235,236,67,79,78,79,90,67,79,32,65,32,69,83,69,10,84,73,79,46,32,84,73,69,78,69,32,85,78,10,65,77,73,71,79,32,69,78,32,76,65,10,80,79,76,73,67,73,65,46,11,255,233,234,64,68,79,78,68,69,32,80,85,69,68,79,10,69,78,67,79,78,84,82,65,82,32,65,10,69,83,69,32,65,77,73,71,79,63,11,255,235,236,86,69,32,65,76,32,65,82,69,65,10,82,69,83,84,82,73,78,71,73,68,65,32,49,44,10,67,82,69,79,32,81,85,69,32,69,83,84,65,32,68,69,10,83,69,82,86,73,67,73,79,32,65,76,76,73,46,11,80,69,82,79,32,84,69,78,32,67,85,73,68,65,68,79,44,10,123,69,83,79,83,32,84,73,79,83,32,83,79,78,10,85,78,79,83,32,77,73,83,69,82,65,66,76,69,83,33,0,255,235,236,89,79,32,78,79,32,83,69,10,78,65,68,65,32,77,65,83,44,10,72,73,74,79,46,0,255,235,236,67,89,45,66,48,50,49,32,81,85,73,69,82,69,10,72,65,67,69,82,32,85,78,32,84,82,65,84,79,10,67,79,78,84,73,71,79,46,11,69,83,84,65,82,65,32,69,83,80,69,82,65,78,68,79,10,68,69,84,82,65,83,32,68,69,76,32,66,65,82,46,0,255,235,236,86,69,84,69,32,65,76,32,66,65,82,44,10,72,73,74,79,44,32,67,89,45,66,48,50,49,32,84,69,10,69,83,84,65,32,69,83,80,69,82,65,78,68,79,46,0,255,235,236,123,78,79,32,68,73,83,80,65,82,69,83,44,32,89,79,10,78,79,32,83,79,89,32,67,89,45,66,48,50,49,33,11,83,85,32,69,83,67,79,78,68,82,73,74,79,10,69,83,84,65,32,65,72,73,32,65,66,65,74,79,46,11,83,85,32,67,79,76,69,71,65,44,10,69,76,32,80,79,76,73,10,84,73,69,78,69,32,76,65,32,76,76,65,86,69,46,0,255,235,236,89,79,32,78,79,32,83,69,10,78,65,68,65,32,77,65,83,46,0,255,235,236,85,78,32,84,73,79,32,76,76,65,77,65,68,79,11,74,65,67,75,32,65,67,79,82,68,79,10,82,69,85,78,73,82,83,69,32,67,79,78,32,85,68,46,10,69,78,32,69,76,32,66,65,82,46,0,81,85,69,82,82,73,65,32,85,78,10,80,69,82,77,73,83,79,32,68,69,10,84,82,65,66,65,74,79,46,11,255,235,236,78,79,44,32,78,79,32,69,83,32,65,81,85,73,46,10,86,65,89,65,32,65,32,76,65,10,86,69,78,84,65,78,73,76,76,65,32,67,46,0,81,85,69,82,82,73,65,32,85,78,10,80,69,82,77,73,83,79,32,68,69,10,84,82,65,66,65,74,79,46,11,255,235,236,66,73,69,78,32,46,46,79,46,75,46,44,10,69,76,32,74,69,70,69,32,76,69,10,82,69,67,73,66,73,82,65,32,65,72,79,82,65,0,81,85,69,82,82,73,65,32,85,78,10,80,69,82,77,73,83,79,32,68,69,10,84,82,65,66,65,74,79,46,11,255,235,236,78,79,44,32,78,79,32,69,83,32,65,81,85,73,46,10,86,65,89,65,32,65,32,76,65,10,86,69,78,84,65,78,73,76,76,65,32,66,46,0,81,85,73,69,82,79,32,72,65,66,76,65,82,10,67,79,78,32,74,65,67,75,46,11,255,235,236,64,65,72,32,83,73,63,32,74,65,67,75,32,78,79,10,69,83,84,65,32,65,81,85,73,32,65,72,79,82,65,46,11,255,233,234,77,69,32,69,78,86,73,65,10,77,73,32,65,77,73,71,79,32,73,65,78,46,11,255,235,236,79,46,75,46,32,74,65,67,75,32,84,69,10,69,83,84,65,32,69,83,80,69,82,65,78,68,79,10,65,70,85,69,82,65,46,0,255,235,236,84,73,82,65,76,79,44,32,72,73,74,79,46,10,69,82,69,83,32,68,69,77,65,83,73,65,68,79,10,74,79,86,69,78,32,80,65,82,65,32,66,69,66,69,82,0,255,235,236,80,65,80,69,76,69,83,44,10,80,79,82,32,70,65,86,79,82,46,0,83,79,89,32,69,76,10,77,69,78,83,65,74,69,82,79,46,11,255,235,236,123,65,72,32,83,73,33,32,76,76,69,86,65,10,69,83,84,69,32,80,65,81,85,69,84,69,32,65,10,76,65,32,65,71,69,78,67,73,65,32,68,69,10,86,73,65,74,69,83,46,11,89,32,84,69,78,32,67,85,73,68,65,68,79,44,10,69,83,32,86,65,76,73,79,83,79,46,0,84,73,69,77,80,79,32,67,79,78,67,76,85,73,68,79,0,72,65,89,32,85,78,32,76,85,71,65,82,10,80,65,82,65,32,76,65,32,84,65,82,74,69,84,65,46,0,255,235,236,71,82,65,67,73,65,83,44,32,67,79,78,82,65,68,46,10,123,69,83,84,79,83,32,80,79,76,73,83,10,72,65,66,82,73,65,78,32,67,79,78,83,69,71,85,73,68,79,10,77,73,32,80,69,76,76,69,74,79,33,11,66,73,69,78,44,83,85,80,79,78,71,79,32,81,85,69,10,78,79,32,82,69,67,85,69,82,68,65,83,32,65,10,84,85,32,86,73,69,74,79,10,65,77,73,71,79,32,73,65,78,46,11,83,73,69,78,84,65,84,69,44,10,65,82,82,69,71,76,65,82,69,77,79,83,10,69,83,84,79,32,69,78,83,69,71,85,73,68,65,46,0,73,65,78,44,32,64,81,85,69,32,84,73,69,78,69,10,85,78,79,32,81,85,69,32,72,65,67,69,82,32,10,80,65,82,65,32,73,82,32,65,10,76,65,32,84,73,69,82,82,65,63,11,255,235,236,69,76,32,80,82,69,67,73,79,32,68,69,76,10,66,73,76,76,69,84,69,32,69,83,10,65,83,84,82,79,78,79,77,73,67,79,46,11,83,79,76,79,32,84,69,32,81,85,69,68,65,10,80,65,82,84,73,67,73,80,65,82,32,69,78,32,76,65,10,84,79,82,82,69,32,68,69,32,76,65,10,77,85,69,82,84,69,46,11,255,233,234,64,76,65,32,84,79,82,82,69,10,68,69,32,76,65,32,77,85,69,82,84,69,63,11,255,235,236,69,83,32,85,78,32,67,79,78,67,85,82,83,79,10,68,69,32,76,65,32,84,69,76,69,46,32,69,76,10,71,65,78,65,68,79,82,32,79,66,84,73,69,78,69,10,85,78,32,66,73,76,76,69,84,69,46,11,255,233,234,79,46,75,46,32,64,80,85,69,68,69,83,10,67,79,78,83,69,71,85,73,82,77,69,10,68,79,67,85,77,69,78,84,65,67,73,79,78,10,70,65,76,83,65,63,11,255,235,236,83,73,78,32,80,82,79,66,76,69,77,65,83,46,10,86,69,32,65,76,32,66,65,82,32,89,10,80,82,69,71,85,78,84,65,32,80,79,82,10,74,65,67,75,46,11,68,73,76,69,32,81,85,69,32,84,69,10,69,78,86,73,79,32,89,79,46,32,65,72,44,10,80,79,82,32,67,73,69,82,84,79,46,46,46,11,80,85,83,69,32,69,76,32,67,65,77,80,79,32,68,69,10,70,85,69,82,90,65,32,81,85,69,32,77,69,10,80,69,68,73,83,84,69,32,69,78,32,84,85,10,66,79,76,83,73,76,76,79,46,11,255,233,234,67,72,65,67,72,73,46,32,71,82,65,67,73,65,83,10,73,65,78,46,32,72,65,83,84,65,32,76,65,10,80,82,79,88,73,77,65,46,46,46,11,255,235,236,66,85,69,78,65,32,83,85,69,82,84,69,46,10,67,79,78,84,65,67,84,65,82,69,77,79,83,10,65,32,84,85,32,76,76,69,71,65,68,65,32,65,10,76,65,32,84,73,69,82,82,65,46,0,255,235,236,66,73,69,78,86,69,78,73,68,79,32,65,10,78,69,87,32,87,65,83,72,73,78,71,84,79,78,44,10,74,79,86,69,78,67,73,84,79,46,11,65,81,85,73,32,84,73,69,78,69,83,32,85,78,10,77,65,80,65,32,68,69,32,76,65,10,67,73,85,68,65,68,32,81,85,69,32,84,69,10,83,69,82,65,32,77,85,89,32,85,84,73,76,46,11,255,233,234,77,85,67,72,65,83,32,71,82,65,67,73,65,83,46,0,255,235,236,81,85,69,32,84,69,78,71,65,32,85,78,10,66,85,69,78,32,68,73,65,46,0,255,235,236,68,69,66,69,32,84,69,78,69,82,32,85,78,10,80,69,82,77,73,83,79,32,80,65,82,65,10,80,79,68,69,82,32,84,82,65,66,65,74,65,82,46,11,80,85,69,68,69,32,67,79,78,83,69,71,85,73,82,10,85,78,79,32,69,78,32,69,76,32,67,69,78,84,82,79,10,65,68,77,73,78,73,83,84,82,65,84,73,86,79,46,0,255,235,236,78,79,32,84,69,78,71,79,10,84,73,69,77,80,79,46,0,66,85,69,78,79,83,32,68,73,65,83,46,11,255,235,236,66,85,69,78,79,83,32,68,73,65,83,46,0,255,235,236,72,69,32,86,73,83,84,79,32,65,32,69,83,69,10,84,73,79,32,65,78,84,69,83,32,69,78,10,69,76,32,66,65,82,46,0,66,85,69,78,79,83,32,68,73,65,83,46,11,255,235,236,66,85,69,78,79,83,32,68,73,65,83,46,0,255,235,236,83,73,44,32,76,69,32,67,79,78,79,90,67,79,46,10,69,83,32,85,78,32,72,65,66,73,84,85,65,76,46,0,32,0,32,0,81,85,69,82,82,73,65,32,85,78,10,80,69,82,77,73,83,79,32,68,69,10,84,82,65,66,65,74,79,46,11,255,235,236,78,79,32,72,65,89,32,80,82,79,66,76,69,77,65,46,10,80,65,82,65,32,67,79,78,83,69,71,85,73,82,10,85,78,32,80,69,82,77,73,83,79,46,46,46,11,78,69,67,69,83,73,84,79,32,83,85,10,84,65,82,74,69,84,65,32,73,68,46,0,255,235,236,65,89,85,68,65,46,46,46,65,89,85,68,65,46,46,46,0,255,235,236,65,89,85,68,69,77,69,44,32,74,79,86,69,78,46,10,72,69,32,83,73,68,79,32,65,84,65,67,65,68,79,10,80,79,82,32,85,78,79,83,32,10,77,85,84,65,78,84,69,83,46,46,46,11,89,32,78,79,32,80,85,69,68,79,10,67,65,77,73,78,65,82,46,11,66,85,83,81,85,69,32,77,73,10,84,69,76,69,80,79,82,84,65,68,79,82,46,11,78,69,67,69,83,73,84,79,10,65,83,73,83,84,69,78,67,73,65,10,77,69,68,73,67,65,32,85,82,71,69,78,84,69,46,0,255,235,236,71,82,65,67,73,65,83,46,65,67,65,66,65,83,10,68,69,32,83,65,76,86,65,82,77,69,10,76,65,32,86,73,68,65,46,0,255,235,236,80,65,82,65,32,73,82,32,65,32,78,69,87,10,87,65,83,72,73,78,71,84,79,78,44,10,84,73,69,78,69,32,81,85,69,32,83,65,76,84,65,82,10,80,79,82,32,69,83,84,69,32,65,71,85,74,69,82,79,11,80,69,82,79,32,89,79,32,81,85,69,32,84,85,10,85,83,65,82,73,65,32,85,78,10,67,73,78,84,85,82,79,78,32,65,78,84,73,45,71,46,11,255,233,234,64,68,79,78,68,69,32,80,85,69,68,79,10,69,78,67,79,78,84,82,65,82,32,85,78,79,63,11,255,235,236,65,72,79,82,65,44,32,80,85,69,68,79,10,86,69,78,68,69,82,84,69,32,85,78,79,58,10,53,48,48,32,67,82,69,68,73,84,79,83,46,0,255,235,236,66,79,78,32,86,79,89,65,71,69,44,10,74,79,86,69,78,67,73,84,79,46,0,78,69,67,69,83,73,84,79,32,85,78,10,67,65,82,84,85,67,72,79,10,77,65,71,78,69,84,73,67,79,10,82,69,67,65,82,71,65,68,79,0,81,85,69,82,82,73,65,32,85,78,10,80,69,82,77,73,83,79,32,68,69,10,84,82,65,66,65,74,79,46,11,255,235,236,80,82,73,77,69,82,65,32,80,76,65,78,84,65,46,0,85,78,65,32,86,79,90,32,73,78,84,69,82,73,79,82,10,73,78,84,69,82,82,85,77,80,69,32,84,85,83,10,80,69,78,83,65,77,73,69,78,84,79,83,46,11,255,235,236,67,82,69,69,77,69,44,32,72,73,74,79,44,10,80,79,78,32,76,65,32,67,65,82,71,65,10,65,84,79,77,73,67,65,32,65,81,85,73,46,46,46,11,89,32,72,85,89,69,32,69,78,32,67,85,65,78,84,79,10,65,76,67,65,78,67,69,32,69,76,10,78,85,67,76,69,79,32,68,69,76,10,80,76,65,78,69,84,65,46,0,255,235,236,71,85,73,65,77,69,44,10,74,79,86,69,78,67,73,84,79,46,11,76,76,69,86,65,77,69,32,65,76,32,10,67,69,78,84,82,79,32,68,69,10,73,78,86,69,83,84,73,71,65,67,73,79,78,0,255,235,236,71,82,65,67,73,65,83,32,80,79,82,10,84,85,32,65,89,85,68,65,46,46,46,11,72,69,32,76,76,69,71,65,68,79,10,83,73,78,32,80,82,79,66,76,69,77,65,83,10,89,32,89,65,32,78,79,32,72,65,89,10,80,69,76,73,71,82,79,46,0,255,235,236,66,73,69,78,44,32,64,77,69,32,72,65,83,10,84,82,65,73,68,79,32,69,76,10,80,65,81,85,69,84,69,63,0,64,67,85,65,78,84,79,32,67,85,69,83,84,65,10,85,78,32,66,73,76,76,69,84,69,32,65,10,76,65,32,84,73,69,82,82,65,63,11,255,235,236,53,48,46,48,48,48,32,67,82,69,68,73,84,79,83,46,0,255,235,236,70,65,86,79,82,44,32,67,79,78,10,70,65,86,79,82,32,83,69,10,80,65,71,65,58,11,49,53,48,48,32,67,82,69,68,73,84,79,83,32,89,10,76,79,83,32,80,65,80,69,76,69,83,10,83,79,78,32,84,85,89,79,83,46,0]),C=Uint8Array.from([90,0,113,0,138,0,162,1,86,2,117,2,187,2,238,2,89,3,114,3,168,3,243,3,63,4,138,4,12,5,62,5,82,5,182,5,196,5,227,5,125,6,141,8,247,8,10,9,94,9,111,9,138,9,174,9,201,9,237,9,239,9,241,9,94,10,114,10,248,10,27,11,203,11,234,11,23,12,71,12,215,12,16,13,97,13,134,13,193,13,73,108,32,102,117,115,105,98,105,108,101,32,92,10,115,97,108,116,97,116,111,46,0,79,114,97,32,100,111,118,114,101,98,98,101,10,102,117,110,122,105,111,110,97,114,101,46,0,255,235,236,83,111,110,111,32,74,97,99,107,46,32,83,116,97,105,10,99,101,114,99,97,110,100,111,32,100,101,105,10,100,111,99,117,109,101,110,116,105,10,102,97,108,115,105,63,11,255,233,234,83,105,44,32,101,32,105,108,32,112,105,95,10,112,114,101,115,116,111,10,112,111,115,115,105,98,105,108,101,46,11,255,235,236,49,53,48,48,32,99,114,101,100,105,116,105,33,11,255,233,234,49,53,48,48,63,63,63,11,255,235,236,67,101,114,116,111,44,32,115,116,111,10,112,114,101,110,100,101,110,100,111,32,117,110,10,103,114,111,115,115,111,32,114,105,115,99,104,105,111,46,11,255,233,234,77,97,32,110,111,110,32,110,101,32,104,111,10,97,98,98,97,115,116,97,110,122,97,46,46,46,11,255,235,236,86,97,105,32,97,108,108,39,85,102,102,105,99,105,111,10,100,105,32,67,111,108,108,111,99,97,109,101,110,116,111,46,10,76,91,32,116,114,111,118,101,114,97,105,10,100,101,108,32,108,97,118,111,114,111,46,11,69,32,116,111,114,110,97,32,100,97,32,109,101,10,113,117,97,110,100,111,32,97,118,114,97,105,10,105,32,115,111,108,100,105,46,0,255,235,236,67,111,110,111,115,99,111,32,113,117,101,108,32,116,105,112,111,46,10,72,97,32,117,110,32,97,109,105,99,111,10,110,101,108,108,97,32,112,111,108,105,122,105,97,46,11,255,233,234,68,111,118,101,32,112,111,115,115,111,10,116,114,111,118,97,114,101,32,108,39,97,109,105,99,111,63,11,255,235,236,86,97,105,32,97,32,82,101,115,116,114,105,99,116,101,100,10,65,114,101,97,32,49,44,32,112,101,110,115,111,10,99,104,101,32,115,105,97,32,100,105,10,115,101,114,118,105,122,105,111,32,108,91,46,11,77,97,32,115,116,97,105,32,97,116,116,101,110,116,111,44,10,113,117,101,105,32,116,105,112,105,32,115,111,110,111,10,100,101,105,32,100,117,114,105,33,0,255,235,236,78,111,110,32,115,111,10,110,105,101,110,116,97,108,116,114,111,44,10,114,97,103,97,122,122,111,46,0,255,235,236,67,89,45,66,48,50,49,32,118,117,111,108,101,10,102,97,114,116,105,32,117,110,97,10,112,114,111,112,111,115,116,97,46,11,84,105,32,115,116,97,10,97,115,112,101,116,116,97,110,100,111,10,100,105,101,116,114,111,32,97,108,32,98,97,114,46,0,255,235,236,86,97,105,32,97,108,32,98,97,114,44,10,114,97,103,97,122,122,111,44,32,67,89,45,66,48,50,49,10,116,105,32,115,116,97,10,97,115,112,101,116,116,97,110,100,111,46,0,255,235,236,78,111,110,32,115,112,97,114,97,114,101,44,32,110,111,110,10,115,111,110,111,32,67,89,45,66,48,50,49,33,11,73,108,32,115,117,111,32,114,105,102,117,103,105,111,10,92,32,100,105,32,115,111,116,116,111,46,11,73,108,32,115,117,111,32,99,111,109,112,97,103,110,111,44,10,105,108,32,112,111,108,105,122,105,111,116,116,111,44,10,104,97,32,108,97,32,99,104,105,97,118,101,46,0,255,235,236,78,111,110,32,115,111,32,110,105,101,110,116,101,10,100,105,32,112,105,95,46,0,255,235,236,83,105,103,110,111,114,101,46,46,46,32,117,110,10,99,101,114,116,111,32,74,97,99,107,10,118,105,32,97,115,112,101,116,116,97,10,118,105,99,105,110,111,32,97,108,32,98,97,114,46,0,86,111,114,114,101,105,32,117,110,32,112,101,114,45,10,109,101,115,115,111,32,100,105,32,108,97,118,111,114,111,46,11,255,235,236,78,111,44,32,110,111,110,32,113,117,105,46,10,67,104,105,101,100,101,116,101,32,97,108,108,111,10,115,112,111,114,116,101,108,108,111,32,67,46,0,86,111,114,114,101,105,32,117,110,32,112,101,114,45,10,109,101,115,115,111,32,100,105,32,108,97,118,111,114,111,46,11,255,235,236,66,101,110,101,46,46,46,79,46,107,46,44,32,105,108,10,99,97,112,111,32,118,105,32,114,105,99,101,118,101,114,91,10,97,100,101,115,115,111,46,0,86,111,114,114,101,105,32,117,110,32,112,101,114,45,10,109,101,115,115,111,32,100,105,32,108,97,118,111,114,111,46,11,255,235,236,78,111,44,32,110,111,110,32,113,117,105,46,10,67,104,105,101,100,101,116,101,32,97,108,108,111,10,115,112,111,114,116,101,108,108,111,32,66,46,0,86,111,114,114,101,105,32,112,97,114,108,97,114,101,10,99,111,110,32,74,97,99,107,46,11,255,235,236,65,104,32,115,105,63,32,74,97,99,107,10,110,111,110,32,99,39,92,46,11,255,233,234,83,111,110,111,32,115,116,97,116,111,10,109,97,110,100,97,116,111,32,100,97,108,32,109,105,111,10,97,109,105,99,111,32,73,97,110,46,11,255,235,236,79,46,107,46,32,74,97,99,107,10,116,105,32,115,116,97,32,97,115,112,101,116,45,10,116,97,110,100,111,32,102,117,111,114,105,46,0,255,235,236,78,105,101,110,116,101,32,100,97,32,102,97,114,101,46,10,83,101,105,32,116,114,111,112,112,111,32,103,105,111,45,10,118,97,110,101,32,112,101,114,32,98,101,114,101,46,0,255,235,236,68,111,99,117,109,101,110,116,105,32,112,114,101,103,111,46,0,83,111,110,111,32,105,108,10,99,111,114,114,105,101,114,101,46,11,255,235,236,79,104,32,98,101,110,101,33,32,69,99,99,111,44,10,112,111,114,116,97,32,105,108,32,112,97,99,99,111,10,97,108,108,39,97,103,101,110,122,105,97,10,118,105,97,103,103,105,46,11,69,32,102,97,105,32,97,116,116,101,110,122,105,111,110,101,10,92,32,112,114,101,122,105,111,115,111,46,0,84,69,77,80,79,32,83,67,65,68,85,84,79,0,67,39,92,32,117,110,97,32,102,101,115,115,117,114,97,10,112,101,114,32,108,97,32,115,99,104,101,100,97,46,0,255,235,236,71,114,97,122,105,101,44,32,67,111,110,114,97,100,46,10,81,117,101,105,32,112,111,108,105,122,105,111,116,116,105,10,109,105,32,115,116,97,118,97,110,111,32,112,101,114,10,115,99,111,112,114,105,114,101,33,11,66,101,104,44,32,105,109,109,97,103,105,110,111,10,99,104,101,32,110,111,110,32,116,105,10,114,105,99,111,114,100,105,32,100,101,108,32,116,117,111,10,99,97,114,111,32,97,109,105,99,111,32,73,97,110,46,11,83,105,101,100,105,116,105,44,10,114,105,115,111,108,118,101,114,101,109,111,10,116,117,116,116,111,32,102,114,97,32,112,111,99,111,46,0,73,97,110,44,32,99,111,115,97,32,100,101,118,111,10,102,97,114,101,32,112,101,114,32,97,110,100,97,114,101,10,115,117,108,108,97,32,84,69,82,82,65,63,11,255,235,236,73,108,32,99,111,115,116,111,32,100,105,32,117,110,10,98,105,103,108,105,101,116,116,111,32,92,10,97,115,116,114,111,110,111,109,105,99,111,46,11,76,39,117,110,105,99,111,32,109,111,100,111,10,115,97,114,101,98,98,101,32,113,117,101,108,108,111,10,100,105,32,112,97,114,116,101,99,105,112,97,114,101,32,97,108,10,68,101,97,116,104,32,84,111,119,101,114,46,11,255,233,234,68,101,97,116,104,32,84,111,119,101,114,63,11,255,235,236,83,105,44,92,32,117,110,32,103,105,111,99,111,10,116,101,108,101,118,105,115,105,118,111,46,32,73,108,10,118,105,110,99,105,116,111,114,101,32,114,105,99,101,118,101,10,117,110,32,98,105,103,108,105,101,116,116,111,46,11,255,233,234,79,46,107,46,32,77,105,32,112,117,111,105,10,102,111,114,110,105,114,101,32,100,101,105,10,100,111,99,117,109,101,110,116,105,32,102,97,108,115,105,63,11,255,235,236,78,111,32,112,114,111,98,108,101,109,111,46,10,86,97,105,32,97,108,32,98,97,114,10,101,32,99,104,105,101,100,105,32,100,105,10,74,97,99,107,46,11,68,105,103,108,105,32,99,104,101,32,116,105,32,104,111,10,109,97,110,100,97,116,111,32,105,111,46,10,79,104,44,97,32,112,114,111,112,111,115,105,116,111,46,46,11,84,105,32,104,111,32,109,101,115,115,111,10,110,101,108,108,101,32,116,97,115,99,104,101,32,105,108,10,99,97,109,112,111,32,100,105,32,102,111,114,122,97,10,99,104,101,32,118,111,108,101,118,105,46,11,255,233,234,79,116,116,105,109,111,46,32,71,114,97,122,105,101,10,73,97,110,46,32,67,105,32,118,101,100,105,97,109,111,10,97,108,108,97,32,112,114,111,115,115,105,109,97,46,46,46,0,255,235,236,66,117,111,110,97,32,102,111,114,116,117,110,97,46,10,116,105,32,99,111,110,116,97,116,116,101,114,94,10,113,117,97,110,100,111,32,97,114,114,105,118,101,114,97,105,10,115,117,108,108,97,32,116,101,114,114,97,46,0,255,235,236,66,101,110,118,101,110,117,116,111,32,97,10,78,101,119,32,87,97,115,104,105,110,103,116,111,110,44,10,103,105,111,118,97,110,111,116,116,111,46,11,69,99,99,111,32,117,110,97,32,109,97,112,112,97,10,100,101,108,108,97,32,99,105,116,116,91,32,99,104,101,10,112,111,116,114,91,32,101,115,115,101,114,116,105,10,117,116,105,108,101,46,11,255,233,234,71,114,97,122,105,101,46,0,255,235,236,66,117,111,110,97,10,103,105,111,114,110,97,116,97,46,0,255,235,236,68,101,118,105,32,97,118,101,114,101,32,117,110,10,112,101,114,109,101,115,115,111,32,112,101,114,10,108,97,118,111,114,97,114,101,11,80,117,111,105,32,111,116,116,101,110,101,114,110,101,10,117,110,111,32,97,108,32,67,101,110,116,114,111,10,65,109,109,105,110,105,115,116,114,97,116,105,118,111,46,0,255,235,236,78,111,110,32,104,111,10,116,101,109,112,111,46,0,66,117,111,110,103,105,111,114,110,111,46,11,255,235,236,66,117,111,110,103,105,111,114,110,111,46,0,255,235,236,72,111,32,118,105,115,116,111,32,113,117,101,108,10,116,105,112,111,32,112,114,105,109,97,10,97,108,32,98,97,114,46,0,66,117,111,110,103,105,111,114,110,111,46,11,255,235,236,66,117,111,110,103,105,111,114,110,111,46,0,255,235,236,83,105,44,32,108,111,32,99,111,110,111,115,99,111,46,10,69,39,32,99,108,105,101,110,116,101,32,102,105,115,115,111,0,32,0,32,0,86,111,114,114,101,105,32,117,110,32,112,101,114,45,10,109,101,115,115,111,32,100,105,32,108,97,118,111,114,111,46,11,255,235,236,78,111,110,32,99,39,92,32,112,114,111,98,108,101,109,97,10,97,100,32,97,118,101,114,101,32,117,110,10,112,101,114,109,101,115,115,111,46,46,46,11,76,97,32,115,117,97,32,99,97,114,116,97,32,100,105,10,105,100,101,110,116,105,116,91,44,32,112,114,101,103,111,46,0,255,235,236,65,73,85,84,79,46,46,46,65,73,85,84,79,46,46,46,0,255,235,236,65,105,117,116,97,109,105,32,103,105,111,118,97,110,101,46,10,83,111,110,111,32,115,116,97,116,111,10,97,116,116,97,99,99,97,116,111,32,100,97,105,10,109,117,116,97,110,116,105,46,46,46,11,101,32,110,111,110,32,112,111,115,115,111,10,99,97,109,109,105,110,97,114,101,46,11,84,114,111,118,97,32,105,108,32,109,105,111,10,116,101,108,101,116,114,97,115,112,111,114,116,111,44,104,111,10,98,105,115,111,103,110,111,32,100,105,10,99,117,114,101,32,117,114,103,101,110,116,105,46,0,255,235,236,71,114,97,122,105,101,46,32,77,105,32,104,97,105,10,115,97,108,118,97,116,111,32,108,97,32,118,105,116,97,46,0,255,235,236,80,101,114,32,97,110,100,97,114,101,32,97,32,78,101,119,10,87,97,115,104,105,110,103,116,111,110,44,32,100,101,118,105,10,115,97,108,116,97,114,101,32,105,110,10,113,117,101,115,116,111,32,98,117,99,111,44,11,109,97,32,115,101,32,102,111,115,115,105,32,105,110,10,116,101,44,32,117,115,101,114,101,105,32,117,110,97,10,99,105,110,116,117,114,97,32,65,110,116,105,45,71,46,11,255,233,234,68,111,118,101,32,112,111,115,115,111,10,116,114,111,118,97,114,110,101,32,117,110,97,63,11,255,235,236,83,117,98,105,116,111,44,32,116,101,32,110,101,10,118,101,110,100,111,32,117,110,97,58,10,53,48,48,32,99,114,101,100,105,116,105,46,0,255,235,236,66,117,111,110,32,118,105,97,103,103,105,111,44,10,103,105,111,118,97,110,101,32,117,111,109,111,46,0,72,111,32,98,105,115,111,103,110,111,32,100,105,10,117,110,97,32,99,97,114,116,117,99,99,105,97,10,109,97,103,110,101,116,105,99,97,32,99,97,114,105,99,97,0,86,111,114,114,101,105,32,117,110,32,112,101,114,45,10,109,101,115,115,111,32,100,105,32,108,97,118,111,114,111,46,11,255,235,236,80,114,105,109,111,32,112,105,97,110,111,46,0,85,110,97,32,118,111,99,101,32,105,110,116,101,45,10,114,105,111,114,101,32,105,110,116,101,114,114,111,109,112,101,10,105,32,116,117,111,105,32,112,101,110,115,105,101,114,105,46,11,255,235,236,70,105,100,97,116,105,44,32,109,101,116,116,105,10,108,97,32,99,97,114,105,99,97,10,97,116,111,109,105,99,97,32,113,117,105,46,46,46,11,101,32,115,99,97,112,112,97,32,110,111,110,10,97,112,112,101,110,97,32,114,97,103,103,105,117,110,103,101,10,105,108,32,110,117,99,108,101,111,10,100,101,108,32,112,105,97,110,101,116,97,46,0,255,235,236,70,97,105,32,115,116,114,97,100,97,44,10,103,105,111,118,97,110,101,32,117,111,109,111,46,11,80,111,114,116,97,109,105,32,97,108,10,67,101,110,116,114,111,32,82,105,99,101,114,99,104,101,46,0,255,235,236,71,114,97,122,105,101,32,112,101,114,32,105,108,10,116,117,111,32,97,105,117,116,111,46,46,46,11,83,111,110,111,32,97,114,114,105,118,97,116,111,10,115,97,110,111,32,101,32,115,97,108,118,111,10,101,32,110,111,110,32,99,39,92,32,112,105,95,10,112,101,114,105,99,111,108,111,46,0,255,235,236,65,108,108,111,114,97,44,32,104,97,105,10,112,111,114,116,97,116,111,32,105,108,10,112,97,99,99,104,101,116,116,111,63,0,81,117,97,110,116,111,32,99,111,115,116,97,32,117,110,10,98,105,103,108,105,101,116,116,111,32,112,101,114,10,108,97,32,116,101,114,114,97,63,11,255,235,236,53,48,46,48,48,48,32,99,114,101,100,105,116,105,46,0,255,235,236,73,111,32,100,94,32,117,110,97,32,109,97,110,111,32,97,10,116,101,32,101,32,116,117,32,110,101,32,100,97,105,10,117,110,97,32,97,32,109,101,58,11,49,53,48,48,32,99,114,101,100,105,116,105,32,101,10,105,32,100,111,99,117,109,101,110,116,105,10,115,111,110,111,32,116,117,111,105,46,0]),L=Uint8Array.from([90,0,105,0,125,0,88,1,206,1,226,1,26,2,59,2,133,2,152,2,194,2,251,2,45,3,102,3,191,3,219,3,236,3,71,4,84,4,104,4,201,4,52,6,130,6,149,6,209,6,226,6,243,6,18,7,48,7,75,7,76,7,77,7,129,7,144,7,10,8,42,8,164,8,179,8,212,8,250,8,102,9,143,9,191,9,214,9,255,9,176,202,45,162,207,96,207,32,110,136,109,207,92,131,0,128,102,146,10,100,132,109,207,147,93,100,207,98,116,103,207,106,207,146,0,255,1,154,191,96,207,32,161,207,201,204,157,106,207,146,10,171,163,115,175,208,162,179,208,45,169,96,207,10,120,102,92,136,106,207,145,109,63,11,255,0,91,91,146,109,207,97,131,106,207,99,32,116,126,98,111,146,11,255,1,49,53,48,48,157,191,161,207,204,169,106,207,111,33,11,255,0,49,53,48,48,157,191,161,207,204,169,106,207,145,109,63,11,255,1,91,91,147,108,98,131,112,116,32,92,133,92,133,10,109,121,96,207,32,96,96,145,109,114,46,46,46,146,11,255,0,106,207,99,110,207,46,46,46,10,105,136,111,112,32,125,145,109,111,92,104,207,46,46,46,146,11,255,1,102,144,98,97,207,144,93,10,91,136,111,92,102,207,144,112,32,92,99,146,11,105,100,109,207,147,102,100,207,110,135,10,101,96,207,103,136,106,207,111,146,11,155,173,96,207,32,109,207,97,109,96,129,147,10,110,130,117,97,32,102,128,93,146,0,255,1,185,167,111,129,32,102,145,109,131,104,207,146,10,99,92,102,207,115,32,102,130,91,92,96,207,10,92,131,136,106,207,145,109,128,146,11,255,0,105,115,99,92,102,207,116,147,10,110,207,100,112,32,92,131,136,106,207,63,11,255,1,65,82,69,65,49,112,32,92,145,109,122,111,146,10,106,118,207,136,147,105,100,109,207,10,116,106,129,92,109,131,104,207,146,11,97,135,108,99,111,146,10,185,167,129,116,32,97,106,114,140,96,129,111,146,0,255,1,125,93,147,105,132,92,102,207,144,93,10,102,129,114,140,128,146,0,255,1,160,151,179,207,45,157,207,50,49,96,207,147,156,181,110,32,10,110,130,117,97,32,102,106,96,207,145,109,92,131,146,11,175,207,45,115,32,93,129,109,207,10,121,145,109,92,131,32,105,93,106,207,146,0,255,1,175,207,45,112,32,92,97,111,147,10,160,151,179,207,45,157,207,50,49,96,207,10,121,145,109,92,131,104,207,146,0,255,1,93,108,111,33,154,191,116,147,10,160,151,179,207,45,157,207,50,49,102,207,142,111,92,33,11,185,167,115,32,96,98,132,96,207,116,10,100,115,32,102,106,106,207,146,11,185,167,115,32,111,96,121,115,32,99,92,102,207,96,207,10,156,45,135,32,125,145,109,92,131,146,0,255,1,120,96,112,116,147,10,111,112,125,32,102,129,111,92,128,146,0,255,1,102,108,132,92,109,207,103,96,207,147,11,161,207,201,204,157,110,92,93,32,96,106,96,207,10,175,207,45,109,207,32,91,92,106,92,110,46,46,46,0,34,97,144,96,102,144,93,34,96,207,147,10,120,102,92,136,106,207,96,207,146,11,255,1,100,100,116,32,107,96,207,92,121,103,146,10,67,115,121,110,207,98,207,107,112,147,10,92,145,109,98,106,207,101,92,146,0,34,97,144,96,102,144,93,34,96,207,147,10,120,102,92,136,106,207,96,207,146,11,255,1,105,132,109,207,116,46,46,46,10,102,144,107,144,93,112,10,91,145,109,98,106,207,101,92,146,0,34,97,144,96,102,144,93,34,96,207,147,10,120,102,92,136,106,207,96,207,146,11,255,1,100,100,116,32,107,96,207,92,121,103,146,10,66,115,121,110,207,98,207,107,112,147,10,92,145,109,98,106,207,101,92,146,0,161,207,201,204,157,145,109,32,185,167,116,147,10,92,131,96,92,63,11,255,1,161,207,201,204,157,96,63,10,100,100,112,116,32,92,111,92,114,146,11,255,0,151,150,195,96,129,10,97,92,109,32,97,106,136,106,207,96,207,146,11,255,1,79,46,75,46,10,161,207,201,204,157,116,32,105,110,109,207,10,121,145,109,92,131,104,207,146,0,255,1,102,207,142,121,106,207,146,10,155,207,156,112,32,115,121,104,131,10,101,99,116,114,140,128,146,0,255,1,175,208,162,179,208,45,169,135,32,106,207,102,109,146,0,108,96,92,115,32,125,115,106,207,96,207,146,11,255,1,105,93,109,207,103,96,33,10,109,207,116,147,100,100,112,91,131,32,100,108,207,108,122,135,10,150,177,189,155,102,109,136,112,10,125,145,109,92,145,109,32,98,106,207,101,92,146,11,97,135,108,99,109,32,98,106,207,101,92,114,147,10,100,93,96,111,125,115,32,109,207,103,96,129,146,0,165,151,182,154,45,175,207,45,109,207,103,146,0,155,45,169,207,115,10,101,102,100,122,98,207,107,96,207,32,91,131,146,0,255,1,106,103,96,145,106,147,159,195,188,204,169,207,146,10,185,167,129,112,32,108,131,102,91,99,207,129,132,131,10,110,100,133,106,207,145,106,104,207,146,11,91,145,147,105,145,96,146,154,191,115,100,110,116,10,36,120,207,94,109,32,92,111,92,136,106,207,145,106,111,146,11,121,137,32,103,134,132,128,146,10,109,122,102,207,96,112,32,36,134,129,104,128,93,146,0,151,150,195,147,10,107,97,143,93,112,32,96,94,131,112,116,147,10,110,207,93,102,106,129,32,92,92,136,106,207,63,11,255,1,107,97,143,93,92,97,115,32,166,158,204,169,116,10,116,207,96,32,106,96,92,96,129,111,146,11,105,93,106,207,111,46,46,46,10,120,93,120,93,116,32,106,106,207,117,110,108,147,10,168,207,162,165,193,45,112,10,107,144,93,104,136,102,133,128,146,11,255,0,168,207,162,165,193,45,63,11,255,1,105,93,147,10,168,191,176,207,115,32,158,207,45,182,161,203,45,106,207,146,10,158,207,45,182,112,32,96,109,116,207,147,10,166,158,204,169,96,207,32,109,112,116,92,131,146,11,255,0,134,96,145,106,128,146,10,112,104,115,32,175,208,162,179,208,45,169,135,10,108,98,132,131,96,92,63,11,255,1,125,107,133,136,101,146,10,175,207,45,112,32,161,207,201,204,157,110,92,93,10,185,167,96,207,92,131,146,10,105,92,108,112,32,97,98,110,92,92,146,11,154,191,112,32,97,92,106,110,32,92,94,116,207,92,92,146,10,110,100,133,109,207,46,46,46,11,106,115,121,132,109,92,106,10,177,200,45,162,177,197,45,190,169,207,135,147,10,156,181,115,32,179,208,158,204,169,112,10,92,132,109,32,36,92,106,96,129,111,146,11,255,0,105,93,96,147,91,130,96,207,110,93,146,10,151,150,195,147,121,106,91,36,93,46,46,46,11,255,1,96,207,136,116,207,132,128,146,10,107,97,143,93,112,32,108,92,106,129,10,132,136,129,98,32,102,109,98,132,146,0,255,1,171,202,45,193,161,195,169,195,119,10,128,93,100,105,32,92,129,145,102,142,92,121,102,106,146,11,100,115,107,103,207,135,32,110,207,93,105,207,146,10,92,97,106,92,32,116,207,102,144,96,207,147,10,103,98,207,112,32,134,96,130,121,103,128,146,11,255,0,91,130,96,207,110,93,146,0,255,1,97,135,108,99,109,147,10,92,145,109,129,145,102,142,92,146,0,255,1,116,106,129,98,115,111,129,10,97,144,96,96,207,32,117,108,128,93,106,207,146,11,102,144,98,97,207,144,93,32,91,136,111,92,102,207,144,115,10,34,97,144,96,102,144,93,34,116,10,125,145,109,92,121,103,96,63,0,255,1,116,111,102,109,92,131,32,176,180,116,111,92,128,146,0,126,137,147,36,116,128,93,146,11,255,1,36,116,128,93,146,0,255,1,105,92,108,111,129,147,10,121,94,112,32,175,207,45,109,207,10,122,106,100,110,96,207,32,91,131,128,146,0,92,92,109,136,97,109,207,103,114,146,11,255,1,121,145,106,98,106,207,147,116,132,116,207,132,103,131,128,146,0,255,1,105,92,108,111,129,32,102,145,109,131,104,207,147,10,128,98,122,131,32,185,167,106,207,146,0,0,0,34,97,144,96,102,144,93,34,96,207,147,10,120,102,92,136,106,207,96,207,146,11,255,1,92,92,109,207,103,128,146,10,73,68,155,45,169,207,135,147,10,122,104,109,32,98,106,207,101,92,146,0,255,1,106,46,46,106,103,99,109,98,132,46,46,46,0,255,1,36,134,96,92,115,32,106,103,99,109,98,132,136,96,146,10,134,102,116,147,10,181,202,45,165,195,169,112,32,126,129,132,109,46,46,46,11,91,131,99,111,98,32,111,145,109,147,10,102,121,145,106,136,102,207,142,146,11,103,98,207,112,32,92,102,142,115,32,109,91,109,96,207,147,10,117,108,128,93,32,111,136,102,207,142,96,207,147,10,110,207,93,96,32,134,102,115,168,191,179,208,45,165,45,135,10,101,96,207,102,109,116,32,98,132,136,96,114,146,0,255,1,91,130,96,207,110,93,146,10,91,136,106,116,32,92,115,107,115,10,36,136,102,207,136,32,102,207,142,128,146,0,255,1,100,115,91,111,112,32,110,117,207,100,121,111,99,132,116,207,10,171,202,45,193,161,195,169,195,112,116,10,92,99,136,115,102,207,142,146,11,121,137,147,134,102,111,129,10,150,195,166,71,178,207,190,169,135,10,108,96,93,96,207,115,146,11,255,0,105,132,116,32,110,207,100,112,91,131,136,106,207,92,63,11,255,1,92,121,147,134,102,96,207,32,125,145,110,131,146,10,49,108,32,53,48,48,157,191,161,207,204,169,109,207,10,110,207,93,102,207,142,146,0,255,1,134,96,92,115,32,97,135,108,99,109,111,33,0,102,207,143,93,109,207,136,103,207,122,115,10,155,45,169,189,204,161,207,156,45,96,207,10,117,108,128,93,109,207,103,146,0,34,97,144,96,102,144,93,34,96,207,147,10,120,102,92,136,106,207,96,207,146,11,255,1,93,94,119,32,92,145,109,98,106,207,101,92,146,0,111,112,125,115,96,115,32,100,94,96,207,147,10,97,122,115,32,100,100,133,112,10,96,106,130,96,99,109,98,131,146,11,255,1,134,106,102,135,32,102,136,102,207,109,147,100,100,112,10,150,169,181,204,157,166,201,45,161,207,135,10,36,98,115,106,207,205,205,205,11,105,102,109,147,105,132,96,207,10,134,98,104,92,115,32,96,98,112,32,36,107,106,129,147,10,103,98,207,32,112,99,207,109,98,132,33,33,0,255,1,97,122,96,207,147,108,132,109,92,145,109,10,98,132,131,115,96,146,11,189,160,45,166,163,195,165,45,121,109,207,147,10,106,115,123,105,207,146,0,255,1,91,130,96,207,110,93,146,106,103,96,145,106,128,146,11,118,207,102,207,112,32,106,110,207,130,108,99,106,146,10,100,100,116,32,125,93,147,91,136,104,207,136,106,207,146,0,255,1,100,108,207,108,122,135,147,10,125,145,109,97,109,32,98,132,106,115,96,63,0,107,97,143,93,121,109,207,115,10,166,158,204,169,116,32,92,98,129,106,207,92,63,11,255,1,53,48,48,48,48,157,191,161,207,204,169,109,207,103,146,0,255,1,36,106,96,207,92,101,121,32,106,207,111,146,11,49,53,48,48,157,191,161,207,204,169,135,10,92,106,106,207,100,93,96,146,11,97,207,105,207,93,175,208,162,179,208,45,169,116,10,97,122,115,32,125,115,106,207,146,0]),O=Uint8Array.from([46,0,47,0,53,0,61,0,72,0,82,0,86,0,94,0,100,0,114,0,122,0,127,0,133,0,143,0,152,0,161,0,171,0,181,0,189,0,196,0,206,0,212,0,221,0,0,176,162,169,174,191,0,179,192,156,202,45,177,207,0,155,45,169,189,204,161,207,192,204,157,0,155,45,169,189,204,161,207,156,45,0,100,92,102,0,168,191,179,208,45,165,45,0,156,45,192,204,157,0,153,173,190,156,207,45,166,201,45,161,207,201,45,0,157,189,162,165,190,156,45,0,162,151,204,166,0,161,45,190,169,207,0,157,191,161,207,204,169,158,45,162,0,49,48,157,191,161,207,204,169,0,53,48,157,191,161,207,204,169,0,53,48,48,157,191,161,207,204,169,0,49,48,48,157,191,161,207,204,169,0,155,45,169,207,192,204,157,0,73,68,155,45,169,207,0,163,45,177,207,162,165,195,169,207,0,133,93,102,207,136,0,150,195,166,71,178,207,190,169,0,99,96,207,112,136,0]),D=Uint8Array.from([76,0,77,0,83,0,90,0,96,0,110,0,114,0,120,0,125,0,133,0,138,0,148,0,159,0,169,0,178,0,191,0,199,0,207,0,215,0,221,0,227,0,233,0,241,0,247,0,251,0,5,1,10,1,16,1,24,1,29,1,34,1,38,1,48,1,56,1,65,1,75,1,86,1,90,1,0,176,162,169,174,191,0,73,68,155,45,169,207,0,161,45,190,169,207,0,153,173,190,156,207,45,166,201,45,161,207,201,45,0,151,150,195,0,176,202,45,162,207,0,162,151,204,166,0,175,208,162,179,208,45,169,0,179,207,45,151,0,157,191,161,207,204,169,158,45,162,0,102,207,118,207,136,115,102,142,102,136,0,151,195,162,165,195,169,177,200,169,0,108,93,102,136,184,171,165,45,0,133,93,110,207,93,32,97,144,96,102,144,93,0,121,110,207,98,207,107,65,0,121,110,207,98,207,107,66,0,121,110,207,98,207,107,67,0,102,144,107,144,93,0,175,207,45,168,195,0,161,207,201,204,157,0,157,189,162,165,190,156,45,0,156,45,192,204,157,0,100,92,102,0,49,48,48,157,191,161,207,204,169,0,93,99,108,99,0,100,108,207,108,122,0,184,195,165,45,161,207,202,0,99,92,102,207,0,158,181,155,190,0,86,73,80,0,163,45,177,207,162,165,195,169,207,0,115,100,130,102,207,96,136,0,104,92,97,207,144,105,93,107,0,104,92,97,207,144,97,116,207,136,0,177,200,45,162,177,197,45,190,169,207,0,161,45,169,0,180,204,177,208,0]),N=Uint8Array.from([16,0,17,0,23,0,29,0,39,0,50,0,55,0,65,0,0,176,162,169,174,191,0,161,45,190,169,207,0,157,191,161,207,204,169,158,45,162,0,177,200,45,162,177,197,45,190,169,207,0,162,151,204,166,0,163,45,177,207,162,165,195,169,207,0,153,173,190,156,207,45,166,201,45,161,207,201,45,0]),I=Uint8Array.from([26,0,27,0,33,0,39,0,49,0,60,0,68,0,73,0,79,0,87,0,92,0,102,0,116,0,0,176,162,169,174,191,0,161,45,190,169,207,0,157,191,161,207,204,169,158,45,162,0,177,200,45,162,177,197,45,190,169,207,0,175,208,162,179,208,45,169,0,179,207,45,151,0,156,45,192,204,157,0,157,189,162,165,190,156,45,0,162,151,204,166,0,163,45,177,207,162,165,195,169,207,0,153,173,190,156,207,45,166,201,45,161,207,201,45,0,165,157,161,45,162,168,45,161,203,195,0]),k=Uint8Array.from([24,0,25,0,31,0,37,0,47,0,58,0,66,0,72,0,77,0,85,0,93,0,103,0,0,176,162,169,174,191,0,161,45,190,169,207,0,157,191,161,207,204,169,158,45,162,0,177,200,45,162,177,197,45,190,169,207,0,157,189,162,165,190,156,45,0,156,45,192,204,157,0,162,151,204,166,0,168,191,179,208,45,165,45,0,168,191,161,45,175,207,45,0,163,45,177,207,162,165,195,169,207,0,153,173,190,156,207,45,166,201,45,161,207,201,45,0]),x=Uint8Array.from([34,0,35,0,41,0,48,0,54,0,64,0,69,0,83,0,87,0,96,0,104,0,112,0,120,0,131,0,141,0,147,0,158,0,0,176,162,169,174,191,0,73,68,155,45,169,207,0,161,45,190,169,207,0,157,191,161,207,204,169,158,45,162,0,162,151,204,166,0,153,173,190,156,207,45,166,201,45,161,207,201,45,0,100,92,102,0,183,155,171,155,190,180,152,162,0,157,189,162,165,190,156,45,0,168,191,179,208,45,165,45,0,168,191,161,45,175,207,45,0,150,169,181,204,157,166,201,45,161,207,0,163,45,177,207,162,165,195,169,207,0,156,45,192,204,157,0,165,207,151,150,189,45,186,171,204,169,0,177,200,45,162,177,197,45,190,169,207,0]),M=Uint8Array.from([34,0,35,0,41,0,48,0,54,0,64,0,78,0,83,0,90,0,96,0,104,0,113,0,121,0,129,0,140,0,150,0,161,0,0,176,162,169,174,191,0,73,68,155,45,169,207,0,161,45,190,169,207,0,157,191,161,207,204,169,158,45,162,0,153,173,190,156,207,45,166,201,45,161,207,201,45,0,162,151,204,166,0,180,152,162,179,207,182,0,156,45,192,204,157,0,157,189,162,165,190,156,45,0,183,155,171,155,190,180,152,162,0,168,191,179,208,45,165,45,0,168,191,161,45,175,207,45,0,150,169,181,204,157,166,201,45,161,207,0,163,45,177,207,162,165,195,169,207,0,177,200,45,162,177,197,45,190,169,207,0,165,207,151,150,189,45,186,171,204,169,0]),U=Uint8Array.from([0,0,0,35,0,84,0,142,0,192,0,203,0,211,0,221,0,228,0,232,0,241,0,254,1,65,1,75,1,84,1,99,1,149,1,174,1,184,1,194,1,204,2,1,2,67,2,110,2,121,2,131,2,149,2,180,2,241,3,72,3,117,3,128,3,137,3,150,3,231,4,2,4,12,4,31,4,92,4,159,4,200,5,3,5,65,5,94,5,125,5,163,5,193,5,222,5,247,6,16,6,35,6,48,6,70,6,75,6,81,6,90,6,115,6,129,6,185,6,202,6,236,7,6,7,52,7,79,7,88,7,96,7,124,7,143,7,191,7,249,8,42,8,52,8,139,8,149,8,208,8,218,9,51,9,61,9,128,9,138,9,227,9,237,10,51,10,152,10,162,10,226,11,8,11,19,11,94,11,141,11,159,11,162,11,165,11,168,11,171,11,174,11,177,11,180,11,183,11,186,11,189,11,192,11,195,11,198,11,201,11,204,11,207,11,210,11,228,12,47,12,60,12,66,12,70,12,74,12,78,12,82,12,86,12,93]),B=Uint8Array.from([100,132,96,207,147,134,106,102,96,207,32,96,108,109,32,99,92,99,136,102,106,147,209,125,115,96,207,106,130,109,207,91,131,146,10,100,115,118,114,115,32,170,176,207,158,207,45,161,203,195,209,161,162,168,182,116,147,100,115,97,207,136,96,207,115,32,107,103,207,135,209,97,36,98,102,109,32,92,111,96,145,106,146,10,134,106,102,96,207,147,107,97,143,93,115,32,97,110,207,93,112,209,125,110,207,131,100,110,135,32,92,121,96,129,32,99,92,101,136,209,103,131,115,116,32,110,93,109,92,32,118,96,115,93,111,209,100,110,106,207,146,10,106,118,207,136,147,100,132,96,129,101,97,125,32,103,207,145,110,147,111,96,207,92,91,92,106,207,209,93,107,143,93,135,32,101,103,129,93,100,110,112,32,111,131,115,106,207,133,93,146,10,177,196,151,190,170,195,175,207,45,59,10,32,92,129,92,112,136,59,10,102,100,207,110,111,92,128,93,59,10,120,93,102,143,93,59,10,183,184,59,10,52,51,50,52,88,66,51,53,10,165,151,165,195,162,178,208,45,162,188,151,195,10,100,108,207,108,122,135,32,165,151,165,195,169,188,178,207,190,32,150,161,207,150,102,109,136,109,207,209,93,99,110,130,147,105,132,135,32,165,151,165,195,169,188,178,207,190,32,150,177,189,155,102,109,136,121,109,207,209,116,100,136,109,207,120,102,92,146,10,49,48,48,157,191,161,207,204,169,10,52,51,50,52,88,66,52,48,10,175,207,151,165,190,159,45,179,208,191,45,161,203,195,10,86,73,80,135,32,189,160,45,166,163,195,165,45,121,109,207,32,104,136,110,207,93,102,109,32,120,102,92,146,209,86,73,80,116,32,65,82,69,65,50,109,207,32,121,145,109,92,131,146,10,65,82,69,65,50,116,32,97,99,136,106,207,147,118,207,97,135,125,145,109,92,99,128,146,10,51,48,48,157,191,161,207,204,169,10,52,51,51,52,75,82,52,50,209,10,165,151,165,195,168,191,176,207,209,10,160,151,179,207,45,157,207,50,49,115,32,118,98,104,92,97,96,207,147,112,99,207,106,146,209,36,105,129,98,147,96,207,92,118,207,112,32,111,96,121,96,207,32,92,131,116,103,207,106,207,146,209,10,97,122,115,32,112,136,123,116,147,160,151,179,207,45,157,207,50,49,115,32,175,207,151,154,209,159,195,176,208,202,45,165,96,207,32,152,197,190,162,112,32,102,116,92,101,132,131,32,121,94,112,147,209,121,145,101,108,103,131,32,100,110,106,207,146,10,100,132,96,207,32,160,151,179,207,45,157,207,50,49,115,32,102,142,102,136,106,207,146,209,97,135,108,99,133,147,109,100,207,134,92,32,91,92,109,106,207,146,10,52,48,48,157,191,161,207,204,169,209,10,52,51,51,84,88,49,48,50,209,10,165,151,165,195,32,102,125,136,32,97,144,93,97,207,96,92,209,10,171,202,45,193,161,195,169,195,115,32,116,108,109,207,136,97,96,207,32,100,102,144,93,32,102,109,92,131,146,209,10,96,136,130,112,136,116,147,183,151,195,159,195,176,208,202,45,165,45,115,111,96,115,32,51,121,92,115,209,104,92,97,207,144,97,116,207,136,96,207,32,110,130,96,94,129,132,109,92,106,32,100,110,112,209,97,108,207,92,106,146,10,97,122,115,112,136,123,116,147,105,115,179,207,45,169,207,135,32,110,130,96,94,131,100,110,106,207,146,209,102,96,102,147,104,92,99,207,136,102,207,96,136,116,32,49,118,208,136,51,48,117,207,144,93,106,207,146,209,105,132,135,32,103,97,207,131,110,147,116,108,109,207,136,97,116,32,102,207,116,207,98,102,109,102,121,93,146,10,102,106,115,96,92,115,32,168,191,179,208,45,169,96,207,147,125,136,106,207,92,115,32,116,207,102,144,119,209,108,132,109,92,145,109,32,98,132,131,106,207,133,93,146,10,53,48,48,157,191,161,207,204,169,209,10,52,51,52,84,88,49,48,51,10,171,202,45,193,161,195,169,195,161,168,197,45,10,100,136,126,147,65,82,69,65,51,96,207,32,181,202,45,165,195,169,112,32,128,145,109,209,102,136,130,142,98,101,132,106,146,134,132,134,132,116,147,181,202,45,165,195,169,96,207,32,117,110,117,207,110,112,209,100,93,99,207,97,32,103,131,115,109,207,116,32,111,92,96,110,32,36,105,132,109,92,131,146,10,97,122,115,112,136,123,116,147,181,202,45,165,195,169,135,32,102,121,108,103,131,100,110,106,207,146,10,54,48,48,157,191,161,207,204,169,10,154,191,96,207,147,93,108,145,109,131,102,207,142,111,92,96,33,63,10,126,91,147,159,195,188,204,169,207,146,97,36,98,135,32,111,98,102,106,32,97,122,116,147,110,207,93,126,145,109,209,100,115,183,204,163,45,161,207,135,32,120,105,207,136,102,106,115,96,147,134,96,129,111,92,106,207,133,93,146,10,92,92,32,102,108,125,136,106,207,146,106,207,96,207,147,104,108,124,92,102,109,92,131,32,102,207,96,136,116,209,111,92,136,106,207,146,154,191,147,108,121,130,32,97,122,115,32,92,115,107,112,32,96,96,134,131,100,110,209,106,207,96,129,205,205,205,10,171,202,45,193,161,195,169,195,112,92,131,147,97,122,115,32,118,131,98,96,129,115,32,110,125,106,207,107,147,209,151,150,195,112,91,93,136,106,207,146,10,96,132,96,207,147,104,207,136,118,207,32,104,108,124,92,102,109,98,132,131,146,96,207,136,116,207,145,109,209,98,132,128,146,100,132,116,147,154,191,115,32,106,106,96,92,109,207,125,32,91,131,136,106,207,96,129,111,146,10,34,97,36,98,32,100,93,104,92,97,34,96,129,115,32,117,96,130,96,207,147,159,195,188,204,169,207,115,209,93,102,111,134,132,106,32,97,36,98,135,147,92,121,32,127,145,98,130,110,209,128,122,96,207,94,129,104,109,92,98,146,10,91,132,116,147,106,207,92,96,207,98,135,32,105,108,97,207,144,93,103,131,32,110,102,106,207,145,106,146,10,100,132,116,147,118,207,136,102,191,178,207,190,96,207,32,99,92,105,98,96,115,93,111,32,162,159,45,177,208,146,10,126,108,129,116,147,112,136,99,207,136,115,32,118,207,136,102,115,93,110,207,191,178,207,190,115,147,209,126,98,49,48,48,48,116,207,92,146,10,105,93,147,126,108,129,116,32,112,136,99,207,136,102,142,96,92,112,32,117,105,123,32,153,151,189,150,195,146,10,154,191,115,32,107,144,93,101,116,147,96,132,129,112,32,96,136,108,207,96,132,109,32,102,121,145,106,146,10,105,102,109,147,97,99,136,111,32,102,207,144,93,97,144,93,112,32,36,107,92,145,106,146,10,154,191,116,147,179,192,157,207,188,182,112,32,97,36,98,135,32,120,105,207,136,102,106,146,10,105,102,109,147,105,132,135,32,151,150,195,112,32,106,98,102,106,146,10,108,92,112,32,110,129,94,129,132,205,205,205,10,148,126,108,115,32,97,36,98,116,147,99,102,109,32,36,92,106,105,207,146,149,10,136,205,205,205,10,92,121,106,207,147,10,112,99,207,128,93,205,205,205,10,91,137,145,33,110,207,93,126,129,32,117,122,108,96,92,97,207,115,32,128,93,106,207,146,10,110,125,128,147,128,98,126,145,109,98,132,106,146,10,134,132,134,132,115,32,107,102,97,115,32,36,96,99,207,109,207,147,99,207,136,101,207,92,147,209,112,136,99,207,136,110,207,125,116,32,134,132,134,132,115,32,117,108,128,93,110,103,131,32,175,208,193,45,135,10,108,98,130,106,207,103,100,110,96,207,32,109,207,97,131,146,10,121,125,111,98,147,134,132,134,132,115,32,104,136,102,106,107,96,207,32,168,191,179,208,45,169,209,102,109,97,109,46,46,46,10,36,133,96,111,32,112,136,99,207,136,110,207,125,135,32,120,133,120,207,103,106,207,133,93,146,10,116,131,96,123,96,102,112,32,102,109,92,106,128,93,112,147,134,132,134,132,116,147,121,125,111,98,209,100,115,93,107,143,93,135,32,102,116,92,32,103,131,115,106,207,146,10,134,132,134,132,115,32,102,144,93,130,116,147,102,207,96,136,115,32,125,136,106,207,92,205,205,205,10,91,91,137,137,137,137,45,33,10,111,147,111,136,106,207,63,10,162,175,208,151,106,207,205,205,205,133,93,126,112,109,207,125,32,120,93,130,100,136,109,207,36,99,146,10,91,110,109,207,147,102,207,136,125,136,32,103,131,110,102,128,93,146,10,102,144,93,102,142,115,32,110,93,102,207,144,93,109,207,103,33,32,134,106,102,96,129,209,159,195,188,204,169,207,98,136,112,147,102,144,93,117,136,135,32,134,106,102,121,103,146,10,159,195,188,204,169,207,98,136,147,165,151,165,195,169,188,178,207,190,128,130,147,103,116,207,129,102,92,209,107,97,143,93,115,106,117,207,135,32,177,208,191,163,207,195,169,102,121,103,146,36,124,109,207,110,93,33,33,10,103,93,102,207,96,136,100,207,147,159,195,188,204,169,207,116,147,107,97,143,93,127,97,115,209,34,162,165,45,177,208,192,176,207,168,207,195,162,100,207,93,34,112,32,115,145,106,146,10,52,51,55,112,107,124,205,205,205,10,96,132,129,116,32,134,106,102,112,147,117,110,207,92,102,100,207,110,135,32,101,104,106,146,209,105,115,147,111,130,127,97,112,32,108,92,109,116,147,116,111,102,106,98,111,92,146,209,105,132,116,147,134,106,102,115,32,105,93,105,207,93,135,32,116,131,96,112,32,100,94,131,209,36,105,133,102,92,125,115,32,106,207,145,106,146,10,53,49,57,112,107,124,205,205,205,10,96,132,129,116,147,134,132,134,132,32,112,136,99,207,136,135,147,120,133,120,207,105,93,110,32,102,109,92,131,33,209,107,97,143,93,112,32,99,92,100,98,103,131,106,124,147,111,112,96,32,102,111,98,109,116,205,205,205,10,54,56,51,112,107,124,205,205,205,10,97,144,93,147,165,151,165,195,159,195,176,208,202,45,165,45,112,147,34,118,207,136,102,115,99,136,97,143,93,34,209,112,108,92,109,115,32,102,144,93,96,92,135,102,106,146,134,106,102,116,147,106,106,207,32,106,207,132,96,96,207,209,105,132,112,32,97,144,93,122,135,125,108,32,100,110,135,147,92,115,131,116,207,96,130,106,207,146,10,54,57,48,112,107,124,205,205,205,10,180,162,165,45,177,207,191,151,195,106,207,33,105,132,96,207,32,126,108,129,112,32,124,92,132,92,102,109,209,92,131,115,106,207,205,205,205,91,103,147,105,132,96,207,32,110,207,100,112,91,131,115,96,147,209,122,108,99,128,93,110,32,36,125,93,146,10,55,50,48,112,107,124,205,205,205,10,180,162,165,45,177,207,191,151,195,135,32,122,108,99,131,115,116,32,118,96,115,93,106,207,146,209,91,132,116,147,93,107,143,93,115,32,107,143,93,102,136,112,147,105,111,94,108,99,129,132,109,92,131,146,209,105,115,93,94,147,103,119,207,109,115,32,108,93,102,136,96,92,104,136,116,147,97,129,132,109,209,102,121,145,109,92,131,146,10,56,51,48,112,107,124,205,205,205,10,134,96,145,106,33,33,32,128,117,207,115,177,207,191,151,195,96,207,32,100,115,134,98,104,92,135,209,102,116,92,102,109,92,131,136,106,207,146,209,180,162,165,45,177,207,191,151,195,116,147,103,100,102,115,91,92,106,207,32,114,123,145,109,92,131,115,106,207,146,10,128,117,207,115,177,207,191,151,195,135,147,116,96,92,103,132,116,207,147,209,180,162,165,45,177,207,191,151,195,96,207,147,121,106,32,93,100,207,97,106,207,103,146,209,150,169,181,204,157,166,201,45,161,207,135,32,100,115,134,98,104,92,115,32,34,96,98,34,112,36,99,116,207,209,108,93,102,136,96,92,104,136,135,32,117,129,98,100,110,96,207,32,109,207,97,131,115,106,207,146,10,57,48,48,112,107,124,205,205,205,10,134,106,102,116,147,177,207,191,151,195,115,32,132,136,101,116,136,115,93,135,32,116,96,92,102,147,209,100,115,134,98,104,92,135,32,116,124,108,101,104,131,32,107,96,129,115,91,131,32,116,207,98,106,207,136,135,209,98,122,106,109,106,146,10,91,110,116,147,99,92,96,98,135,32,102,207,145,100,93,103,131,106,124,115,147,127,93,97,96,207,209,92,131,106,207,99,106,207,46,46,46,10,49,50,48,48,112,107,124,205,205,205,10,134,106,102,116,32,100,136,126,147,102,207,145,100,93,103,131,100,110,135,32,99,145,102,136,102,106,146,209,103,119,207,109,96,207,32,116,96,92,101,132,131,32,121,94,112,32,175,195,155,207,45,112,91,131,209,93,107,143,93,104,136,112,147,115,129,111,99,132,116,207,205,205,205,146,10,100,132,96,207,147,134,106,102,115,32,101,92,100,207,115,183,204,163,45,161,207,106,207,146,209,96,122,128,147,110,207,93,96,32,134,106,102,135,32,121,125,145,109,98,132,146,10,177,197,189,204,177,208,32,175,193,45,169,207,32,157,188,45,157,10,49,50,10,49,50,10,49,50,10,49,50,10,49,50,10,49,50,10,49,50,10,49,50,10,49,50,10,49,50,10,49,50,10,49,50,10,49,50,10,49,50,10,49,50,10,49,50,10,49,50,10,153,195,169,189,45,135,32,96,98,112,136,32,102,121,102,106,146,10,100,115,102,124,92,135,32,93,99,131,125,115,116,147,209,34,133,93,110,207,93,32,97,144,96,102,144,93,34,135,32,105,93,112,143,93,104,128,146,209,105,93,112,143,93,103,131,32,100,110,109,207,147,209,100,115,102,100,207,110,135,32,93,99,36,93,125,115,110,32,122,111,103,146,10,102,124,92,32,106,145,104,92,109,207,103,146,10,120,93,102,143,93,10,49,48,48,10,51,48,48,10,52,48,48,10,53,48,48,10,54,48,48,10,157,191,161,207,204,169,10]),G=Uint16Array.from([100,106,112,132,144,150,158,164,174,180,188,196,204,212,224,230,236,246,252,258,268,294,304,310,318,324,332,338,346,352,358,364,374,380,390,396,408,414,420,428,438,446,454,460,468,65535,65535,65535,65535,65535,0,1,115,115,1,80,195,8,215,125,120,125,135,90,225,135,1365,4,215,105,235,165,2085,1,140,2225,2,205,115,2545,1,275,2820,3,275,140,185,3420,1,150,3570,2,175,130,3875,2,105,155,4135,2,105,235,4475,2,105,195,4775,4,100,170,120,220,5385,1,180,5565,1,70,5635,3,80,280,165,6160,1,65,6225,1,130,6355,3,260,215,175,7005,11,170,190,295,90,245,170,260,190,220,185,215,9235,3,195,230,60,9720,1,105,9825,2,190,175,10190,1,80,10270,2,65,55,10390,1,285,10675,2,65,60,10800,1,165,10965,1,0,10965,1,0,10965,3,90,185,115,11355,1,95,11450,3,220,100,240,12010,1,185,12195,4,385,315,95,340,13330,1,175,13505,1,160,13665,2,105,60,13830,3,0,250,240,14320,2,110,160,14590,2,100,230,14920,1,165,15085,2,120,135,15340,2,170,240]),F=Uint32Array.from([0,197,428,665,899,1108,1339,1575,1811,2026,2248,2478,2715,2944,3385,3829,4065,4290,4525,4962,5395,5818,6049,6282,6540,6754,6956,7124,7288,7428,7583,7744,7935,8146,8348,8551,8754,8939,9111,9267,9420,9560,9683,9826,10041,10177,10334,10509,10726,10948,11175,11402,11785,11983,12194,12606,13043,13465,13882,14266,14655,15060,15459,15652,15861,16281,16703,17114,17522,17914,18301,18672,18906,19138,19366,19592,20011,20416,20813,21206,21581,21975,22175,22612,22988,23383,23780,24137,24478,24824,25018,25226,25451,25662,25861,26070,26442,26833,27230,27587,27920,28251,28579,28893,29209,29516,29850,30201,30570,30971,31371,31584,31781,31979,32200,32415,32831,33245,33649,33860,34092,34287,34490,34873,35218,35559,35928,36135,36333,36527,36721,36895,37073,37257,37433,37605,37775,38103,38408,38555,38692,38811,38934,39071,39259,39624,40010,40405,40801,40992,41183,41348,41496,41661,41966,42249,42547,42837,43117,43263,43419,43576,43877,44190,44543,44922,45137,45345,45558,45775,46006,46237,46486,46721,46916,47105,47282,47444,47605,47777,48127,48489,48851,49210,49544,49885,50210,50376,50524,50671,50819,50996,51196,51409,51796,52160,52534,52903,53082,53442,53640,53874,54210,54531,54833,55132,55422,55603,55778,55965,56156,56470,56657,56889,57150,57409,57641,57873,58243,58597,58905,59186,59464,59716,59975,60242,60511,60783,61039,61273,61396,61514,61721,61919,62129,62351,62562,62842,63153,63495,63698,63925,64158,64419,64587,64812,64914,65115,65222,65323,65419,65531,65656,65793,65949,66125,66336,66554,66941,67324,67707,67909,68116,68327,68547,68754,68963,69178,69394,69622,70058,70463,70874,71282,71700,72122,72544,72947,73341,73749,74179,74600,75021,75435,75853,76263,76677,77113,77512,77887,78238,78565,78864,79148,79301,79465,79633,79937,80221,80489,80896,81115,81327,81537,81747,82038,82326,82479,82631,82784,82935,83151,83368,83584,83799,84015,84231,84449,84659,84873,85085,85309,85534,85765,86001,86231,86652,86973,87160,87393,87661,87922,88162,88427,88700,88963,89217,89472,89727,89983,90226,90429,90641,90858,91040,91192,91321,91434,91652,91876,92094,92488,92898,93271,93463,93681,94102,94339,94568,94793,95023,95249,95473,95676,95913,96145,96368,96594,97010,97430,97839,98052,98265,98478,98691,98899,99101,99314,99715,100099,100484,100865,101244,101629,102026,102413,102815,103240,103658,104061,104442,104841,105236,105449,105664,105897,106103,106313,106523,106746,106944,107160,107390,107511,107892,108237,108562,108874,109184,109464,109731,110040,110275,110492,110705,110885,111073,111271,111417,111519,111633,111949,112289,112660,113065,113287,113523,113895,114220,114466,114649,114766,114866,114956,115046,115136,115555,115796,116020,116246,116486,116716,116947,117175,117412,117852,118196,118528,118852,119202,119533,119799,119967,120128,120317,120579,120842,121118,121416,121688,121955,122157,122290,122397,122484,122555,122832,123072,123255,123599,123906,124165,124353,124455,124677,124840,124954,125044,125134,125224,125314,125413,125540,125703,125878,126081,126296,126512,126728,127005,127168,127344,127539,127955,128445,128707,128951,129180,129639,130059,130429,130731,131005,131486,131924,132369,132801,133278,133734,133956,134279,134413,134539,134669,134783,134873,134987,135123,135257,135391,135545,135715,135908,136094,136280,136479,136658,136864,137072,137261,137451,137645,137755,137885,138039,138212,138398,138590,138780,138979,139183,139367,139550,139792,140065,140365,140566,140757,140956,141323,141731,142187,142405,142821,143222,143630,144039,144475,144931,178647,179099,179543,180002,180461,180909,181356,181809,182264,182708,183151,183594,184039,184496,184964,185432,185890,186344,186799,187247,187713,188180,188676,189193,189719,190236,190767,191303,191820,192302,192767,193237,193703,194160,194599,195027,195443,195880,196317,196781,197274,197767,198237,198707,199176,199647,200117,200590,200595,201064,201533,202002,202471,202940,203409,203870,204322,204769,205204,205614,205983,206309,206602,206901,207228,207719,208221,208692,209132,209561,209960,210357,210708,210990,211259,211455,211605,211792,211987,212130,212257,212367,212455,212533,213038,213487,213827,214190,214486,214751,215015,215249,215399,215549,215675,145190,145315,145446,145581,145718,145978,146238,146376,146649,146927,147211,147650,147885,148117,148543,148965,149387,149811,150221,150630,151049,151505,151975,152447,152707,153063,153306,153542,153655,153785,153939,154112,154305,154524,154749,154972,155196,155412,155689,155863,156154,156320,156488,156664,156845,157015,157183,157351,157522,157821,157986,158146,158324,158694,159110,159305,159496,159722,159948,160172,160398,160624,160849,161052,161259,161461,161682,162094,162493,162901,163123,163334,163584,163852,164003,164301,164583,164862,165030,165234,165437,165629,165800,165961,166114,166253,166388,166517,166647,166784,166939,167122,178647,179122,179585,180034,180485,180938,181373,181829,182295,182770,183218,183656,184096,184522,184933,185376,185844,186070,186306,186747,186969,187182,187399,187635,187867,188102,188561,189014,189466,189918,190391,190806,191230,191655,192085,192565,193045,193509,193746,193985,194438,194899,195361,195843,196330,196814,197323,197845,198367,198857,199347,199815,200283,200751,201219,201687,202171,202631,203099,203567,204035,204521,205004,205484,205947,206427,206907,207405,207903,208401,208899,209363,209785,210206,210623,211075,211524,211973,212440,212892,213340,213825,214292,214536,214767,214998,215246,215717,216184,216682,217180,217678,218176,218674,219172,219404,219826,220285,220730,221168,221572,221971,222320,222615,222818,223018,223172,223275,223352,223409,223445,223463,223918,224359,224778,225140,225422,225635,225850,226098,226390,226727,227099,227475,227822,228153,228436,228568,228616,228623,229052,229452,229950,230404,230847,231346,231831,232318,232789,233260,233731,234203,234672,235131,235580,236035,236428,236790,237141,237456,237771,238089,238419,238747,239062,239377,167280,178647,179117,179588,180058,180519,180981,181442,181891,182358,182829,183295,183769,184230,184691,185153,185615,186089,186564,187038,187508,187982,188211,188422,188800,189142,189448,189732,190015,190298,190581,190876,191166,191376,191720,192161,192553,192877,193176,193456,193930,194171,194412,194652,194891,195130,195371,195611,195852,196326,196793,197256,197703,198134,198396,198859,199333,199770,200160,200502,200820,201114,201277,201643,202069,202605,203168,203459,203730,204003,204490,204968,205422,205822,206208,206580,206944,207294,207671,208043,208442,208892,209366,209840,210314,210788,211262,211736,212211,212685,213159,213633,214107,214581,215056,215531,215766,216219,216662,217104,217539,217973,218309,218565,218707,218918,219200,219536,219947,220404,220644,220885,221355,221817,222247,222630,222930,223104,223257,223357,223446,223560,223734,223944,224166,224400,224658,224952,225306,225708,226147,226605,227076,227485,227839,228162,228457,228664,228827,228963,229101,229262,229460,229694,229964,230270,230359,230449,230539,230629,230718,230808,230898,230988,231124,231262,231398,231536,231671,231785,231887,231986,232085,232184,232265,232303,232778,233036,233325,233821,178647,178891,179136,179580,180024,180486,180728,180969,181212,181456,181698,182152,182594,183039,183498,183963,184209,184451,184909,185358,185807,186261,186726,186969,187214,187449,187672,187867,188029,188170,188377,188564,188630,188720,188784,188857,188948,189075,189192,189294,189369,189441,189507,189582,189673,189801,189919,190021,190098,190172,190307,190433,190567,190662,190834,191034,191151,191279,191451,191555,191627,191699,191770,191840,191912,192050,192281,192469,192617,192690,192797,192953,193157,193290,193438,193585,193745,193870,193977,194076,194188,194309,194454,194617,194762,194914,195052,195196,195341,195592,195816,195937,196052,196168,196282,196390,196527,196672,196794,196910,197039,197242,197409,197490,197561,197624,197690,197826,197953,198008,198145,198288,198407,198480,198548,198673,198906,199152,199284,199401,199516,199628,199736,199872,200015,200136,200251,200725,201166,201595,202002,202399,202759,203041,203202,203303,203394,203454,203931,204415,204864,205270,205558,205706,205780,205856,205940,206041,206155,206287,206425,206529,206543,206999,207460,207707,207955,208204,208447,208684,208915,209145,209369,209596,209837,210332,210795,211028,211250,211455,211648,211826,211999,212158,212477,212795,213104,213412,213714,214012,214306,214612,214784,215125,215441,167285,167996,168688,169314,169931,170223,170486,170724,170836,171242,171664,172090,172516,172958,173432,173692,174155,174545,174974,175414,175859,176268,176675,177118,177557,177994,178118,178247,178382,178514]),H=Uint8Array.from([255,255,255,255,255,0,255,0,255,255,255,255,255,255,255,255,0,0,0,0,1,1,6,6,253,0,255,252,0,255,253,0,254,254,255,255,255,255,0,255,0,0,255,0,255,0,0,255,0,255,253,254,250,253,252,253,7,9,7,0,4,1,2,5,1,4,254,2,4,6,3,2,2,0,255,255,255,253,255,251,254,252,253,254,253,253,255,255,254,1,255,0,0,0,1,0,1,0,1,0,1,0,0,0,0,2,0,255,0,255,1,2,0,1,0,2,0,0,4,0,1,3,0,2,0,0,1,255,0,0,255,254,255,253,254,255,251,252,249,248,247,245,245,245,242,243,243,243,246,245,247,253,250,252,5,0,2,7,6,4,6,8,2,4,0,0,254,248,253,251,244,250,1,248,254,10,2,4,14,13,7,14,14,8,6,7,2,254,252,249,243,239,242,238,235,237,236,231,230,233,227,222,223,223,217,234,241,218,0,2,240,12,12,12,2,21,12,1,8,251,1,238,241,243,233,231,232,243,231,241,252,250,255,2,13,7,15,24,14,19,20,14,9,11,2,1,0,253,0,255,0,1,3,255,1,0,252,249,248,242,236,238,224,216,218,214,202,210,214,237,246,231,26,29,15,35,49,38,16,34,15,255,248,237,238,221,223,228,237,237,244,13,11,19,30,36,31,28,36,23,16,12,8,254,252,251,251,254,0,9,13,19,23,27,24,21,15,7,0,247,240,232,228,223,214,214,212,210,221,211,225,245,25,9,3,75,33,24,38,32,11,240,255,226,233,220,216,245,240,248,5,31,24,25,43,28,26,14,5,251,243,250,241,246,4,8,9,27,33,28,33,33,27,21,15,7,4,253,246,245,242,237,239,241,245,244,241,245,233,233,238,215,203,223,246,9,239,11,59,26,24,30,36,11,246,249,234,240,221,224,249,252,0,7,33,29,25,29,20,17,0,247,242,250,249,254,12,17,25,31,36,29,29,23,14,8,3,0,253,252,250,250,248,247,244,242,245,245,240,238,229,220,228,211,195,207,251,38,239,22,70,35,32,10,20,252,236,223,203,243,231,225,0,21,29,22,40,32,22,18,244,244,235,233,235,248,3,15,37,34,42,47,36,17,16,5,248,249,249,250,254,1,0,3,0,247,245,248,237,229,231,223,208,215,204,200,199,238,85,11,244,74,58,19,236,0,243,220,222,189,236,15,243,1,36,58,24,21,25,253,0,225,215,225,247,245,253,34,43,48,41,42,33,23,254,245,253,249,247,255,13,10,11,1,253,247,234,232,232,227,221,223,210,207,212,201,186,27,79,230,21,82,38,2,243,252,225,227,214,190,0,16,242,15,47,49,16,23,10,243,251,217,214,234,252,251,12,41,44,49,41,35,26,14,248,245,252,250,253,7,17,14,15,5,254,244,230,217,218,221,210,211,215,204,202,226,217,44,69,234,37,67,25,236,234,253,213,221,221,213,13,17,0,25,49,43,0,16,0,236,237,218,227,240,8,8,24,44,47,41,33,26,12,5,249,248,252,1,4,11,16,13,8,0,248,234,226,219,220,212,216,225,207,205,226,202,223,95,17,220,76,60,0,230,3,243,210,234,204,228,28,249,253,36,55,17,4,29,246,246,234,220,235,248,254,2,35,41,39,40,41,24,14,4,248,253,253,251,1,16,11,8,6,1,248,234,223,225,224,209,209,215,214,196,204,199,22,70,225,27,90,38,252,248,13,229,212,213,203,254,252,231,19,47,42,11,34,26,255,249,223,233,238,235,239,11,30,30,38,45,46,31,16,7,4,252,243,249,3,5,1,4,6,1,242,230,233,233,218,212,223,212,207,212,213,180,10,84,211,16,103,35,254,5,22,228,224,218,196,0,241,216,14,46,27,7,51,30,6,6,236,243,242,230,232,9,13,15,37,47,40,36,30,14,11,0,244,250,0,251,252,1,255,252,240,241,243,231,220,221,224,213,200,200,200,192,46,29,209,77,84,12,4,37,11,218,232,209,220,244,208,234,26,25,4,36,56,15,22,11,255,252,238,230,243,0,248,17,36,31,35,43,30,22,17,2,0,0,250,248,251,244,247,241,234,241,233,220,232,236,213,215,222,202,174,24,26,186,44,77,2,7,50,23,240,0,230,234,249,207,229,14,254,239,31,40,3,29,27,10,11,2,249,1,255,245,12,16,7,20,30,19,21,22,17,16,8,5,6,252,242,247,238,227,229,230,220,221,223,224,232,212,198,205,35,249,185,65,54,238,10,58,21,234,6,251,0,232,217,7,0,228,251,40,6,250,35,24,8,10,14,12,7,250,5,16,254,2,20,14,8,22,22,16,15,16,16,7,252,254,250,233,232,233,221,218,226,223,217,222,209,207,203,0,6,206,37,45,255,18,44,21,252,16,252,255,244,230,255,251,235,252,21,0,0,28,16,9,20,15,9,10,3,4,4,0,5,8,6,12,17,15,19,21,18,17,13,7,3,252,244,240,232,224,222,219,214,212,212,206,212,195,244,10,202,30,45,243,23,50,15,0,32,4,0,0,242,3,246,236,0,8,241,3,21,254,9,24,10,7,19,11,5,6,8,7,2,7,13,8,10,21,17,15,21,17,10,10,3,253,247,240,234,228,218,219,215,203,206,210,194,218,6,201,255,43,234,17,44,17,10,38,14,11,15,252,13,252,241,5,254,235,2,6,239,3,13,1,4,15,15,7,13,17,10,6,14,11,6,14,16,11,15,19,12,11,12,6,255,251,248,239,231,226,223,214,213,207,205,199,222,238,195,4,6,226,21,20,8,19,33,17,23,18,17,20,254,12,11,247,255,6,243,249,2,250,254,2,2,5,4,9,10,6,13,12,8,15,15,11,18,18,14,16,13,10,9,4,255,251,248,239,233,228,228,216,217,213,209,205,231,222,206,14,231,240,21,0,11,21,21,20,25,15,29,12,8,24,2,2,12,253,251,3,250,253,0,254,0,0,3,6,2,9,9,6,14,12,10,17,16,14,18,13,11,12,8,2,255,254,248,238,239,233,227,225,222,217,216,211,225,225,209,1,231,232,14,249,6,14,16,15,21,17,26,14,13,26,5,10,14,0,0,5,250,255,0,251,254,255,0,0,2,4,4,4,10,8,9,15,12,12,16,11,9,12,7,2,0,255,249,243,241,236,233,229,225,223,220,217,221,228,219,238,243,232,255,255,0,8,14,11,14,21,15,17,15,18,13,10,12,7,3,3,3,255,0,0,254,255,1,0,0,3,2,4,7,8,9,11,12,13,13,12,12,11,9,6,3,2,252,248,248,244,238,235,235,231,228,226,225,228,232,232,238,245,245,249,0,4,6,8,12,14,14,14,16,15,14,13,12,10,8,6,5,4,3,1,0,1,2,1,2,4,5,6,7,9,10,10,12,12,10,11,12,9,7,7,7,1,0,0,252,249,246,244,242,238,235,234,233,230,230,235,237,236,239,242,245,249,254,0,4,8,9,11,12,12,12,12,12,10,8,7,5,4,3,2,1,1,1,1,2,3,5,7,9,10,13,16,16,16,18,18,15,14,14,13,7,6,6,1,254,252,250,246,243,240,239,236,233,234,236,239,240,243,246,248,252,0,3,4,7,9,9,9,9,10,9,8,7,5,4,3,2,1,0,254,254,254,253,253,252,253,254,253,254,255,0,0,255,0,0,0,0,0,0,253,252,252,248,246,244,241,238,236,234,232,229,226,229,231,232,234,238,241,244,250,253,0,3,4,6,7,8,9,10,9,8,8,7,6,5,5,4,2,1,1,1,0,0,0,0,1,0,1,2,2,2,1,2,2,0,1,0,0,253,252,251,247,245,242,240,236,233,232,229,226,224,228,228,229,233,236,240,244,250,253,0,3,4,5,8,8,8,10,9,8,8,7,7,6,5,5,4,1,1,2,1,0,1,1,0,1,2,2,2,3,2,2,2,0,0,0,0,253,252,252,248,245,243,241,237,235,233,231,228,227,231,231,231,236,239,242,247,251,254,1,4,6,7,9,10,10,11,11,10,9,8,8,7,6,6,5,3,3,3,2,1,1,1,1,2,3,3,3,3,3,3,3,2,2,2,0,255,255,253,250,248,246,244,241,239,237,235,233,231,232,232,233,236,238,242,245,249,253,0,2,6,8,9,10,12,12,12,11,10,9,9,8,7,6,6,4,3,3,3,2,2,2,2,3,3,3,4,4,5,5,5,5,4,3,2,2,0,255,254,251,250,247,245,243,241,239,238,236,234,234,233,235,237,238,240,243,248,251,254,0,4,6,7,9,10,11,11,10,10,9,8,7,6,6,5,3,2,2,1,1,0,0,0,0,0,0,0,1,1,1,1,1,0,0,0,0,254,253,252,250,249,247,246,244,242,241,240,239,238,237,236,236,238,238,240,242,244,246,250,254,0,3,6,8,10,11,12,12,12,12,12,10,10,10,10,8,8,7,6,6,6,6,5,5,5,5,5,5,6,6,6,6,6,6,5,5,4,3,2,0,0,254,253,251,249,248,247,245,244,243,241,240,239,238,238,239,240,242,244,246,250,254,0,2,5,6,8,10,11,11,11,11,11,10,8,9,9,8,7,7,6,6,6,6,6,6,5,6,6,6,7,6,7,7,7,7,6,5,5,4,3,2,1,0,255,253,252,251,250,249,248,247,246,246,245,245,245,244,245,246,246,247,249,251,252,253,255,1,2,4,5,7,8,8,9,9,9,9,8,7,7,8,8,7,7,7,7,7,6,6,6,6,6,6,6,5,5,5,5,5,4,4,4,3,3,3,2,2,1,0,0,255,253,252,251,251,250,249,248,248,247,246,246,245,244,244,244,243,242,242,243,244,243,244,245,246,248,250,250,252,253,254,255,0,1,3,5,7,8,11,12,13,15,15,16,16,16,16,14,13,12,10,9,8,7,7,5,5,5,3,1,0,255,252,252,249,250,249,249,251,248,251,249,251,249,252,249,252,252,249,252,248,254,246,249,246,248,247,245,247,245,248,245,248,245,249,246,248,248,246,250,247,250,248,249,250,248,248,248,249,248,247,248,247,248,248,247,249,250,251,251,253,253,255,255,0,3,5,4,5,7,9,10,9,10,11,10,10,11,10,10,9,10,9,7,6,5,3,3,2,0,1,0,0,0,0,255,255,0,0,0,0,1,1,3,2,4,5,5,5,5,6,5,4,4,3,3,0,0,255,254,254,253,253,252,252,251,252,251,251,251,251,251,250,250,249,251,249,249,249,250,250,248,250,250,250,249,250,249,250,250,250,249,248,249,247,249,249,249,248,249,248,249,248,249,248,248,248,248,249,246,248,247,247,248,247,249,249,249,250,251,251,250,252,252,253,252,252,254,252,254,253,255,254,255,254,255,255,255,255,255,255,0,255,253,255,0,255,254,255,255,0,254,255,0,255,0,255,0,0,0,0,0,0,0,0,0,0,0,255,0,0,255,0,0,1,1,0,3,1,2,0,2,1,0,1,1,2,0,1,1,2,0,0,1,1,1,0,1,0,1,0,0,0,0,0,255,0,255,0,255,0,0,0,0,0,0,254,1,255,0,255,0,0,255,0,254,0,255,255,254,255,255,255,255,254,0,255,0,254,0,255,254,255,254,1,255,255,0,0,255,255,0,0,0,0,0,255,0,0,255,255,0,0,0,255,255,0,255,254,0,0,0,254,254,255,255,0,254,254,255,255,0,255,254,0,255,254,255,254,255,255,253,255,254,254,254,253,254,253,254,254,253,253,255,253,254,253,255,0,254,255,254,0,253,255,255,0,0,253,0,254,0,255,255,255,255,0,254,0,255,0,0,0,0,0,0,0,1,255,255,0,0,0,255,0,0,0,0,0,0,255,0,254,0,1,0,0,255,1,0,0,0,1,0,0,0,255,0,0,0,0,0,0,255,0,255,0,0,255,0,255,0,255,255,255,254,254,255,254,255,0,254,254,254,254,255,255,254,0,255,0,255,255,255,255,255,255,255,255,255,254,253,255,255,254,255,254,255,254,254,255,255,254,254,254,255,255,254,255,255,0,254,0,255,0,1,255,0,0,0,0,0,0,0,0,255,255,255,255,254,255,254,255,255,253,255,255,253,255,254,255,0,254,255,254,255,254,254,0,255,255,0,255,255,0,255,0,255,255,255,255,254,255,255,255,254,255,255,255,255,254,0,254,254,254,255,254,254,254,254,253,253,254,253,253,252,254,253,252,252,253,251,251,251,251,253,252,251,252,252,252,252,251,255,252,253,252,252,253,252,253,251,253,253,252,251,252,253,252,251,253,251,251,252,251,253,252,252,252,251,251,253,253,252,252,251,253,252,253,252,253,254,253,253,252,254,252,253,252,253,254,252,253,254,254,252,253,254,254,254,254,254,254,254,254,254,255,254,255,254,254,254,254,0,255,255,255,255,255,254,255,254,0,255,255,255,254,254,255,254,255,0,254,0,254,255,0,254,0,0,255,0,255,0,0,1,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,255,1,0,0,255,0,0,0,0,0,0,0,0,255,0,0,0,0,255,1,0,0,0,0,0,0,0,255,0,0,0,0,0,0,0,0,255,0,1,0,0,1,0,0,0,0,0,0,1,0,0,255,2,1,0,1,0,0,0,0,0,1,0,0,0,255,0,255,0,0,0,255,0,255,0,0,0,0,255,0,0,0,0,255,255,0,255,0,0,0,0,254,0,0,0,255,0,0,0,254,255,0,255,0,254,0,0,0,0,0,0,255,255,0,0,0,0,1,0,0,0,0,0,254,2,0,0,0,254,1,2,0,4,5,2,3,2,4,2,0,255,2,0,254,0,0,0,0,0,1,2,0,0,1,1,1,0,0,0,0,255,255,0,0,0,255,255,0,0,255,0,0,0,0,255,255,255,255,255,0,255,255,255,253,253,254,254,254,254,254,254,254,253,253,254,255,254,253,253,253,253,251,251,251,249,248,247,247,247,246,245,244,243,241,239,237,239,248,252,252,0,4,8,10,9,8,11,11,6,3,3,4,2,1,2,3,6,6,5,8,10,10,10,10,11,11,8,4,3,2,0,253,251,251,250,249,247,246,244,241,238,233,227,221,215,213,239,251,241,253,11,17,21,17,9,16,18,2,250,248,244,241,237,232,238,249,251,251,3,12,17,19,17,19,24,20,12,10,8,4,0,251,252,0,0,0,4,9,12,12,9,8,7,1,251,246,242,238,232,226,221,220,214,210,204,235,15,255,5,28,35,38,30,11,10,18,253,231,229,230,235,239,233,240,9,23,18,21,31,33,31,16,3,4,1,242,233,243,252,1,5,11,24,32,27,21,23,22,14,5,0,1,1,250,246,249,251,249,247,247,249,247,240,234,231,222,217,206,210,10,6,242,19,30,34,34,16,2,13,10,229,223,238,235,240,243,241,7,30,20,11,27,27,16,7,246,242,250,242,225,236,252,1,13,18,28,42,35,20,20,15,4,252,246,249,0,255,252,5,11,9,4,0,0,0,246,237,235,231,224,218,214,212,214,214,9,32,1,30,45,34,30,8,245,244,248,221,206,237,242,248,8,7,23,41,32,9,12,13,246,238,228,222,239,244,238,250,20,22,20,23,20,27,21,3,253,4,1,251,251,1,13,16,9,11,20,15,5,0,255,252,245,235,237,242,238,234,235,238,237,228,218,220,215,8,40,247,13,40,22,17,0,241,243,253,232,209,249,5,252,11,9,19,33,20,251,251,8,241,231,237,234,252,2,250,1,23,24,5,8,3,1,7,248,249,9,10,4,11,14,18,22,9,4,12,6,250,252,253,253,255,252,251,0,253,244,244,241,239,236,232,226,225,218,209,212,0,44,1,8,51,31,24,3,232,240,247,228,204,235,10,0,12,17,20,40,23,250,244,0,242,221,230,234,251,10,0,6,28,32,10,1,1,250,247,248,246,254,14,12,13,23,23,15,13,7,1,2,253,250,1,3,0,3,3,1,0,251,244,244,241,233,234,236,234,233,228,227,225,220,219,18,47,248,18,47,15,14,248,224,237,245,228,211,253,20,3,22,20,18,33,8,237,236,249,234,221,240,245,5,19,6,13,29,22,253,246,249,239,240,253,250,3,24,19,16,24,18,6,5,253,251,0,253,253,6,7,3,5,1,255,255,247,242,245,245,239,238,239,241,242,236,233,234,230,220,215,234,44,21,239,41,35,12,8,232,232,247,239,216,222,16,13,1,23,15,27,25,247,235,246,250,225,226,249,253,13,13,3,22,27,8,243,248,249,241,254,250,255,21,22,11,19,21,9,4,254,251,2,1,251,5,12,5,3,3,0,255,252,243,244,249,243,241,241,243,243,239,237,239,238,231,226,224,216,251,51,0,249,52,25,5,1,233,236,245,235,215,237,26,4,4,28,17,24,14,243,238,249,244,220,235,1,254,12,11,9,23,20,255,242,253,249,251,253,250,11,22,12,10,21,15,6,2,0,2,4,253,255,10,7,1,1,2,0,253,247,246,249,247,240,242,244,242,241,239,239,243,238,229,232,231,221,229,37,31,236,34,42,3,8,244,230,242,242,224,222,12,19,251,22,23,16,20,253,238,244,250,230,224,255,0,2,15,10,18,23,10,247,249,3,0,247,252,10,15,12,9,15,19,12,2,2,6,2,253,255,5,5,0,255,2,3,254,250,251,251,247,242,244,246,243,238,239,243,244,237,237,238,237,235,231,231,8,41,252,0,42,16,0,251,240,245,246,238,228,250,23,0,1,24,17,14,3,248,247,251,244,227,244,6,253,3,9,14,16,10,0,253,20,2,242,3,11,2,1,8,9,18,9,2,11,15,255,253,3,1,254,252,253,2,5,251,253,1,252,243,243,243,242,239,235,242,245,240,237,240,242,236,232,237,239,17,31,242,13,40,6,253,250,247,246,239,236,233,2,16,246,8,27,15,8,0,0,252,249,239,231,253,0,245,2,11,16,10,9,5,6,22,253,250,10,6,249,1,9,6,12,8,11,17,12,0,5,6,254,250,253,254,255,254,252,1,0,249,247,251,244,240,238,235,242,239,231,239,245,234,233,244,241,255,34,3,251,39,19,248,254,253,245,238,240,236,244,12,253,252,26,19,6,6,7,0,248,246,237,243,255,241,249,10,11,7,9,15,7,20,8,252,11,7,248,254,9,0,5,9,9,14,15,4,6,11,0,251,0,254,249,253,252,255,0,250,250,255,250,241,244,244,239,240,238,238,240,238,234,236,238,233,240,27,18,237,32,36,254,2,2,251,244,238,234,236,2,253,238,20,23,5,12,16,11,0,252,244,242,252,237,237,4,2,0,6,18,14,17,19,8,14,9,251,253,4,251,252,6,7,11,12,10,13,14,2,1,4,254,249,252,253,252,253,250,252,254,249,247,248,245,247,240,237,243,237,230,233,239,231,233,237,254,30,0,254,46,22,254,5,5,254,235,235,239,242,253,238,253,27,9,5,19,22,9,253,0,251,247,242,232,250,253,244,253,9,14,4,20,26,14,12,12,6,0,254,248,0,0,254,4,12,10,10,14,11,9,4,0,255,252,246,248,250,246,246,249,249,248,246,247,249,243,243,244,241,239,239,237,236,239,235,237,252,18,255,253,38,17,254,14,10,254,246,244,245,243,245,238,251,12,252,1,20,15,7,6,11,4,253,250,245,252,245,237,252,2,0,2,17,18,15,16,17,14,7,2,2,1,251,253,2,2,1,5,9,10,7,6,8,5,0,254,254,249,245,244,246,245,242,245,248,248,245,249,248,246,243,243,242,237,234,232,236,236,6,0,239,31,24,252,20,23,6,255,254,255,243,242,238,240,0,240,246,13,5,3,13,18,10,5,8,0,0,249,240,251,245,238,248,255,10,3,7,28,19,9,17,20,4,3,3,0,252,250,254,0,254,255,9,6,2,7,9,3,1,0,253,249,244,244,243,240,239,241,242,243,245,247,248,247,248,247,245,241,241,239,236,5,251,231,24,13,243,20,18,3,5,7,5,253,251,248,248,254,235,248,5,244,252,8,4,2,7,13,4,5,4,0,3,247,249,255,248,245,9,1,250,20,11,5,17,17,7,13,8,5,7,254,0,2,252,251,3,252,254,4,0,0,3,1,0,255,251,254,249,244,247,246,240,244,246,242,244,247,246,246,248,245,247,245,243,244,249,2,247,251,18,255,254,18,6,2,7,5,4,254,254,255,252,247,246,0,249,244,2,0,253,3,6,5,3,6,5,2,1,255,1,251,251,6,250,252,10,1,0,12,8,4,10,8,7,6,3,5,2,254,1,0,250,0,0,253,255,0,255,0,0,254,255,252,252,252,248,247,250,246,244,249,247,244,250,248,245,250,247,244,247,244,243,245,244,2,247,247,20,252,255,22,3,4,11,5,5,255,0,0,249,248,249,254,244,246,2,248,251,3,0,1,2,6,5,1,5,4,2,253,2,7,246,2,9,250,1,10,0,1,10,4,5,5,6,6,1,3,5,255,0,4,253,254,1,254,253,0,254,254,254,253,255,252,252,253,251,249,251,248,246,249,246,246,248,247,248,247,248,249,245,245,248,241,0,253,233,19,1,237,26,3,251,18,3,5,7,254,9,254,250,0,254,246,246,1,244,247,3,249,253,2,0,5,0,4,7,0,2,3,1,250,8,0,249,11,0,255,7,5,0,8,4,4,5,3,7,1,3,5,1,0,5,0,255,3,255,254,0,255,253,255,253,253,252,253,253,250,252,253,249,249,252,248,249,249,248,249,248,248,248,248,247,246,247,244,0,251,239,16,253,244,22,255,255,16,0,8,6,255,11,254,253,4,251,248,253,253,245,250,0,247,253,0,255,2,254,5,3,255,5,4,255,1,2,3,0,254,11,255,0,10,1,0,9,4,0,8,3,3,3,4,3,0,2,2,255,0,1,253,0,0,253,253,255,252,251,252,251,250,249,252,251,250,251,252,249,251,253,248,251,250,247,248,246,246,244,241,247,255,239,249,13,240,0,17,248,6,11,0,11,1,3,11,249,2,5,247,253,0,249,247,253,251,247,253,253,253,253,254,3,254,0,7,0,0,5,1,0,0,7,255,254,11,253,255,8,0,255,8,3,0,7,4,3,2,6,2,0,3,1,253,0,1,250,255,0,252,252,255,252,251,254,252,252,251,253,251,250,253,251,248,252,252,248,252,251,249,250,249,248,247,245,245,244,251,247,239,8,250,242,16,253,253,15,0,6,9,255,12,0,254,10,250,251,1,250,248,252,252,248,251,254,251,253,254,0,0,253,5,1,255,6,2,2,4,3,3,3,3,3,3,2,3,1,3,2,0,3,3,0,1,4,1,1,3,1,0,1,0,0,0,0,255,255,255,253,253,253,253,252,253,253,252,252,253,253,252,254,253,253,253,252,252,251,252,250,249,250,248,248,247,245,248,254,240,251,8,237,2,12,244,7,10,254,10,4,5,11,253,8,6,250,3,1,251,252,0,251,249,0,253,250,0,255,255,255,0,4,0,1,6,2,2,8,4,3,8,4,3,6,5,2,4,3,1,2,2,1,0,2,2,0,2,3,1,1,2,0,0,1,0,255,0,255,253,254,254,252,252,253,252,252,253,252,252,253,253,252,254,252,252,252,252,250,251,250,248,248,246,246,249,252,241,253,4,238,2,8,245,5,9,254,6,6,3,5,0,7,1,253,2,255,252,251,0,252,247,255,253,247,255,254,250,254,255,0,252,3,3,253,8,4,0,6,7,0,4,7,0,3,4,1,0,3,0,255,1,0,255,0,0,255,0,1,0,0,0,0,254,255,255,253,252,253,252,250,252,251,250,251,251,250,251,252,251,252,252,252,252,252,251,250,251,250,249,248,247,246,251,252,241,0,1,241,3,6,247,1,9,255,0,7,5,254,2,8,253,0,3,253,253,254,255,251,249,254,252,249,254,255,252,253,0,1,252,1,4,255,1,5,1,0,6,3,0,5,3,0,2,3,0,0,2,0,255,0,0,254,0,255,255,0,255,255,255,255,254,254,253,253,253,252,251,251,251,250,251,251,250,251,251,252,252,252,252,252,252,252,251,250,250,250,249,248,248,247,247,252,249,244,0,0,246,0,5,254,254,6,6,255,2,9,0,255,6,1,253,0,0,253,251,255,253,250,254,253,252,253,254,253,254,255,255,255,0,0,0,5,0,1,5,3,1,4,5,1,3,4,1,1,2,0,0,1,255,255,0,255,254,0,0,253,0,0,254,255,255,253,253,254,252,253,253,251,251,253,252,251,253,253,252,253,253,252,253,253,252,252,253,252,251,251,251,250,250,249,250,253,251,249,254,0,253,254,1,1,0,2,3,1,2,3,1,1,2,0,0,0,0,255,254,255,254,254,254,254,254,254,254,254,254,0,0,255,0,0,0,1,1,1,2,2,1,2,2,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,255,255,254,254,254,254,254,254,253,254,254,253,254,254,254,254,254,254,254,254,253,253,253,253,252,252,252,252,252,252,252,251,251,252,252,251,252,252,253,255,254,255,0,0,0,0,1,1,0,1,1,0,1,0,0,0,0,255,255,255,255,254,254,254,253,254,254,254,255,255,255,0,0,0,0,0,0,0,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,0,255,255,255,0,0,255,0,0,255,255,255,255,255,0,255,255,0,0,0,255,0,0,0,0,255,255,255,255,255,255,255,255,255,255,255,255,0,0,0,0,0,0,0,0,1,1,2,2,3,4,4,5,5,5,6,5,5,5,5,5,5,4,5,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,3,3,3,2,2,1,1,0,0,0,255,255,254,254,253,252,252,252,252,252,252,252,252,253,253,253,254,255,255,255,0,0,0,0,0,0,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,255,255,254,254,253,253,253,253,253,253,253,253,253,252,252,251,251,251,251,251,251,251,251,251,251,250,250,250,250,250,250,250,251,251,251,251,251,251,251,251,251,251,251,251,251,251,251,251,251,251,250,250,250,249,249,248,248,248,248,248,248,248,248,248,248,249,249,249,249,249,249,249,249,250,249,249,249,250,249,250,250,250,250,250,250,250,250,250,250,250,250,250,250,250,250,250,250,251,250,250,250,250,251,251,251,251,251,251,251,251,252,252,252,252,252,253,253,253,253,253,254,254,254,254,254,254,255,255,255,254,255,255,255,255,255,255,255,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,255,255,255,255,255,255,255,255,255,255,255,255,254,255,255,255,255,255,255,255,255,255,0,255,255,255,255,255,255,255,255,255,255,255,255,255,0,0,0,0,255,255,255,255,0,255,255,255,255,0,0,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,1,1,1,0,0,0,1,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,0,0,0,0,0,0,0,0,0,0,0,255,0,0,0,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,1,0,0,1,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,0,0,0,0,255,255,0,0,255,255,255,0,0,0,0,0,0,0,0,0,0,0,0,255,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,1,2,2,2,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,255,255,255,255,255,255,255,255,255,0,0,255,255,255,255,254,254,254,255,254,253,254,254,254,254,254,254,254,254,254,254,254,253,253,254,253,252,252,253,253,252,252,252,253,253,253,253,254,255,255,255,0,0,0,0,0,0,0,0,0,0,0,255,255,254,255,255,254,255,255,254,255,255,255,254,255,254,255,254,254,254,255,254,253,254,254,255,254,253,254,254,254,254,253,254,254,254,254,254,254,254,255,253,253,254,253,253,253,253,253,253,252,252,253,253,252,253,253,253,252,252,252,254,253,253,253,253,253,253,252,252,253,252,253,253,254,255,255,0,0,0,0,0,0,1,0,1,0,0,0,0,255,0,0,255,255,255,255,255,255,254,254,254,253,252,252,252,251,252,251,249,252,249,250,249,249,252,248,249,249,249,248,250,246,248,251,246,249,247,249,250,247,250,249,250,251,250,251,253,253,252,255,255,254,0,0,254,255,0,254,253,255,255,255,0,1,2,2,2,3,3,3,3,3,2,2,3,2,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,255,255,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,254,254,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,254,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,254,255,255,255,254,255,5,2,0,1,253,1,0,252,1,255,255,0,255,0,255,254,5,7,1,3,6,3,1,0,255,255,252,254,0,0,0,2,3,2,1,255,1,0,0,255,0,1,1,2,0,0,253,255,254,253,0,254,0,0,0,255,0,0,255,0,0,0,255,255,255,255,254,254,254,255,254,255,255,255,255,254,254,253,254,254,253,255,254,255,254,253,255,253,254,252,254,254,254,255,252,0,252,0,252,255,254,252,255,250,0,250,254,251,253,254,250,255,251,254,252,253,253,0,0,255,1,255,255,250,251,252,253,250,252,254,253,254,252,254,254,255,252,254,254,253,253,251,252,250,252,250,253,252,254,253,252,254,252,254,251,254,251,252,251,252,253,251,253,251,253,252,252,252,253,253,252,255,251,254,253,253,253,253,254,252,254,252,253,253,252,254,254,254,253,254,254,254,254,254,254,0,254,255,254,252,255,252,253,253,255,254,252,254,252,255,251,254,254,253,255,252,255,253,254,252,254,254,253,254,252,255,253,254,252,254,254,253,253,252,254,251,252,251,254,252,252,254,253,254,251,254,253,253,252,253,255,253,255,254,0,254,255,254,0,255,254,255,255,0,255,0,255,0,255,0,0,0,0,254,0,254,0,255,0,0,0,1,255,1,0,0,255,0,0,0,0,0,0,255,0,0,0,255,0,255,255,254,255,255,255,255,255,255,254,254,255,255,254,254,255,255,255,254,254,255,255,254,254,255,255,255,255,255,0,0,0,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,0,0,0,0,255,0,0,254,255,254,255,253,254,253,253,253,253,254,253,254,254,254,255,0,0,0,0,2,2,2,2,2,3,2,2,2,2,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,0,0,255,0,0,255,255,255,254,255,255,0,1,1,1,0,1,0,0,255,0,255,254,254,253,253,253,253,252,253,254,253,255,254,255,254,255,254,255,0,0,1,1,2,2,2,2,1,2,2,2,2,2,2,2,2,2,2,3,3,3,3,4,4,4,3,4,4,5,4,5,5,6,6,5,5,6,6,5,5,5,5,4,4,4,4,4,3,4,4,4,4,4,4,4,4,4,4,4,4,4,3,3,3,3,3,4,4,4,4,4,4,3,3,2,2,2,2,2,2,2,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,2,2,3,3,2,2,1,1,0,0,0,0,0,255,255,254,254,253,252,252,252,251,251,250,250,249,248,248,248,248,248,248,248,248,248,248,249,249,250,250,250,251,251,251,252,252,253,253,253,254,254,254,254,254,254,254,254,254,254,255,254,254,254,254,254,254,254,254,254,254,254,253,253,253,254,254,253,254,254,254,254,254,254,254,254,254,254,254,254,254,254,254,254,254,254,254,254,254,254,254,254,254,254,253,253,253,254,254,254,254,254,254,254,254,254,255,254,254,254,254,254,254,254,254,254,254,254,254,254,254,254,254,254,254,254,254,254,254,254,254,254,254,254,254,254,254,254,254,254,254,254,254,254,254,254,254,254,254,254,254,254,254,254,254,255,255,255,255,255,254,254,254,254,254,254,254,254,254,254,255,254,254,254,254,254,254,254,254,254,254,254,254,254,254,254,254,254,254,254,254,254,254,254,254,254,254,254,254,254,254,254,254,254,254,254,254,254,254,254,254,254,254,254,254,254,254,254,254,254,254,254,254,254,254,254,254,254,254,254,254,254,254,254,254,255,255,255,255,255,255,255,255,254,254,254,255,254,254,254,254,254,254,254,254,254,254,254,254,254,254,254,254,254,254,254,254,254,254,254,254,254,254,254,254,254,254,254,254,254,254,254,254,254,254,254,254,254,254,254,254,254,254,254,254,254,254,254,254,254,254,254,254,254,254,254,254,254,254,254,254,254,254,254,254,254,254,254,254,254,254,254,254,254,254,254,254,254,254,254,254,254,254,254,254,254,254,254,254,254,254,254,254,254,254,254,254,254,254,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,255,255,0,0,0]),j=Uint8Array.from([64,16,32]),W=Uint8Array.from([249,119,121,249,247,57,121,151,57,249,25,89,185,89,57,201,185,25,185,71,183,73,201,249,185,119,217,7,119,71,201,121,71,249,217,25,57,217,185,121,57,217,57,185,57,249,25,89,249,183,185,57,39,121,185,73,57,217,183,7,249,55,153,7,55,217,57,249,185,153,185,121,25,89,185,249,57,247,57,7,249,57,217,217,153,23,217,185,119,215,71,119,135,57,249,119,25,89,185,121,185,25,73,215,185,153,25,89,71,249,55,89,135,55,73,201,215,119,185,23,217,217,23,25,121,183,185,57,57,201,57,151,57,217,57,201,57,247,249,23,217,201,249,153,249,183,57,23,55,153,249,151,39,57,25,153,25,89,57,121,73,25,57,57,57,217,185,249,15,31,223,23,25,217,73,73,121,23,57,217,121,25,151,39,135,103,185,121,25,89,25,217,89,89,121,153,185,25,25,57,151,153,63,23,23,151,63,57,249,153,249,183,23,121,57,201,57,217,57,153,57,23,57,249,185,25,25,89,217,25,183,153,201,201,217,183,25,121,31,127,121,217,55,153,247,249,185,249,57,247,25,89,185,153,57,55,57,57,201,25,201,55,249,217,231,79,217,249,159,25,217,217,25,121,153,25,185,121,25,89,57,247,25,185,57,217,25,89,153,55,121,249,57,247,57,73,89,153,89,247,217,135,183,57,249,185,185,25,57,201,57,249,57,247,25,89,57,121,151,31,249,119,57,25,57,153,31,201,73,185,217,217,249,183,73,249,57,249,25,89,57,185,57,151,57,55,185,25,217,71,103,231,55,201,25,153,39,57,71,249,135,135,23,55,217,25,57,201,57,249,185,249,185,73,25,151,25,89,103,231,71,201,249,55,217,23,25,153,201,249,121,121,57,159,183,25,57,153,25,185,57,249,185,153,185,121,25,89,201,71,121,57,127,255,249,183,55,121,57,217,185,153,71,217,153,25,57,153,57,55,57,119,57,119,57,249,25,89,201,121,249,183,153,217,201,23,249,57,55,231,217,249,15,119,201,57,185,153,57,249,25,89,185,57,57,217,57,247,57,183,31,153,25,217,121,119,153,153,201,57,25,153,159,23,217,25,185,121,57,249,185,25,25,89,57,121,57,249,217,249,201,79,191,159,185,185,23,31,201,153,25,121,55,119,119,217,25,89,185,153,57,217,185,57,57,55,57,201,57,63,55,249,57,153,201,201,23,183,121,25,201,185,127,55,57,121,185,25,25,89,57,57,57,217,57,201,185,25,217,217,25,57,73,25,23,55,119,121,57,217,57,55,249,201,249,121,57,249,25,89,57,121,185,249,25,89,185,57,201,185,121,119,183,159,247,15,73,249,57,217,249,121,183,127,199,215,73,25,57,151,57,55,25,247,89,89,121,249,247,57,127,73,159,249,57,159,71,25,89,249,201,201,57,55,249,57,185,121,25,89,57,153,25,185,57,249,185,153,121,159,231,217,25,121,135,135,201,249,57,153,201,57,57,55,247,153,185,121,25,89,57,217,185,57,57,217,57,247,201,55,119,121,57,25,217,55,249,119,57,25,31,127,201,57,249,55,185,121,25,89,185,121,57,55,185,249,185,121,249,55,55,215,159,249,95,231,159,201,57,153,57,159,159,121,249,25,25,89,185,89,57,217,185,25,57,57,57,217,201,119,159,7,153,153,201,55,119,121,57,25,247,57,127,73,159,249,57,201,185,121,57,249,57,119,57,249,57,247,215,121,249,57,159,247,121,249,15,57,73,185,217,119,57,223,7,25,185,121,25,89,57,201,185,25,185,25,57,249,217,183,55,57,55,25,57,71,249,57,57,183,25,217,231,135,7,183,185,153,185,89,57,55,57,247,185,153,57,217,217,153,153,121,249,57,121,217,25,121,185,135,215,31,119,249,121,185,57,25,57,151,57,249,153,121,231,7,167,95,217,121,249,57,23,63,57,121,95,255,39,249,153,153,71,183,55,39,249,121,135,63,151,153,71,183,89,153,185,217,201,73,183,57,55,217,249,183,55,55,57,249]),$=Uint8Array.from([1,1,2,5,215,119,63,247,39,127,255,31,247,81,81,81,81,0,1,1,5,3,223,255,247,159,127,81,81,81,81,81,81,81,81,0,1,1,5,6,151,103,247,63,247,31,81,81,81,81,81,81,81,0,1,2,2,7,23,215,151,135,255,95,81,81,81,81,81,81,81,0,1,2,7,1,135,247,207,23,167,215,31,119,81,81,81,81,81,0,2,1,3,1,95,167,191,247,31,81,81,81,81,81,81,81,81,0,2,1,5,1,167,31,183,215,39,199,15,215,127,199,167,39,81,0,2,2,1,5,151,167,103,167,39,207,81,81,81,81,81,81,81,0,2,2,2,1,231,167,167,39,81,81,81,81,81,81,81,81,81,0,2,2,5,1,31,247,55,255,183,247,247,159,81,81,81,81,81,0,2,3,2,4,95,31,199,159,167,39,81,81,81,81,81,81,81,0,3,1,1,4,127,199,127,215,39,177,159,81,81,81,81,81,81,0,3,1,4,1,215,151,151,199,119,247,39,127,81,81,81,81,81,0,3,2,1,1,95,31,167,55,247,159,159,167,31,81,81,81,81,0,3,2,2,5,127,247,103,247,95,167,31,127,247,31,81,81,81,0,3,2,4,2,151,31,199,231,199,39,215,103,159,81,81,81,81,0,3,3,1,1,159,151,199,247,39,127,199,159,127,159,81,81,81,0,3,3,2,3,183,247,39,247,127,199,151,81,81,81,81,81,81,0,3,3,4,1,231,255,127,215,127,199,167,39,159,81,81,81,81,0,4,1,1,5,247,207,247,159,81,81,81,81,81,81,81,81,81,0,4,1,2,1,159,255,31,31,167,255,39,119,199,39,183,81,81,0,4,1,3,5,23,31,215,199,39,81,81,81,81,81,81,81,81,0,4,1,4,6,183,31,247,215,127,81,81,81,81,81,81,81,81,0,5,1,1,3,199,39,127,31,167,119,255,151,127,199,167,39,81,0,5,1,5,7,167,95,127,199,167,39,159,81,81,81,81,81,81,0,5,1,6,6,215,31,31,167,191,81,81,81,81,81,81,81,81,0,5,2,2,5,159,135,199,103,103,81,81,81,81,81,81,81,81,0,5,2,3,6,183,215,231,247,81,81,81,81,81,81,81,81,81,0,6,1,3,2,159,255,31,63,199,63,215,103,81,81,81,81,81,0,6,1,6,6,199,39,63,199,159,199,23,103,247,81,81,81,81,0,6,1,7,1,159,71,199,247,103,119,81,81,81,81,81,81,81,0,6,2,5,6,159,199,127,255,215,127,199,167,39,159,81,81,81,0,6,2,6,5,119,247,215,127,71,81,81,81,81,81,81,81,81,0,7,1,2,3,95,31,247,151,199,159,247,81,81,81,81,81,81,0,7,2,7,5,151,215,31,119,81,81,81,81,81,81,81,81,81,0,8,1,10,2,151,199,39,247,231,215,127,199,151,81,81,81,81,0,8,2,4,6,199,39,63,247,39,127,167,31,207,81,81,81,81,0,8,1,16,2,119,247,63,199,151,247,81,81,81,81,81,81,81,0,9,1,1,4,127,215,79,199,81,81,81,81,81,81,81,81,81,0,9,1,3,4,159,255,23,191,215,207,81,81,81,81,81,81,81,0]),V=Uint8Array.from([229,227,145,226,225,145,230,239,227,141,225,229,227,133,226,225,131,227,238,226,225,147,226,225,238,225,225,226,147,229,228,225,226,157,225,142,238,144,239,238,225,145,228,227,239,226,227,144,230,149,229,226,131,227,226,159,227,225,144,230,238,230,228,227,147,225,156,155,228,224,239,153,225,155,145,227,129,228,224,224,129,238,225,147,238,145,227,238,229,229,131,142,226,227,225,147,230,156,229,228,130,145,228,228,230,229,153,135,159,147,157,225,227,226,227,155,226,225,150,227,135,239,134,227,228,229,228,144,230,226,228,147,230,129,225,148,226,147,230,145,229,228,144,226,230,149,238,226,228,229,144,230,226,149,228,150,230,144,228,229,230,145,156,225,226,224,224,228,239,148,227,226,225,147,230,145,229,228,225,227,227,226,225,133,131,149,230,229,229,145,226,225,238,145,227,144,225,226,157,153,228,230,238,227,230,149,229,228,145,238,227,227,144,145,226,225,230,225,228,145,238,226,230,148,226,147,225,224,230,228,157,229,230,142,227,227,144,226,225,133,157,145,227,225,226,230,227,145,226,226,146,227,226,147,227,225,154,128,239,227,147,228,146,227,238,238,145,226,225,133,133,150,226,225,238,239,239,149,226,227,147,150,226,159,230,229,159,154,230,148,229,228,147,227,229,238,129,227,225,227,225,143,229,148,226,225,228,128,225,147,226,227,146,226,225,145,230,228,230,148,228,229,147,226,227,145,225,226,144,153,228,229,227,238,147,226,228,143,225,132,146,238,224,145,145,226,230,228,153,156,147,155,157,239,226,156,230,228,238,133,155,226,147,227,226,226,131,142,147,238,226,228,144,149,227,132,131,226,225,225,228,238,239,229,224,225,226,132,145,159,230,229,159,228,144,226,230,228,144,229,227,226,144,154,153,238,238,225,226,144,133,225,230,229,230,149,238,226,145,228,154,226,225,226,145,228,238,129,228,226,147,228,238,149,228,145,144,228,230,146,228,226,132,225,230,145,229,146,228,146,227,144,159,135,154,230,229,229,225,228,230,225,238,147,226,225,224,229,225,145,229,228,147,230,226,146,227,225,231,132,227,226,145,146,225,230,227,227,145,226,225,147,226,133,227,225,146,230,230,238,147,239,225,225,239,141,227,225,147,228,227,226,145,228,230,147,238,132,150,225,230,229,227,141,225,148,148,226,230,230,147,229,238,238,230,145,229,228,147,226,129,158,152,230,229,132,230,145,228,131,146,133,134,155,226,147,238,228,238,148,225,229,229,228,147,226,227,132,225,228,230,147,229,132,228,228,132,227,226,132,134,225,147,147,226,227,132,228,133,144,227,226,225,154,230,132,225,132,226,238,226,227,157,159,225,230,239,145,227,225,147,226,133,238,146,227,226,225,144,226,145,225,145,230,238,144,225,145,228,229,225,145,227,228,147,226,145,230,228,147,225,228,150,238,157,159,144,154,156,154,147,225,226,228,239,227,225,226,230,229,224,224,238,228,230,150,226,141,225,228,230,238,157,159,148,226,225,230,228,141,226,228,145,230,225,132,227,228,226,229,230,149,228,145,229,228,238,145,226,147,228,230,228,145,230,230,147,228,239,145,227,147,225,229,128,133,149,226,225,229,226,132,227,230,148,229,228,134,230,226,132,225,147,147,132,145,225,226,145,147,144,147,132,225,229,228,132,227,134,225,230,150,144,229,228,230,133,230,150,227,226,225,229,227,147,226,225,150,229,132,227,225,150,226,229,230,147,226,225,146,144,145,147,226,227,225,238,147,227,132,225,229,238,159,144,157,228,230,228,230,229,228,147,134,238,142,131,142,229,229,226,226,227,157,156,155,238,224,142,146,131,133,227,227,146,141,150,230,225,227,227,226,150,146,225,227,226,226,224,154,227,227,156,155,157,228,227,227,226,230,228,156,225,228,230,229,146,132,238,224,226,226,156,157,230,230,228,229,225,147,226,227,156,157,238,239,226,227,146,133,131,238,146,133,142,149,225,229,147,132,148,230,229,228,226,145,227,147,225,228]),z=Uint8Array.from([226,147,227,226,146,225,227,226,132,225,146,133,239,224,133,238,226,227,224,224,239,145,238,226,224,147,230,157,147,159,238,227,159,226,230,229,159,155,229,227,225,146,226,227,153,225,144,227,226,144,224,225,153,227,224,239,225,230,144,154,226,145,228,157,145,230,144,226,227,159,229,229,230,149,228,225,145,226,225,157,226,225,230,230,228,149,230,224,239,150,159,147,156,225,226,147,230,226,156,225,130,230,224,239,143,230,226,148,159,226,145,229,156,145,239,238,150,147,224,149,230,230,149,229,227,144,225,155,226,147,227,225,224,226,144,227,145,147,226,149,230,238,226,228,226,144,225,230,145,228,226,226,153,225,229,228,226,230,149,238,226,147,155,156,225,144,226,149,141,133,134,149,229,229,239,239,227,149,225,230,227,229,148,153,156,155,230,145,226,159,148,238,225,226,225,145,230,230,229,225,148,228,129,149,149,148,153,225,226,228,226,144,149,227,225,144,227,238,226,227,228,230,226,144,230,228,133,229,230,229,144,228,238,238,230,144,229,228,133,146,229,230,145,228,146,226,226,144,230,153,153,146,132,229,230,228,132,146,238,239,238,145,226,230,154,143,230,226,132,229,230,230,229,227,228,229,230,228,227,229,133,145,230,227,129,226,145,227,228,145,227,226,225,146,224,227,145,225,226,230,230,156,144,225,226,224,230,145,229,228,146,225,135,155,226,147,225,227,148,133,226,147,225,229,225,228,133,238,239,224,230,230,226,144,239,226,159,145,145,227,226,228,230,226,149,225,144,155,230,159,155,154,145,238,229,228,153,225,159,226,156,156,149,145,230,229,227,145,226,146,225,148,230,147,229,238,146,157,155,154,159,238,226,145,230,149,229,228,238,226,227,227,238,225,144,229,227,159,226,131,225,226,155,153,225,228,229,230,238,159,227,225,131,228,226,144,145,227,225,230,224,228,159,230,228,229,238,129,230,229,228,147,226,129,228,238,132,227,238,227,226,144,228,230,238,149,226,225,145,229,230,226,141,238,225,147,230,145,226,146,225,224,224,145,227,226,146,229,225,144,133,228,229,230,227,147,228,228,238,226,229,228,132,227,230,229,230,229,144,228,229,145,238,238,148,225,228,147,230,226,132,143,128,238,224,224,149,238,133,228,229,227,145,147,147,230,225,148,227,147,132,225,155,145,154,238,226,225,225,129,226,145,225,228,238,238,149,144,227,229,238,224,131,227,225,145,228,144,159,226,149,238,225,149,227,132,225,131,230,230,229,225,239,229,149,145,227,147,225,230,225,145,226,238,226,227,238,145,227,226,147,228,226,147,227,226,132,155,238,145,227,147,226,132,146,141,239,226,225,230,226,131,227,229,144,228,227,144,238,238,144,227,230,230,144,228,145,227,238,238,153,230,229,144,225,132,229,228,227,226,238,238,225,145,226,225,157,156,155,226,225,229,131,147,229,131,147,228,227,145,225,147,229,153,156,156,238,226,225,228,238,225,225,145,146,228,227,145,226,146,225,225,225,147,226,227,229,230,238,145,147,227,225,229,230,145,226,147,225,229,133,131,238,225,226,145,225,145,225,145,230,229,238,145,239,225,147,228,226,145,145,150,132,226,135,154,132,238,225,228,225,132,132,227,226,147,228,230,147,229,228,132,157,145,225,230,229,228,238,147,227,132,225,229,225,147,226,132,225,153,146,225,131,239,132,226,146,226,227,239,225,147,145,230,226,229,146,225,150,227,226,225,132,146,227,226,141,225,239,224,230,147,225,134,157,229,228,145,230,238,225,225,238,145,227,147,227,227,230,144,145,225,145,229,225,159,226,225,225,144,229,230,154,156,157,144,225,227,144,144,159,153,225,227,156,157,159,155,230,228,228,227,226,225,227,230,229,227,224,156,150,133,147,226,227,129,224,239,226,130,131,229,228,227,154,157,152,135,230,227,226,225,149,129,225,227,135,130,153,226,228,228,159,144,145,153,226,227,156,129,148,228,159,144,226,227,147,230,238,239,144,225,145,230,226,144,227,145,225,142]),K=Uint8Array.from([0,0,0,66,0,99,0,0,15,255,15,240,7,119,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,4,6,5,0,0,4,68,5,85,6,102,7,119,8,136,9,153,10,170,11,187,12,204,13,221,14,238,15,255]),J=Uint8Array.from([0,0,204,12,143,8,126,7,108,6,91,5,74,4,99,9,82,7,65,6,48,6,118,12,20,9,37,11,136,8,255,15]),q=Uint8Array.from([0,0,124,11,4,3,3,3,3,2,2,2,1,1,38,10,20,8,3,6,2,4,67,9,2,6,2,7,106,10,255,15]),Y=Uint8Array.from([0,0,17,1,34,2,239,14,0,15,240,15,160,14,176,15,160,14,160,14,170,10,240,0,204,12,223,13,238,14,238,14]),X=Uint8Array.from([0,0,0,31,23,43,43,31,55,55,43,71,67,55,83,79,67,99,95,83,111,111,99,127,127,115,139,143,135,155,159,151,167,175,167,179,191,187,191,207,207,207,0,51,0,23,15,31]),Q=Uint8Array.from([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,32,0,0,255,32,0,0,255,32,0,0,255,32,0,0,255,32,0,0,34,32,0,0,255,32,0,0,34,32,0,15,240,255,0,15,242,255,32,0,34,2,32,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,15,240,255,0,15,242,255,32,255,255,255,240,15,242,255,34,255,255,255,240,15,242,255,34,15,242,255,32,0,34,2,32,0,242,0,242,255,255,242,242,2,242,34,2,15,255,255,32,242,242,34,242,242,242,0,242,15,242,15,34,0,34,0,32,0,0,0,0,255,0,15,240,255,32,255,34,2,47,242,32,0,255,34,0,15,242,47,240,255,34,15,242,2,32,0,34,0,255,240,0,15,242,255,0,15,242,242,32,15,255,15,240,255,47,255,34,255,32,255,32,15,255,15,240,0,34,32,34,0,15,240,0,0,15,242,0,0,255,34,0,0,2,32,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,0,0,15,242,32,0,255,34,0,0,255,32,0,0,255,32,0,0,15,240,0,0,0,255,0,0,0,2,32,0,255,0,0,0,15,240,0,0,0,255,0,0,0,255,32,0,0,255,32,0,15,242,32,0,255,34,0,0,2,32,0,0,0,0,0,15,240,15,240,0,255,255,34,255,255,255,255,2,255,255,34,15,242,47,240,0,34,0,34,0,0,0,0,0,0,0,0,0,15,240,0,0,15,242,0,15,255,255,240,32,47,242,34,0,15,242,0,0,0,34,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,15,240,0,0,15,242,0,0,255,34,0,0,2,32,0,0,0,0,0,0,0,0,0,0,0,0,0,15,255,255,240,0,34,34,34,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,240,0,0,255,242,0,0,2,34,0,0,0,0,255,0,0,15,242,0,0,255,34,0,15,242,32,0,255,34,0,15,242,32,0,255,34,0,0,2,32,0,0,15,255,255,0,255,34,47,240,255,32,240,242,255,47,2,242,255,240,32,242,15,255,255,34,0,34,34,32,0,0,0,0,0,255,240,0,15,255,242,0,0,47,242,0,0,15,242,0,0,15,242,0,0,15,242,0,0,0,34,0,0,0,0,0,15,255,255,0,255,34,47,240,2,32,255,34,0,255,34,32,15,242,34,0,255,255,255,240,2,34,34,34,0,0,0,0,15,255,255,0,255,34,34,240,2,47,255,242,0,0,34,242,255,0,0,242,15,255,255,34,0,34,34,32,0,0,0,0,0,15,255,0,0,255,47,32,15,242,47,32,255,34,15,32,255,255,255,240,2,34,47,34,0,0,0,32,0,0,0,0,255,255,255,240,255,34,34,34,255,255,255,0,2,34,34,240,255,32,0,242,15,255,255,34,0,34,34,32,0,0,0,0,15,255,255,0,255,34,34,240,255,255,255,2,255,34,34,240,255,32,0,242,15,255,255,34,0,34,34,32,0,0,0,0,255,255,255,240,255,34,34,242,2,32,15,32,0,0,242,32,0,0,242,0,0,0,242,0,0,0,2,0,0,0,0,0,15,255,255,0,255,34,34,240,15,255,255,2,255,34,34,240,255,32,0,242,15,255,255,34,0,34,34,32,0,0,0,0,15,255,255,0,255,34,34,240,15,255,255,242,0,34,34,242,255,0,0,242,15,255,255,34,0,34,34,32,0,0,0,0,0,15,255,0,0,15,255,32,0,0,34,32,0,0,0,0,0,15,255,0,0,15,255,32,0,0,34,32,0,0,0,0,0,255,240,0,0,255,242,0,0,2,34,0,0,0,0,0,0,255,240,0,0,255,242,0,0,2,34,0,0,0,0,0,0,0,255,0,0,15,242,32,0,255,34,0,0,255,32,0,0,15,240,0,0,0,255,0,0,0,2,32,0,0,0,0,15,255,255,240,15,255,255,242,0,34,34,34,0,0,0,0,15,255,255,240,15,255,255,242,0,34,34,34,0,0,0,0,0,255,0,0,0,15,240,0,0,0,255,0,0,0,255,32,0,15,242,32,0,255,34,0,0,2,32,0,0,0,0,0,0,255,255,0,15,242,47,240,0,34,15,242,0,0,255,34,0,15,242,32,0,0,34,0,0,15,240,0,0,0,34,0,15,255,255,0,255,34,34,240,255,47,240,242,255,47,34,242,255,47,255,242,255,32,34,34,15,255,255,0,0,34,34,32,15,255,255,32,255,34,34,242,255,32,0,242,255,255,255,242,255,34,34,242,255,32,0,242,2,32,0,2,0,0,0,0,255,255,242,0,255,34,47,32,255,32,15,32,255,255,255,32,255,34,34,242,255,255,255,242,2,34,34,32,0,0,0,0,15,255,255,32,255,34,34,242,255,32,0,2,255,32,0,0,255,32,0,242,15,255,255,34,0,34,34,32,0,0,0,0,255,255,242,0,255,34,47,32,255,32,0,242,255,32,0,242,255,32,15,34,255,255,242,32,2,34,34,0,0,0,0,0,255,255,255,242,255,34,34,34,255,32,0,0,255,255,255,32,255,34,34,32,255,255,255,242,2,34,34,34,0,0,0,0,255,255,255,242,255,34,34,34,255,32,0,0,255,255,255,32,255,34,34,32,255,32,0,0,2,32,0,0,0,0,0,0,15,255,255,242,255,34,34,34,255,32,0,0,255,32,255,242,255,32,2,242,15,255,255,34,2,34,34,32,0,0,0,0,255,32,0,242,255,32,0,242,255,32,0,242,255,255,255,242,255,34,34,242,255,32,0,242,2,32,0,2,0,0,0,0,0,255,255,32,0,15,242,32,0,15,242,0,0,15,242,0,0,15,242,0,0,255,255,32,0,2,34,32,0,0,0,0,0,0,0,242,0,0,0,242,0,0,0,242,0,0,0,242,255,32,0,242,255,255,255,242,2,34,34,34,0,0,0,0,255,32,0,242,255,32,0,242,255,32,15,32,255,255,242,0,255,34,47,32,255,32,0,242,2,32,0,2,0,0,0,0,255,32,0,0,255,32,0,0,255,32,0,0,255,32,0,0,255,32,0,0,255,255,255,242,2,34,34,34,0,0,0,0,255,255,255,32,255,47,242,242,255,47,242,242,255,47,242,242,255,47,242,242,255,47,242,242,2,32,34,2,0,0,0,0,255,255,255,32,255,34,34,242,255,32,0,242,255,32,0,242,255,32,0,242,255,32,0,242,2,32,0,2,0,0,0,0,15,255,255,32,255,34,34,242,255,32,0,242,255,32,0,242,255,32,0,242,15,255,255,34,0,34,34,32,0,0,0,0,15,255,255,32,255,34,34,242,255,32,0,242,255,255,255,34,255,34,34,32,255,32,0,0,2,32,0,0,0,0,0,0,15,255,255,32,255,34,34,242,255,32,0,242,255,32,242,242,255,32,255,34,15,255,255,242,0,34,34,34,0,0,0,0,15,255,255,32,255,34,34,242,255,32,0,242,255,255,255,32,255,34,47,32,255,32,0,242,2,32,0,2,0,0,0,0,15,255,255,32,255,34,34,242,255,32,0,34,15,255,255,32,242,34,34,242,15,255,255,34,0,34,34,32,0,0,0,0,255,255,255,32,2,255,34,32,0,255,32,0,0,255,32,0,0,255,32,0,0,255,32,0,0,2,32,0,0,0,0,0,255,32,0,242,255,32,0,242,255,32,0,242,255,32,0,242,255,32,0,242,15,255,255,34,0,34,34,32,0,0,0,0,255,32,0,242,255,32,0,242,255,32,0,242,15,32,0,242,0,242,15,34,0,15,242,32,0,0,34,0,0,0,0,0,255,32,0,242,255,32,242,242,255,32,242,242,255,32,242,242,15,242,242,242,0,255,47,34,0,2,32,32,0,0,0,0,255,32,0,242,255,32,0,242,15,242,15,32,0,255,242,0,15,242,47,32,255,34,0,242,2,32,0,2,0,0,0,0,255,32,0,242,255,32,0,242,255,32,0,242,255,255,255,242,2,34,34,242,255,255,255,34,2,34,34,32,0,0,0,0,255,255,255,242,2,34,255,34,0,15,242,32,0,255,34,0,15,242,32,0,255,255,255,240,2,34,34,32,0,0,0,0,0,242,0,0,255,255,255,32,2,242,34,32,0,255,255,32,15,242,242,242,242,255,34,242,255,242,47,34,2,34,0,32,0,0,0,0,242,0,0,0,242,0,15,32,242,0,0,242,242,0,0,242,242,242,0,242,15,34,0,2,0,32,0,0,15,255,242,0,0,34,34,0,15,255,242,0,242,34,47,32,2,0,15,32,0,0,242,32,15,255,34,0,0,34,32,0,0,255,242,0,0,2,34,0,255,255,255,32,2,47,34,32,0,255,32,0,15,34,242,0,242,32,255,242,2,0,2,34,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,255,242,2,34,34,34,15,32,15,32,255,255,32,242,15,34,242,242,15,32,242,242,15,32,242,2,242,32,242,0,242,15,242,0,2,0,34,0,0,242,0,0,255,255,255,32,2,47,34,32,255,255,255,242,2,34,242,34,242,0,2,0,15,255,255,32,0,34,34,32,0,15,242,0,0,15,34,0,0,242,32,0,15,34,0,0,0,242,0,0,0,15,32,0,0,15,242,0,0,0,34,0,242,0,15,32,242,255,255,242,242,2,47,34,242,0,15,32,242,0,15,32,242,0,15,32,15,32,242,32,0,32,2,0,0,0,0,0,15,255,255,32,0,34,34,32,0,0,0,0,0,0,0,0,242,0,0,0,15,255,255,242,0,34,34,34,0,242,0,0,255,255,255,32,2,47,34,32,0,0,242,0,242,0,2,0,242,0,0,0,15,255,255,32,0,34,34,32,15,32,0,0,15,32,0,0,15,32,0,0,15,32,0,0,15,32,0,0,15,32,15,32,0,255,242,32,0,2,34,0,0,0,15,32,255,255,255,242,2,47,255,34,0,242,47,32,0,15,255,32,0,0,47,32,0,15,242,32,0,0,34,0,15,32,15,32,15,32,15,32,255,255,255,242,15,34,47,34,15,32,15,32,15,32,0,32,0,255,255,32,0,2,34,32,15,255,255,32,0,47,242,32,0,242,34,0,255,255,255,242,2,47,34,34,0,242,32,0,0,255,255,32,0,2,34,32,15,32,0,0,255,255,255,32,15,34,34,32,15,47,255,242,15,32,34,34,242,47,32,0,242,0,255,242,2,0,2,34,0,242,0,0,255,255,255,242,2,242,34,34,0,255,255,32,15,34,34,242,0,32,0,242,15,255,255,34,0,34,34,32,0,0,0,0,255,255,242,0,2,34,47,32,0,0,15,32,0,0,15,32,0,0,242,32,0,255,34,0,0,2,32,0,255,255,255,32,2,47,242,32,0,242,34,0,15,34,0,0,15,32,0,0,15,32,0,0,0,255,242,0,0,2,34,0,15,32,0,0,15,32,255,32,0,255,34,32,15,34,32,0,242,32,0,0,242,0,0,0,15,255,255,32,0,34,34,32,0,242,0,0,255,255,242,0,15,34,47,242,15,32,15,34,242,255,255,32,2,242,47,242,0,15,242,34,0,0,34,0,0,0,0,0,242,15,255,242,242,0,34,34,242,0,0,0,242,242,0,0,242,242,0,0,15,47,255,242,0,32,34,34,15,32,15,32,15,255,255,32,15,34,255,242,242,242,242,242,242,255,34,242,242,242,255,242,15,34,255,34,0,32,2,32,15,32,0,0,255,47,255,32,15,242,34,242,15,34,0,242,15,32,255,242,255,47,34,242,15,32,255,34,0,32,2,32,0,0,0,0,15,255,255,32,255,47,47,242,242,47,32,242,242,15,32,242,242,15,32,242,15,242,47,34,0,34,0,32,0,0,15,32,242,15,255,242,242,0,47,34,242,0,15,32,242,15,255,242,242,242,47,34,15,47,255,32,0,32,34,32,255,242,0,0,2,242,15,32,15,34,15,242,242,32,15,34,242,0,15,32,242,0,242,32,15,255,34,0,0,34,32,0,0,255,32,0,0,2,242,0,0,0,2,0,15,47,32,242,15,32,242,242,242,32,242,242,2,255,34,2,0,2,32,0,0,0,0,0,0,0,0,0,0,255,32,0,15,34,242,0,242,32,15,32,2,0,0,242,0,0,0,2,0,0,0,0,242,255,255,242,242,2,47,34,242,255,255,242,242,2,47,34,242,15,255,32,242,242,47,242,15,47,242,242,0,32,34,2,0,15,32,0,255,255,255,32,2,47,34,32,255,255,255,32,2,47,34,32,15,255,242,0,15,255,47,32,0,34,32,32,15,255,32,0,0,47,32,0,0,15,47,32,15,255,255,242,242,47,47,34,242,242,47,32,255,242,242,32,2,34,2,0,0,242,0,0,255,255,47,32,2,242,32,242,15,242,0,2,242,242,0,242,15,242,0,242,0,255,255,34,0,2,34,32,15,32,15,32,15,255,255,32,255,242,255,242,242,242,242,242,242,255,242,242,242,255,34,242,15,47,47,34,0,32,32,32,0,242,0,0,255,255,242,0,2,242,34,0,255,255,242,0,15,34,34,242,15,32,0,242,0,255,255,34,0,2,34,32,15,32,242,0,15,47,255,32,255,242,242,242,2,242,242,242,0,242,2,242,0,242,255,34,0,242,2,32,0,2,0,0,0,0,242,0,242,255,255,32,255,34,242,242,242,32,242,242,242,255,255,34,2,2,242,32,0,15,34,0,0,0,32,0,0,0,242,0,0,0,255,242,0,0,242,34,0,0,242,0,15,255,255,32,242,34,242,242,15,255,34,2,0,34,32,0,0,255,242,0,0,2,47,32,242,0,0,32,242,255,255,32,15,34,34,242,0,32,0,242,0,255,255,34,0,2,34,32,15,32,0,242,15,32,0,242,15,32,0,242,15,47,32,242,0,242,32,242,0,2,15,34,0,15,242,32,0,0,34,0,15,255,255,32,0,47,34,32,0,255,255,32,15,34,34,242,242,47,32,242,2,242,242,242,0,255,255,34,0,2,34,32,15,32,0,0,255,47,255,32,15,242,34,242,15,34,0,242,15,32,15,34,255,32,15,32,15,32,0,242,0,32,0,2,15,255,255,32,0,47,242,32,0,242,34,0,15,255,255,32,242,34,34,242,2,0,0,242,0,255,255,34,0,2,34,32,15,32,0,0,255,47,255,32,15,242,34,242,15,34,0,242,15,32,0,242,255,32,0,242,15,32,15,34,0,32,0,32,0,15,32,0,15,255,255,32,0,242,34,32,0,15,255,242,15,242,242,34,15,34,2,0,0,255,255,242,0,2,34,34,0,242,0,0,0,242,0,0,15,34,0,0,15,255,32,0,15,47,32,242,242,47,32,242,242,0,255,34,2,0,2,32,0,0,0,0,0,15,32,0,15,255,255,32,0,47,34,32,0,255,255,32,15,47,242,242,15,255,47,242,0,34,32,34,0,0,0,0,0,0,0,0,15,32,0,0,15,32,15,32,15,32,0,242,15,32,0,242,0,242,0,2,0,2,0,0,0,0,0,0,0,15,242,0,0,0,34,0,0,255,255,32,0,2,47,32,0,0,15,32,0,15,242,32,0,0,34,0,0,0,0,0,0,255,242,0,0,2,34,0,15,255,255,32,0,34,242,32,0,15,34,0,15,242,255,32,0,34,2,32,0,0,0,0,0,242,0,0,15,255,47,32,0,242,47,32,0,255,242,32,15,242,47,32,15,242,255,32,0,34,2,32,0,0,0,0,0,0,0,0,0,242,242,0,15,255,255,32,0,242,47,32,0,242,242,32,0,242,2,0,0,2,0,0,0,0,0,0,0,0,0,0,15,47,32,0,15,255,242,0,15,47,47,32,0,47,242,32,0,242,34,0,0,2,0,0,0,0,0,0,0,0,0,0,0,15,32,0,0,15,255,32,0,15,34,32,15,255,255,32,15,255,34,32,0,34,32,0,0,0,0,0,0,0,0,0,0,0,0,0,15,255,242,0,0,34,47,32,0,0,15,32,0,15,242,32,0,0,34,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,242,0,0,242,242,0,0,255,242,0,0,2,34,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,242,0,0,0,15,32,0,0,0,242,0,0,0,2,0,0,15,255,242,0,15,34,34,0,15,32,0,0,0,32,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,242,0,0,0,242,0,15,255,242,0,255,255,255,32,2,34,47,32,0,242,15,32,0,255,242,32,0,242,34,0,0,242,0,0,15,34,0,0,0,32,0,0,0,0,15,32,0,0,15,32,0,0,242,32,255,255,34,0,2,47,32,0,0,15,32,0,0,15,32,0,0,0,32,0,0,15,32,0,255,255,255,32,242,34,47,32,2,0,15,32,0,0,15,32,0,0,242,32,15,255,34,0,0,34,32,0,0,0,0,0,15,255,255,32,0,47,34,32,0,15,32,0,0,15,32,0,0,15,32,0,255,255,255,242,2,34,34,34,0,0,242,0,255,255,255,242,2,47,242,34,0,15,242,0,0,242,242,0,15,34,242,0,242,47,242,0,2,0,34,0,0,242,0,0,255,255,255,32,2,242,47,32,0,242,15,32,15,34,15,32,15,32,15,32,242,32,242,32,2,0,2,0,0,242,0,0,255,255,255,32,2,47,34,32,0,15,32,0,15,255,255,242,0,34,242,34,0,0,242,0,0,0,2,0,0,255,255,32,0,242,47,32,15,34,15,32,0,32,15,32,0,0,242,32,0,15,34,0,15,242,32,0,0,34,0,0,0,242,0,0,0,255,255,242,15,34,242,34,242,32,242,0,2,0,242,0,0,15,34,0,0,242,32,0,0,2,0,0,0,0,0,0,255,255,255,32,2,34,47,32,0,0,15,32,0,0,15,32,255,255,255,32,2,34,34,32,0,0,0,0,15,32,242,0,255,255,255,32,15,34,242,32,15,32,242,0,0,32,242,0,0,15,34,0,0,242,32,0,0,2,0,0,15,32,0,0,0,242,0,0,242,2,15,32,15,32,15,32,0,32,15,32,0,0,242,32,255,255,34,0,2,34,32,0,0,0,0,0,255,255,255,32,2,34,242,32,0,15,34,0,0,255,32,0,15,34,242,0,242,32,15,32,2,0,0,32,0,242,0,0,0,242,0,0,255,255,255,242,2,242,34,242,0,242,15,34,0,242,0,32,0,15,255,242,0,0,34,34,242,0,15,32,15,32,15,32,15,32,15,32,0,32,15,32,0,0,242,32,0,15,34,0,15,242,32,0,0,34,0,0,0,242,0,0,15,255,255,32,242,34,47,32,2,242,15,32,0,15,242,32,0,15,34,0,255,242,32,0,2,34,0,0,0,15,242,0,15,255,34,0,0,47,32,0,255,255,255,242,2,47,34,34,0,15,32,0,0,242,32,0,0,2,0,0,0,0,0,0,242,242,15,32,242,242,15,32,2,2,15,32,0,0,242,32,0,15,34,0,15,242,32,0,0,34,0,0,15,255,255,32,0,34,34,32,255,255,255,242,2,47,34,34,0,15,32,0,0,15,32,0,0,242,32,0,0,2,0,0,0,242,0,0,0,242,0,0,0,242,0,0,0,255,242,0,0,242,47,32,0,242,0,32,0,242,0,0,0,2,0,0,0,15,32,0,0,15,32,0,255,255,255,242,2,47,34,34,0,15,32,0,0,15,32,0,0,242,32,0,0,2,0,0,0,0,0,0,15,255,255,32,0,34,34,32,0,0,0,0,0,0,0,0,255,255,255,242,2,34,34,34,0,0,0,0,0,0,0,0,15,255,255,32,0,34,47,32,0,242,242,32,0,15,34,0,0,242,242,0,255,34,15,32,2,32,0,32,0,15,32,0,15,255,255,32,0,34,47,32,0,0,242,32,0,255,47,32,255,47,32,242,2,47,32,2,0,0,32,0,0,0,0,0,0,0,242,0,0,0,242,0,0,15,34,0,0,15,32,0,0,242,32,0,15,34,0,0,0,32,0,0,0,0,0,0,15,32,242,0,15,32,15,32,15,32,15,32,15,32,0,242,242,32,0,242,2,0,0,2,0,0,0,0,242,0,0,0,242,0,0,0,255,255,242,0,242,34,34,0,242,0,0,0,242,0,0,0,15,255,255,32,0,34,34,32,0,0,0,0,255,255,255,32,2,34,47,32,0,0,15,32,0,0,242,32,0,15,34,0,15,242,32,0,0,34,0,0,0,0,0,0,0,242,0,0,15,47,32,0,242,32,242,0,2,0,15,32,0,0,0,242,0,0,0,2,0,0,0,0,0,15,32,0,255,255,255,242,2,47,34,34,15,47,47,32,15,47,32,242,242,47,32,242,2,255,32,2,0,2,32,0,0,0,0,0,255,255,255,242,2,34,47,34,15,32,242,32,0,255,34,0,0,15,32,0,0,0,242,0,0,0,2,0,0,255,32,0,0,2,255,32,0,242,2,32,0,15,255,32,15,32,34,32,0,255,32,0,0,2,255,242,0,0,2,34,0,15,32,0,0,15,32,0,0,242,32,0,0,242,15,32,15,34,15,32,255,255,255,242,2,34,34,242,0,0,0,2,0,0,15,32,0,0,15,32,0,242,242,32,0,15,242,0,0,15,242,0,0,242,47,32,255,34,0,32,2,32,0,0,15,255,255,32,0,242,34,32,255,255,255,242,2,242,34,34,0,242,0,0,0,15,255,242,0,0,34,34,0,0,0,0,0,242,0,0,255,255,255,242,2,242,34,242,0,242,15,34,0,15,32,32,0,15,32,0,0,15,32,0,0,0,32,0,0,0,0,0,15,255,242,0,0,34,242,0,0,0,242,0,0,0,242,0,255,255,255,242,2,34,34,34,0,0,0,0,15,255,255,32,0,34,47,32,15,255,255,32,0,34,47,32,0,0,15,32,15,255,255,32,0,34,34,32,0,0,0,0,15,255,255,32,0,34,34,32,255,255,255,242,2,34,34,242,0,0,0,242,0,0,15,34,0,255,242,32,0,2,34,0,15,34,47,32,15,32,15,32,15,32,15,32,15,32,15,32,0,32,15,32,0,0,242,32,0,15,34,0,0,0,32,0,0,15,32,0,15,47,32,0,15,47,32,0,15,47,32,0,15,47,32,242,15,47,47,34,242,47,242,32,2,0,34,0,15,32,0,0,15,32,0,0,15,32,0,0,15,32,0,242,15,32,15,34,15,32,242,32,15,255,34,0,0,34,32,0,0,0,0,0,255,255,255,32,242,34,47,32,242,0,15,32,242,0,15,32,255,255,255,32,2,34,34,32,0,0,0,0,255,255,255,32,242,34,47,32,242,0,15,32,2,0,15,32,0,0,242,32,0,0,242,0,0,255,34,0,0,2,32,0,0,0,0,0,255,255,255,32,2,34,47,32,255,255,255,32,2,34,47,32,0,0,242,32,15,255,34,0,0,34,32,0,0,0,0,0,255,242,0,0,2,34,15,32,0,0,15,32,0,0,15,32,0,0,242,32,255,255,34,0,2,34,32,0,0,0,0,0,0,0,0,0,15,255,255,32,0,47,47,32,0,15,242,32,0,15,34,0,0,242,32,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,15,32,0,0,242,32,15,255,34,0,0,47,32,0,0,15,32,0,0,0,32,0,0,0,0,0,0,0,0,0,0,15,32,0,15,255,255,32,15,34,47,32,0,32,15,32,0,255,242,32,0,2,34,0,0,0,0,0,0,0,0,0,15,255,255,32,0,47,34,32,0,15,32,0,0,15,32,0,15,255,255,32,0,34,34,32,0,0,0,0,0,0,0,0,0,0,242,0,15,255,255,32,0,47,242,32,0,242,242,0,15,34,242,0,0,32,2,0,0,0,0,0,0,0,0,0,0,242,0,0,15,255,255,32,0,242,47,32,0,242,242,32,0,242,2,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,242,0,0,2,242,0,0,0,242,0,15,255,255,32,0,34,34,32,0,0,0,0,0,0,0,0,0,255,255,32,0,2,47,32,0,255,255,32,0,2,47,32,0,255,255,32,0,2,34,32,0,0,0,0,0,0,0,0,0,0,0,0,15,47,47,32,15,47,47,32,0,32,47,32,0,255,242,32,0,2,34,0,0,0,0,0,0,0,0,0,0,0,0,0,0,15,242,0,0,15,242,0,0,0,34,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,15,242,15,242,15,242,15,242,0,34,0,34,0,0,0,0,0,0,0,0,0,242,0,0,242,15,32,0,15,32,32,0,0,32,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,242,0,0,242,242,0,0,255,242,0,0,2,34,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Z=Uint16Array.from([856,808,762,720,678,640,604,570,538,508,480,453,428,404,381,360,339,320,302,285,269,254,240,226,214,202,190,180,170,160,151,143,135,127,120,113,850,802,757,715,674,637,601,567,535,505,477,450,425,401,379,357,337,318,300,284,268,253,239,225,213,201,189,179,169,159,150,142,134,126,119,113,844,796,752,709,670,632,597,563,532,502,474,447,422,398,376,355,335,316,298,282,266,251,237,224,211,199,188,177,167,158,149,141,133,125,118,112,838,791,746,704,665,628,592,559,528,498,470,444,419,395,373,352,332,314,296,280,264,249,235,222,209,198,187,176,166,157,148,140,132,125,118,111,832,785,741,699,660,623,588,555,524,495,467,441,416,392,370,350,330,312,294,278,262,247,233,220,208,196,185,175,165,156,147,139,131,124,117,110,826,779,736,694,655,619,584,551,520,491,463,437,413,390,368,347,328,309,292,276,260,245,232,219,206,195,184,174,164,155,146,138,130,123,116,109,820,774,730,689,651,614,580,547,516,487,460,434,410,387,365,345,325,307,290,274,258,244,230,217,205,193,183,172,163,154,145,137,129,122,115,109,814,768,725,684,646,610,575,543,513,484,457,431,407,384,363,342,323,305,288,272,256,242,228,216,204,192,181,171,161,152,144,136,128,121,114,108,907,856,808,762,720,678,640,604,570,538,504,480,453,428,404,381,360,339,320,302,285,269,254,240,226,214,202,190,180,170,160,151,143,135,127,120,900,850,802,757,715,675,636,601,567,535,505,477,450,425,401,379,357,337,318,300,284,268,253,238,225,212,200,189,179,169,159,150,142,134,126,119,894,844,796,752,709,670,632,597,563,532,502,474,447,422,398,376,355,335,316,298,282,266,251,237,223,211,199,188,177,167,158,149,141,133,125,118,887,838,791,746,704,665,628,592,559,528,498,470,444,419,395,373,352,332,314,296,280,264,249,235,222,209,198,187,176,166,157,148,140,132,125,118,881,832,785,741,699,660,623,588,555,524,494,467,441,416,392,370,350,330,312,294,278,262,247,233,220,208,196,185,175,165,156,147,139,131,123,117,875,826,779,736,694,655,619,584,551,520,491,463,437,413,390,368,347,338,309,292,276,260,245,232,219,206,195,184,174,164,155,146,138,130,123,116,868,820,774,730,689,651,614,580,547,516,487,460,434,410,387,365,345,325,307,290,274,258,244,230,217,205,193,183,172,163,154,145,137,129,122,115,862,814,768,725,684,646,610,575,543,513,484,457,431,407,384,363,342,323,305,288,272,256,242,228,216,203,192,181,171,161,152,144,136,128,121,114]),ee=Uint8Array.from([0,27,0,7,0,12,0,24,255,244,0,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,5,0,0,0,0,1,8,0,0,0,0,1,10,2,1,4,15,0,0,0,0,0,0,1,10,0,0,0,0,1,10,2,1,0,0,0,0,0,0,4,15,0,0,0,0,0,0,1,13,2,1,0,0,0,0,0,0,0,0,0,0,0,0,4,15,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,15,0,0,0,0,0,0,3,29,0,0,0,0,0,0,3,20,0,0,0,0,3,22,4,15,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,15,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,15]),te=Uint8Array.from([0,18,0,7,0,12,0,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,5,0,0,0,0,1,10,2,1,0,0,1,13,0,0,0,0,1,15,0,0,0,0,1,17,0,0,0,0,0,0,0,0,0,0,1,8,0,0,0,0,1,10,0,0,0,0,0,0,0,0,0,0,0,0,2,1,3,22,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,1,0,0]),se=Uint8Array.from([0,79,0,6,0,12,0,24,0,36,0,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,5,2,1,4,27,1,8,0,0,4,29,1,5,2,1,4,27,1,10,2,1,4,29,0,0,0,0,4,27,0,0,0,0,4,29,1,10,2,1,4,27,1,13,0,0,4,29,1,10,2,1,4,27,1,15,2,1,4,29,0,0,0,0,4,27,1,10,0,0,4,29,1,17,2,1,4,27,0,0,0,0,4,29,1,16,2,1,4,27,0,0,0,0,4,29,0,0,0,0,4,27,0,0,0,0,4,29,0,0,0,0,4,27,0,0,0,0,4,29,0,0,0,0,4,27,0,0,0,0,4,29,0,0,0,0,4,27,1,16,3,1,4,29,1,15,3,1,4,27,1,13,2,1,4,29,1,15,3,1,4,27,1,13,2,1,4,29,1,10,3,1,4,27,1,8,3,1,4,29,1,8,2,1,4,27,1,10,0,0,4,29,1,8,0,0,4,27,1,10,0,0,4,29,0,0,3,1,4,27,1,10,0,0,4,29,1,8,0,0,4,27,1,10,2,1,4,29,1,8,0,0,4,27,1,10,2,1,4,29,0,0,2,1,4,27,1,10,0,0,4,29,1,8,3,1,4,27,1,10,0,0,4,29,1,13,0,0,4,27,1,15,0,0,4,29,1,8,2,1,4,27,1,10,0,0,4,29,1,8,0,0,4,27,1,10,0,0,4,29,0,0,3,1,4,27,1,10,0,0,4,29,1,8,0,0,4,27,1,10,2,1,4,29,1,8,0,0,4,27,1,10,2,1,4,29,0,0,2,1,4,27,1,10,0,0,4,29,1,8,3,1,4,27,1,3,0,0,4,29,1,5,0,0,4,27,1,8,0,0,4,29,1,8,2,1,4,27,1,10,0,0,4,29,1,8,0,0,4,27,1,10,0,0,4,29,0,0,3,1,4,27,1,10,0,0,4,29,1,8,0,0,4,27,1,10,2,1,4,29,1,8,0,0,4,27,1,10,2,1,4,29,0,0,2,1,4,27,1,10,0,0,4,29,1,8,3,1,4,27,1,10,3,1,4,29,1,13,3,1,4,27,1,15,3,1,4,29,1,10,2,1,4,27]),ie=Uint8Array.from([0,65,0,6,0,12,0,24,0,12,255,244,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,8,2,1,4,10,1,10,0,0,4,17,1,8,3,1,4,18,1,10,2,1,4,10,0,0,0,0,4,17,1,10,2,1,4,18,0,0,3,1,4,10,1,5,0,0,4,17,1,8,2,1,4,10,1,10,0,0,4,17,1,8,3,1,4,18,1,10,2,1,4,10,0,0,0,0,4,17,1,10,2,1,4,18,0,0,3,1,4,10,1,5,0,0,4,17,1,8,2,1,4,10,1,10,0,0,4,17,1,8,3,1,4,18,1,10,2,1,4,10,0,0,0,0,4,17,1,10,2,1,4,18,0,0,3,1,4,10,1,13,0,0,4,17,0,0,2,1,4,10,1,15,2,1,4,17,1,12,3,1,4,18,1,13,2,1,4,10,1,10,0,0,4,17,1,5,2,1,4,18,1,8,3,1,4,10,1,13,0,0,4,17,1,8,2,1,4,10,1,10,0,0,4,17,1,8,3,1,4,18,1,10,2,1,4,10,0,0,0,0,4,17,1,10,2,1,4,18,0,0,3,1,4,10,1,5,0,0,4,17,1,8,2,1,4,10,1,10,0,0,4,17,1,8,3,1,4,18,1,10,2,1,4,10,0,0,0,0,4,17,1,10,2,1,4,18,0,0,3,1,4,10,1,5,0,0,4,17,1,8,2,1,4,10,1,10,0,0,4,17,1,8,3,1,4,18,1,10,2,1,4,10,0,0,0,0,4,17,1,10,2,1,4,18,0,0,3,1,4,10,1,13,0,0,4,17,0,0,2,1,4,10,1,15,2,1,4,17,1,12,3,1,4,18,1,13,2,1,4,10,1,10,0,0,4,17,1,5,2,1,4,18,1,8,3,1,4,10,1,13,3,1,4,17,1,10,2,1,4,10]),re=Uint8Array.from([0,65,0,7,0,12,0,24,0,36,0,12,0,36,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,8,2,1,0,0,1,8,5,39,0,0,1,8,0,0,0,0,1,8,5,39,0,0,1,8,2,1,0,0,1,8,5,39,0,0,1,8,0,0,0,0,1,8,5,39,0,0,1,8,2,1,0,0,1,8,5,39,0,0,1,8,0,0,0,0,1,8,5,39,0,0,1,11,2,1,0,0,1,8,5,39,0,0,1,8,0,0,0,0,1,11,5,39,0,0,1,8,2,1,0,0,1,8,5,39,4,8,1,8,3,1,0,0,1,8,5,39,0,0,1,8,2,1,4,8,1,8,5,39,0,0,1,8,3,1,0,0,1,8,5,39,4,8,1,6,2,1,0,0,1,8,5,39,0,0,1,8,3,1,0,0,1,8,5,39,0,0,1,11,2,1,0,0,1,8,5,39,0,0,1,8,3,1,0,0,1,11,5,39,0,0,1,8,2,1,0,0,1,8,5,39,4,8,1,8,3,1,0,0,1,8,5,39,0,0,1,8,2,1,4,8,1,8,5,39,0,0,1,8,3,1,0,0,1,8,5,39,4,8,1,6,2,1,0,0,1,8,5,39,0,0,1,8,3,1,0,0,1,8,5,39,0,0,1,11,2,1,0,0,1,8,5,39,0,0,1,8,3,1,0,0,1,11,5,39,0,0,1,8,2,1,0,0,1,8,5,39,4,8,1,8,3,1,0,0,1,8,5,39,0,0,1,8,2,1,4,8,1,8,5,39,0,0,1,8,3,1,0,0,1,8,5,39,4,8,1,6,2,1,0,0,1,8,5,39,0,0,1,8,3,1,0,0,1,8,5,39,0,0,1,8,2,1,0,0,1,8,5,39,0,0,1,11,3,1,0,0,1,13,5,39,0,0,1,8,2,1,0,0]),_e=Uint8Array.from([0,65,0,5,0,12,0,36,0,36,0,0,0,36,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,8,2,1,4,20,0,0,0,0,0,0,1,8,5,39,4,20,1,8,5,39,0,0,1,8,3,1,4,18,0,0,0,0,0,0,1,8,5,39,4,20,1,8,5,39,0,0,1,8,2,1,0,0,0,0,0,0,0,0,1,8,5,39,0,0,1,8,5,39,0,0,1,8,3,1,0,0,0,0,0,0,0,0,1,8,5,39,4,18,1,8,5,39,0,0,1,8,2,1,4,20,0,0,0,0,0,0,1,8,5,39,4,20,1,8,5,39,0,0,1,8,3,1,4,18,0,0,0,0,0,0,1,8,5,39,4,20,1,8,5,39,0,0,1,8,2,1,0,0,0,0,0,0,0,0,1,8,5,39,4,18,1,8,5,39,0,0,1,6,3,1,4,17,1,6,0,0,0,0,1,5,5,39,4,18,1,6,5,39,0,0,1,8,2,1,4,20,0,0,0,0,0,0,1,8,5,39,4,20,1,8,5,39,0,0,1,8,3,1,4,18,0,0,0,0,0,0,1,8,5,39,4,20,1,8,5,39,0,0,1,8,2,1,0,0,0,0,0,0,0,0,1,8,5,39,0,0,1,8,5,39,0,0,1,8,3,1,0,0,0,0,0,0,0,0,1,8,5,39,4,18,1,8,5,39,0,0,1,8,2,1,4,20,0,0,0,0,0,0,1,8,5,39,4,20,1,8,5,39,0,0,1,8,3,1,4,18,0,0,0,0,0,0,1,8,5,39,4,20,1,8,5,39,0,0,1,8,2,1,0,0,0,0,0,0,0,0,1,8,5,39,0,0,1,8,5,39,0,0,1,6,3,1,0,0,1,6,3,1,0,0,1,5,3,1,0,0,1,6,3,1,0,0,1,8,2,1,0,0]),ae=Uint8Array.from([8,44,0,64,7,42,1,2,0,0,0,0,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,4,3,5,7,8,8,11,14,15,17,20,20,22,24,28,32,30,26,26,31,34,31,25,22,39,28,200,15,127,48,160,151,15,115,80,196,150,231,21,252,253,18,12,230,239,15,248,227,255,71,78,8,210,234,39,59,34,9,3,255,242,243,3,0,234,222,212,199,194,188,180,182,184,168,150,149,153,156,159,160,160,163,164,164,179,203,215,219,223,234,253,15,28,38,55,75,87,95,106,115,120,127,127,127,127,127,127,127,127,127,127,127,127,127,120,108,100,94,88,75,64,58,46,30,22,17,11,6,254,243,233,226,221,222,227,224,215,206,204,206,211,212,207,203,207,210,207,205,207,209,214,217,211,205,211,222,223,218,216,217,223,229,228,222,223,228,234,237,238,242,244,247,245,245,254,11,12,11,15,19,19,17,19,27,38,35,27,29,28,30,32,30,31,30,21,23,32,16,7,21,20,11,11,8,4,7,4,250,251,254,251,251,251,246,241,244,249,252,0,1,254,248,247,251,3,12,17,15,8,254,254,11,27,30,17,4,4,9,12,13,8,8,12,9,0,244,242,251,3,2,250,246,245,244,246,249,250,249,253,1,2,1,254,1,12,16,13,10,8,11,20,25,26,27,25,21,23,24,21,23,30,28,22,17,17,20,25,25,23,21,19,21,26,28,30,35,40,40,36,35,40,45,47,46,46,44,40,36,32,28,22,11,2,255,249,235,224,214,204,195,186,176,166,160,153,146,140,136,136,136,133,131,133,137,140,145,154,162,171,178,187,199,214,227,241,255,12,23,35,45,57,69,80,90,99,103,106,110,114,118,122,122,118,115,114,110,107,106,102,97,93,83,75,72,69,64,60,58,51,45,42,36,32,32,32,28,27,26,22,19,18,17,18,18,16,13,11,11,9,7,7,6,5,4,2,1,254,252,252,255,0,254,251,250,250,252,253,252,253,1,2,0,0,4,8,12,14,13,16,19,22,25,27,29,30,33,35,35,35,36,38,40,38,35,33,33,35,35,31,28,28,27,26,24,22,21,20,19,17,15,14,12,10,8,3,253,250,250,249,246,243,241,239,239,239,240,243,244,242,244,249,253,0,2,3,4,5,6,7,9,8,5,1,253,249,245,241,237,230,222,217,215,213,211,208,205,203,202,200,200,203,204,206,209,212,212,214,221,228,233,235,236,239,246,252,253,251,251,252,252,252,249,246,245,243,238,235,233,231,231,231,230,229,229,230,234,238,242,246,250,254,3,10,16,21,26,29,32,35,37,37,38,38,36,32,26,21,15,9,2,248,238,228,217,207,200,193,184,175,167,160,154,151,148,146,146,146,148,151,153,157,165,173,182,191,199,209,220,231,243,255,11,22,31,41,51,59,68,77,85,90,94,98,100,102,103,104,104,104,102,99,96,93,91,89,86,82,79,75,72,70,68,66,64,63,62,61,58,57,57,58,57,55,54,53,53,53,53,52,50,49,48,46,45,43,42,41,39,38,37,36,34,33,32,32,31,29,29,31,32,31,31,31,32,35,37,38,38,41,43,44,45,46,48,50,51,52,52,53,53,53,54,54,53,52,51,51,50,49,48,47,46,43,41,41,41,40,39,39,39,38,38,38,40,40,40,39,39,38,36,34,32,29,26,21,15,10,5,1,254,250,245,242,240,237,236,235,234,233,233,233,234,235,235,235,235,234,233,230,227,225,220,216,212,206,200,195,191,186,182,177,174,171,170,168,167,166,166,167,169,171,174,175,177,179,184,188,192,195,197,199,202,205,206,207,208,210,211,210,209,207,208,208,208,207,207,207,207,209,211,213,216,219,223,227,231,235,240,246,251,255,3,8,12,14,17,18,19,20,19,17,14,10,5,0,250,244,237,229,222,214,206,198,192,186,180,175,170,167,165,164,164,164,166,169,174,179,184,191,199,207,215,223,233,244,254,8,17,27,36,45,53,61,69,75,80,85,88,91,94,96,96,96,95,94,93,91,89,88,87,84,82,79,78,77,76,74,72,71,70,70,70,70,70,69,68,68,68,69,68,68,67,67,67,67,66,65,65,64,63,61,60,60,59,58,57,56,54,54,53,52,52,52,51,50,50,51,52,53,52,52,52,54,54,54,54,55,55,55,55,55,55,55,54,52,53,52,51,50,50,50,50,49,48,48,48,47,47,48,48,48,49,49,50,50,51,52,53,54,54,54,55,56,56,56,55,53,50,47,45,41,36,32,26,20,14,8,3,254,248,243,238,234,230,226,224,222,219,217,216,214,213,211,209,208,205,202,199,196,193,189,186,182,179,176,172,169,167,165,163,161,160,160,160,160,161,161,162,162,164,166,166,167,168,169,170,171,172,172,173,174,175,176,177,178,179,181,183,185,187,190,192,196,200,204,209,213,218,223,229,234,239,245,250,255,4,8,11,13,16,18,18,17,16,14,11,8,3,254,248,241,235,228,221,214,208,201,195,189,184,180,177,174,172,171,170,171,173,176,179,184,189,195,202,210,217,225,233,242,250,2,11,19,28,35,42,49,54,59,64,69,72,75,77,79,80,80,80,80,80,79,78,76,76,75,75,74,73,73,72,72,72,72,72,72,73,72,73,73,74,75,75,75,75,75,75,75,75,75,74,74,73,72,71,70,68,68,67,65,64,63,62,61,60,59,59,58,58,58,58,58,57,58,59,60,60,60,60,61,62,62,62,63,63,62,62,62,62,61,61,60,59,57,56,56,55,54,52,51,50,50,49,48,48,48,48,48,48,48,48,49,49,50,51,52,53,54,55,56,57,58,58,59,58,58,56,55,52,49,46,43,39,34,29,24,19,13,8,1,252,247,242,237,233,228,224,220,216,212,208,203,199,195,191,186,182,178,175,171,168,165,163,160,159,158,157,157,157,156,157,157,158,158,159,159,160,160,160,160,161,161,161,162,162,162,162,162,163,165,165,167,168,171,173,176,178,182,186,191,195,200,206,211,217,223,229,235,241,246,251,0,4,8,11,13,14,14,14,12,10,8,4,0,250,245,239,232,226,220,214,207,201,195,190,186,182,179,176,174,173,174,175,176,179,183,187,191,197,203,210,217,225,232,240,249,1,9,17,24,31,38,45,50,55,60,64,67,70,72,73,74,75,75,75,74,74,73,72,71,71,70,70,69,69,68,68,68,68,68,68,68,69,69,70,71,71,71,72,73,73,73,73,74,73,73,73,72,72,71,70,69,69,68,67,66,65,65,64,64,63,62,62,62,62,62,62,62,63,63,63,64,64,64,64,64,64,64,64,63,63,62,62,61,60,59,58,57,56,55,54,53,52,51,50,49,49,48,48,48,47,47,48,48,48,48,49,50,51,52,53,54,55,56,58,59,61,61,62,63,63,63,62,62,60,59,56,54,51,48,43,39,34,30,25,20,14,9,4,254,248,243,237,232,226,220,214,209,203,198,192,188,183,178,174,171,168,165,162,160,159,158,156,155,155,154,154,153,153,153,152,152,151,151,150,149,149,149,148,148,148,148,148,149,150,151,153,155,158,160,164,168,173,178,183,189,195,202,209,215,223,229,236,243,249,255,4,9,12,15,17,18,18,17,16,13,9,5,0,251,245,239,233,226,220,214,208,201,196,191,187,183,180,177,176,175,175,175,177,180,183,187,191,197,202,209,215,222,229,237,244,252,3,11,18,25,31,36,41,46,51,54,57,60,62,64,65,66,66,67,67,67,66,66,66,66,66,66,65,65,65,65,65,66,66,67,67,68,68,68,69,70,71,71,71,72,72,72,72,72,72,71,71,70,70,69,68,67,67,66,65,64,64,63,63,62,62,62,62,62,63,63,63,63,64,64,65,65,65,65,65,65,65,64,64,64,63,62,61,60,59,58,57,56,55,53,52,51,50,49,48,48,47,46,46,46,46,46,46,46,46,47,48,49,50,51,53,54,55,57,58,60,61,62,63,64,65,66,66,66,65,64,63,62,60,57,55,52,49,45,41,36,32,27,22,16,10,5,254,248,242,236,230,224,218,212,206,201,196,191,187,183,179,176,173,170,168,166,164,162,160,159,157,155,154,152,150,149,147,145,143,142,140,139,137,136,136,135,135,135,136,137,138,140,143,146,150,155,160,166,172,179,185,193,200,208,216,223,231,238,245,251,255,4,8,11,13,14,14,14,12,9,6,3,254,250,244,239,233,227,221,216,210,205,200,196,192,188,186,184,183,182,182,183,185,188,191,194,199,203,208,214,220,226,232,239,245,251,1,7,13,18,23,27,31,35,39,41,44,46,48,50,51,52,53,54,54,55,56,56,57,57,58,59,59,60,60,61,62,63,64,65,66,67,68,69,70,71,71,72,72,73,73,73,73,73,72,72,71,70,70,69,68,68,67,66,66,65,65,65,64,64,64,64,64,65,65,65,65,65,66,66,66,66,66,66,65,65,64,64,63,62,62,61,59,58,57,56,55,54,53,52,51,50,49,48,47,46,46,45,45,45,45,45,46,47,47,48,49,51,52,53,54,56,57,59,60,61,63,64,65,66,67,68,69,69,69,69,68,67,66,64,62,60,57,54,50,46,42,38,33,28,22,16,10,4,254,248,242,236,230,224,219,214,209,204,200,196,192,189,185,182,179,177,174,171,168,165,163,160,157,154,152,149,146,143,141,138,136,134,132,131,130,130,130,130,130,131,132,134]),oe=Uint8Array.from([13,144,0,64,0,0,0,2,0,0,34,30,24,20,16,16,18,22,24,30,34,34,30,32,36,34,40,56,48,54,56,42,56,50,72,48,54,88,46,120,36,26,96,26,120,246,127,128,127,0,254,127,184,126,232,10,124,40,128,154,127,108,96,228,94,108,127,127,118,127,124,127,127,66,126,72,158,127,232,108,8,26,127,32,236,254,127,50,28,216,62,24,202,72,224,216,76,36,220,128,128,2,160,202,216,148,242,230,128,174,160,128,202,162,130,136,174,128,128,184,128,128,128,128,128,128,128,128,142,128,128,128,128,128,128,128,128,128,128,128,150,128,128,128,128,128,144,128,142,154,132,214,184,130,152,128,150,144,254,24,228,254,80,144,190,76,0,232,254,24,218,127,96,70,96,60,80,52,127,122,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,112,84,88,96,60,58,64,28,18,8,0,228,204,202,192,226,214,186,150,128,154,130,128,156,142,130,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,130,136,144,142,146,158,174,216,224,194,176,168,186,216,252,16,2,240,234,12,58,72,52,36,22,30,62,108,127,127,98,70,60,84,118,126,116,122,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,122,120,114,102,110,110,108,112,114,102,96,96,88,82,92,84,84,80,74,72,74,64,66,58,42,46,48,52,52,40,34,30,26,24,22,20,14,6,10,14,10,0,244,246,240,248,248,240,232,216,208,206,208,208,206,206,204,206,194,178,176,180,186,180,174,174,168,166,168,154,152,148,142,142,142,142,136,140,138,132,134,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,132,142,154,146,144,144,154,152,158,182,186,192,192,168,176,192,204,226,228,216,220,212,226,242,240,0,6,2,0,6,6,14,20,22,34,48,42,34,40,52,58,74,78,82,84,74,86,84,82,94,94,100,104,110,120,127,122,124,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,124,120,118,114,110,108,104,100,96,92,88,86,82,80,76,68,70,62,56,56,46,42,28,30,24,14,22,2,240,250,252,236,236,220,226,212,218,204,200,204,190,198,192,186,188,182,176,162,166,158,148,150,140,152,128,146,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,134,142,140,140,148,144,152,160,166,180,186,184,196,196,208,206,210,216,220,226,228,234,234,236,246,254,254,4,14,6,14,30,30,36,42,50,48,60,66,62,70,70,72,76,84,92,100,102,108,110,114,118,114,118,122,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,122,120,120,114,114,104,104,104,104,100,100,96,90,94,88,86,88,88,84,86,82,80,82,74,78,74,72,76,70,68,62,60,52,54,56,52,54,48,52,46,48,44,38,50,38,38,38,36,38,34,34,30,32,32,34,30,26,24,24,28,24,24,26,16,20,18,16,20,20,24,22,26,20,20,18,24,22,14,22,12,12,16,4,16,4,14,0,6,14,6,4,4,6,10,8,252,6,14,10,12,4,6,8,16,10,6,8,4,4,6,2,6,0,254,6,254,252,250,2,2,0,246,246,0,246,248,244,250,248,242,246,240,236,244,240,230,234,236,240,240,228,234,236,236,240,224,228,228,222,226,226,228,224,228,222,218,230,218,220,214,206,216,218,212,206,216,212,216,218,208,210,208,206,204,208,210,206,212,204,202,204,198,200,198,194,198,206,198,206,204,192,202,196,204,204,202,204,202,204,202,198,198,198,198,192,194,198,192,200,204,204,208,208,204,204,202,206,216,210,220,220,216,220,212,210,210,212,216,218,224,218,224,238,238,248,244,238,246,254,248,252,0,2,4,0,254,254,6,8,14,12,12,14,14,16,24,18,20,24,32,32,36,42,42,44,40,38,42,50,52,58,58,56,56,56,54,56,66,70,72,74,72,78,80,76,82,78,80,88,82,84,84,90,86,90,90,92,98,100,98,96,104,100,106,108,110,114,102,108,104,108,114,110,114,110,114,120,112,112,114,116,122,116,116,116,116,118,122,122,124,127,120,124,120,112,120,120,122,127,120,122,127,120,127,127,127,127,127,127,127,127,127,124,127,127,127,127,124,126,124,124,127,127,122,124,112,114,124,116,112,110,110,110,110,104,110,106,100,100,92,94,90,86,80,72,72,78,74,68,58,56,50,42,54,52,36,38,32,28,30,30,28,24,18,12,6,252,2,250,246,248,238,238,240,238,234,224,222,224,222,206,214,208,200,210,196,186,200,186,184,192,172,176,176,168,180,170,168,168,160,154,162,160,156,156,156,152,148,152,140,146,148,138,138,136,128,134,132,130,130,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,130,130,128,134,128,130,136,130,142,136,138,142,142,150,146,150,154,152,154,158,158,170,176,176,176,184,178,184,196,194,204,198,204,214,208,208,214,222,226,228,240,238,228,244,244,246,254,0,10,16,16,20,30,26,34,42,34,50,54,52,62,62,60,64,70,74,80,80,86,84,96,106,106,110,106,108,118,120,122,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,124,120,116,118,118,106,114,98,98,104,92,88,82,80,68,72,74,66,72,58,50,62,52,48,56,48,46,42,42,38,30,26,22,16,12,12,0,240,244,250,248,246,242,240,240,240,234,220,226,222,220,224,210,202,218,204,210,214,202,220,208,200,214,198,198,192,188,184,186,186,192,194,184,184,180,176,180,176,178,174,172,178,178,172,166,172,170,172,170,172,168,162,164,166,158,162,164,166,168,158,172,164,166,172,164,168,166,162,160,162,164,160,160,156,156,152,156,148,154,158,154,158,162,160,154,152,154,148,152,150,140,158,152,158,164,168,164,166,164,162,170,166,170,170,166,174,178,178,186,176,170,178,184,178,182,194,200,206,200,200,202,202,204,212,210,212,214,230,232,230,232,224,230,236,238,248,246,242,250,252,246,254,8,8,16,16,18,24,28,36,34,36,46,42,52,52,64,66,62,66,62,70,66,70,80,78,86,80,78,92,94,86,94,96,104,98,102,96,98,108,102,108,102,96,106,102,106,112,104,94,100,104,98,108,104,100,104,96,102,96,90,88,88,88,80,80,74,70,66,68,68,72,64,62,66,56,60,48,48,48,44,52,40,40,38,28,40,34,26,22,18,14,12,12,12,12,2,6,6,0,0,0,250,250,252,242,246,250,246,244,240,240,232,232,242,240,240,230,228,230,236,238,238,226,230,238,228,240,236,230,236,234,236,240,240,234,232,234,236,250,240,232,238,234,244,252,254,250,0,248,248,248,252,0,252,2,0,6,10,10,12,16,12,14,8,12,16,14,24,20,30,28,32,30,28,30,30,32,38,34,30,32,34,40,32,38,42,38,44,38,38,38,40,48,56,46,46,48,42,52,48,50,46,38,44,44,38,38,42,40,42,40,38,42,36,32,40,38,40,38,34,30,32,36,28,18,28,14,20,20,14,24,18,16,18,12,12,4,12,10,12,8,2,12,16,14,10,2,254,6,6,6,4,252,6,8,2,0,248,252,252,244,252,0,0,254,248,240,246,252,246,244,242,246,250,242,248,248,250,246,252,252,246,252,242,252,250,254,252,254,0,252,254,0,254,6,2,4,16,14,18,12,14,14,12,14,16,16,26,14,8,22,26,32,32,34,44,44,48,48,56,62,52,54,62,64,60,66,60,68,70,70,74,76,74,74,82,80,86,94,94,96,96,98,96,98,100,96,100,100,106,114,104,102,108,110,110,116,112,108,108,102,112,122,122,122,120,116,114,114,120,114,118,118,116,120,114,118,114,112,116,112,114,112,118,116,110,106,102,104,100,100,96,100,100,100,104,96,90,92,88,86,84,88,76,80,78,74,74,70,70,66,66,70,70,66,64,64,60,58,58,58,54,58,54,52,48,46,48,40,36,38,30,38,30,24,26,20,22,28,18,8,2,4,4,8,4,0,0,250,248,242,242,236,232,234,228,226,224,218,222,220,214,210,210,206,204,196,192,196,188,192,192,184,174,170,172,174,164,160,156,156,166,158,160,154,156,154,148,152,148,152,150,156,146,142,142,142,144,138,132,130,130,132,128,134,134,134,138,136,144,150,148,152,142,144,152,154,154,152,144,154,160,160,172,168,174,178,176,178,190,188,188,194,196,204,204,206,212,216,218,220,234,234,236,242,244,252,250,0,6,10,18,20,22,22,42,54,52,52,58,58,70,76,82,90,90,96,92,94,104,106,102,114,118,120,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,124,118,118,114,116,112,104,104,96,94,94,86,88,86,76,76,70,68,70,60,58,48,48,42,44,38,32,30,30,30,24,22,20,14,16,8,8,6,4,0,252,250,246,238,240,238,234,228,230,230,226,222,224,224,222,226,218,216,216,216,214,218,214,212,212,206,202,200,202,208,206,202,204,198,194,198,200,200,206,202,202,198,204,192,192,196,194,198,192,190,194,194,188,184,188,192,192,192,192,192,200,198,196,194,198,194,194,196,198,192,188,196,194,198,198,198,198,196,192,198,206,198,200,200,198,192,194,200,204,202,204,202,196,204,206,200,204,200,198,198,198,208,202,200,198,200,210,208,204,202,206,208,212,212,214,212,214,214,214,212,210,212,216,210,214,216,214,218,212,212,210,216,224,224,224,220,222,222,226,224,220,226,224,224,228,230,230,228,228,226,224,230,236,232,230,232,232,234,236,238,240,236,234,234,236,244,242,242,236,238,240,238,242,242,242,246,248,244,246,250,248,248,248,252,252,248,248,250,0,0,4,8,4,2,2,4,16,20,16,18,12,12,18,18,20,22,22,24,26,30,32,32,34,32,30,34,40,40,42,44,46,48,50,52,56,54,54,54,54,62,66,66,66,66,70,72,72,78,74,84,88,88,90,90,92,98,98,94,104,102,106,112,110,112,114,114,118,122,118,116,120,120,124,127,122,124,126,126,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,126,127,127,127,127,126,127,122,124,124,124,116,106,108,110,110,108,96,96,94,94,92,86,84,86,84,82,84,76,70,68,66,64,60,60,60,56,50,50,44,44,38,36,38,32,34,30,28,24,16,24,16,16,12,12,8,12,12,2,0,252,0,252,248,242,242,234,234,238,240,242,230,228,228,230,232,234,230,226,228,224,226,224,220,210,214,216,218,218,208,212,214,208,206,210,208,204,202,204,204,202,204,204,204,202,198,198,196,196,196,196,192,198,194,198,200,194,194,194,192,198,198,194,196,198,194,194,196,200,198,196,192,192,188,190,190,192,194,192,196,192,192,194,190,194,198,202,198,196,192,192,192,194,198,200,198,200,200,198,198,202,202,204,206,204,204,214,218,220,220,222,218,218,226,226,232,230,230,230,236,240,242,242,242,244,248,252,252,2,4,4,6,12,14,16,16,22,26,26,30,32,36,36,36,38,42,48,46,50,54,56,64,62,62,62,66,66,68,76,80,84,84,82,80,84,92,90,92,94,92,94,98,100,102,100,100,102,102,102,104,108,110,110,108,106,108,106,110,106,110,106,112,112,106,108,104,106,110,108,108,100,98,100,102,108,104,98,96,94,100,102,96,94,92,92,92,88,84,86,80,82,76,70,72,66,70,74,64,58,56,58,54,48,42,38,44,48,42,38,42,42,34,28,24,28,22,20,22,14,18,20,10,6,8,0,4,2,0,252,252,254,248,246,242,240,242,240,236,234,234,234,238,234,230,232,226,230,232,230,234,228,226,224,224,224,222,226,228,224,224,224,226,226,224,226,228,224,224,226,226,228,230,230,230,230,238,232,230,232,230,230,236,240,238,238,236,238,242,244,248,244,248,248,248,250,254,0,2,2,2,2,2,4,8,10,8,12,10,14,14,12,12,16,16,18,22,24,26,24,22,24,24,22,26,30,30,30,24,28,30,30,28,26,32,30,36,36,36,34,32,34,34,38,34,32,32,38,38,32,30,30,30,28,26,28,32,32,34,34,36,32,30,32,34,38,32,34,36,36,30,28,28,34,34,28,32,32,30,28,28,26,26,28,30,28,26,26,24,28,26,24,30,24,28,20,18,18,22,16,14,22,20,22,16,14,18,22,22,20,24,16,16,16,18,16,16,8,8,6,8,8,6,12,8,8,6,8,8,10,8,10,12,6,4,4,6,4,4,6,4,2,6,6,2,4,4,6,8,6,4,4,6,12,10,2]),ne=Uint8Array.from([17,140,0,32,0,0,0,2,0,0,66,80,67,24,246,238,229,207,199,183,172,170,171,217,46,123,127,121,39,236,205,230,3,252,233,225,226,245,255,14,35,41,19,213,152,139,161,187,223,233,3,54,101,114,85,35,1,223,194,160,133,144,195,239,24,64,83,85,38,219,158,144,193,10,61,89,88,84,98,104,87,74,43,243,181,140,148,195,2,32,4,205,175,172,217,3,13,13,15,1,250,6,48,92,117,111,58,0,241,255,250,226,178,163,188,216,215,205,197,198,202,206,199,193,232,41,70,71,88,115,127,95,14,190,172,218,35,80,79,31,254,251,237,204,198,203,192,171,171,214,35,127,127,127,62,235,202,230,255,246,232,235,231,229,246,20,34,36,23,220,157,145,178,220,237,226,238,33,90,110,98,58,254,202,189,173,147,157,199,232,255,36,80,96,58,241,169,154,190,0,72,109,89,72,88,92,74,56,36,231,149,132,133,196,19,54,31,226,164,162,216,2,6,1,15,21,14,46,98,115,106,83,25,224,210,228,241,208,166,166,207,247,235,210,196,177,169,198,212,211,251,58,86,80,79,110,124,82,252,167,154,198,10,68,73,24,0,15,9,223,196,203,206,185,194,232,38,118,127,127,58,215,187,228,1,237,203,205,216,217,242,28,31,27,30,242,191,172,198,246,253,236,240,27,88,104,88,62,254,197,186,173,144,152,194,231,247,6,57,87,74,17,189,164,199,3,89,126,90,59,65,72,55,36,24,234,149,132,142,201,32,63,31,222,153,172,253,59,66,37,35,29,250,5,62,84,87,70,12,220,215,245,17,218,138,132,139,220,251,241,239,215,197,229,251,242,250,31,56,53,51,108,127,120,31,166,132,152,214,35,59,8,231,2,26,2,226,227,228,185,177,218,34,123,127,127,52,211,199,12,51,12,201,179,193,193,221,29,46,32,20,239,203,208,247,38,12,195,166,214,54,103,104,89,27,205,186,184,156,143,166,194,208,236,59,119,109,41,198,162,198,7,89,127,92,43,45,65,53,37,31,245,149,132,139,214,46,67,14,188,132,132,237,59,65,33,34,42,23,36,100,115,79,41,245,215,233,18,41,229,134,132,132,222,6,249,241,213,176,199,228,223,224,1,27,34,50,118,127,127,59,183,133,154,208,23,50,1,226,251,26,11,241,240,228,160,135,175,254,98,127,121,53,225,218,38,78,43,228,200,200,186,200,10,31,19,14,251,235,248,26,63,17,183,149,189,28,78,87,83,33,216,203,209,186,167,168,172,167,186,30,118,126,69,220,170,187,238,68,120,91,54,58,74,55,39,45,21,187,134,146,199,12,39,4,199,143,157,248,55,46,5,8,21,13,28,88,103,76,46,18,1,13,42,53,231,138,132,132,218,8,17,13,236,188,190,213,212,211,237,255,0,19,104,127,127,97,225,144,131,164,236,31,13,246,12,43,31,15,20,9,196,152,169,236,65,124,120,57,232,216,22,70,39,225,192,175,160,181,251,35,31,22,6,248,5,45,78,39,201,142,173,5,70,104,106,54,232,202,202,184,164,165,164,154,174,5,102,127,85,240,174,166,212,42,102,85,41,46,73,71,64,61,24,194,134,133,188,6,49,40,229,154,141,213,44,55,21,4,0,250,24,96,126,107,60,17,242,242,22,43,248,153,132,132,193,250,16,13,231,188,182,209,222,218,233,250,253,21,90,127,127,118,12,185,145,165,225,15,1,222,230,9,19,24,37,24,224,180,178,228,40,94,112,71,5,238,21,70,58,1,216,190,165,173,223,10,23,9,248,236,245,33,69,52,235,167,180,249,52,94,99,53,239,194,187,191,185,181,173,148,153,208,29,88,68,3,213,197,234,58,115,115,66,48,58,60,59,67,43,236,178,156,191,244,20,20,224,155,137,193,30,63,41,20,3,248,23,76,108,95,51,15,255,252,19,31,250,178,132,132,176,229,16,27,245,195,168,192,230,248,4,9,252,12,63,121,127,98,8,194,149,152,207,4,25,3,249,4,14,27,48,39,254,209,193,237,36,69,88,62,14,250,16,62,58,15,230,187,148,154,192,243,11,3,246,250,12,54,82,56,239,162,163,220,26,81,104,63,3,211,200,205,206,196,176,140,134,182,6,79,79,35,248,221,239,47,91,91,49,27,29,34,45,63,44,5,222,192,202,231,246,250,217,168,162,209,34,68,56,31,2,240,17,56,77,72,39,10,3,1,21,28,252,190,133,132,168,224,24,44,4,215,194,209,237,255,2,2,252,25,68,107,127,93,27,221,168,155,187,217,229,216,218,236,8,41,65,44,8,233,219,249,34,55,65,50,26,34,60,95,78,24,222,161,132,134,164,200,233,246,255,14,33,66,78,53,255,193,192,237,32,85,103,62,20,237,217,204,194,181,169,148,156,186,231,32,43,19,246,220,241,50,87,95,63,44,42,42,42,31,247,222,216,205,220,239,247,251,225,188,183,215,21,49,38,11,238,248,53,95,100,83,51,21,3,246,241,231,211,184,142,137,168,222,38,64,26,237,204,198,217,238,251,1,11,46,74,88,108,83,39,245,188,160,175,194,214,220,236,5,29,61,66,32,11,253,239,254,18,31,34,15,251,5,35,79,85,49,246,175,140,155,177,208,242,255,1,3,30,74,102,96,46,213,171,174,217,31,56,30,7,243,230,221,212,206,188,173,172,173,196,2,38,46,37,11,19,56,73,65,37,23,27,35,43,21,231,222,235,235,247,254,1,4,230,196,189,214,22,54,49,18,230,241,52,92,85,58,15,239,225,230,248,3,1,235,183,162,171,217,42,74,36,245,219,216,226,236,242,227,226,250,9,21,47,54,49,25,229,199,195,202,210,216,235,8,41,85,95,58,35,27,11,11,10,4,248,220,207,223,8,60,71,47,0,186,165,199,222,224,227,222,224,239,27,86,119,118,72,250,203,189,208,2,13,240,224,233,251,4,1,254,230,211,205,184,179,211,240,10,19,3,19,59,80,63,28,8,8,18,35,11,213,207,241,10,31,35,27,16,238,205,195,219,12,41,39,10,214,219,37,81,77,50,10,238,230,244,7,10,4,239,199,176,174,203,19,57,34,5,248,247,251,250,239,213,208,243,8,20,43,51,48,36,252,224,213,202,189,184,201,233,21,77,91,48,26,26,23,26,24,7,242,214,207,235,24,68,80,64,26,214,184,208,216,204,201,200,209,230,16,71,103,113,79,9,211,186,191,236,4,242,234,251,10,14,5,247,220,203,203,186,180,213,251,28,41,28,32,59,72,49,19,1,2,20,47,34,233,212,230,245,1,7,6,0,237,214,206,230,18,47,49,21,223,217,22,66,63,42,14,248,237,245,255,1,4,240,199,168,161,192,9,55,41,11,1,253,254,255,244,217,209,233,250,7,33,49,52,41,7,233,223,213,194,185,198,226,13,71,91,60,40,40,30,15,5,250,239,226,215,226,13,58,81,75,36,224,192,214,224,206,194,200,219,245,25,57,81,96,72,20,222,186,190,232,1,239,227,247,14,23,22,6,232,216,209,186,172,188,231,18,41,36,29,49,63,44,17,255,245,252,21,20,242,239,11,26,20,3,251,251,252,237,221,231,254,24,40,29,246,227,13,46,40,24,14,2,252,254,255,252,1,238,208,179,168,191,252,39,29,255,243,241,234,240,246,235,232,242,243,253,18,48,64,57,25,244,227,221,204,200,221,238,10,46,60,40,32,38,38,17,250,241,235,234,234,243,25,58,70,69,35,236,204,214,222,209,198,214,231,248,16,33,50,70,55,20,232,197,194,227,1,253,245,253,10,4,2,254,236,226,221,194,178,186,226,15,35,32,19,24,43,41,30,24,8,2,13,10,246,252,19,39,23,255,243,239,248,248,229,228,240,255,21,19,251,241,9,36,40,25,23,14,1,253,246,245,6,0,236,209,188,204,249,30,28,255,235,230,222,233,243,241,240,245,237,241,3,39,64,55,22,238,222,225,222,214,220,229,250,31,48,42,43,47,48,21,246,235,235,245,255,253,16,44,62,67,42,250,218,216,221,209,193,205,225,246,18,31,41,57,50,24,239,203,200,224,248,250,243,255,25,31,28,16,243,226,217,188,162,157,191,246,26,41,37,32,38,36,22,12,254,250,7,10,1,12,37,63,56,27,2,234,230,234,226,225,237,253,18,19,4,254,10,25,24,5,0,255,250,1,253,247,4,10,255,230,202,206,228,254,9,0,251,2,254,252,254,241,245,251,239,228,229,2,39,50,44,18,247,235,224,209,211,217,237,14,27,26,33,50,68,56,20,247,221,222,241,253,17,42,55,59,35,255,239,239,237,214,180,173,198,230,18,32,30,42,50,43,12,227,214,216,226,239,242,254,24,32,26,10,240,235,236,215,184,164,179,230,18,48,51,33,29,25,16,20,19,13,12,251,239,244,12,45,49,21,255,233,237,254,253,247,243,242,253,1,0,10,22,36,37,18,11,6,250,249,233,225,239,254,0,242,220,224,235,245,251,243,240,255,251,247,248,243,3,12,254,239,232,248,28,35,33,16,250,243,230,206,209,225,255,28,26,15,11,25,52,54,23,253,225,226,248,5,20,43,51,48,20,247,243,249,1,242,201,184,198,224,7,17,12,20,35,38,24,249,232,224,217,218,219,238,18,33,26,12,251,254,3,242,208,173,170,209,251,32,46,34,27,21,8,7,13,16,20,2,245,245,9,40,50,28,8,244,247,8,8,250,246,242,243,241,237,252,8,24,30,11,255,0,1,4,247,234,236,251,0,248,239,240,247,247,247,235,236,255,11,4,248,233,238,247,247,238,235,247,16,29,34,30,14,4,248,222,208,224,255,29,32,23,16,20,40,47,24,248,221,218,243,8,15,31,38,28,7,246,248,2,11,2,222,194,201,230,8,16,2,254,13,24,23,6,241,226,214,219,226,235,9,37,39,26,9,3,5,249,221,193,183,204,241,21,37,21,6,5,0,251,2,7,7,252,247,255,15,36,52,44,21,4,3,19,23,1,241,236,234,237,245,5,12,18,23,15,251,242,241,243,238,232,239,5,16,10,2,250,244,236,237,233,227,236,1,11,8,1,251,245,237,229,234,248,7,22,27,27,14,5,2,237,213,214,239,13,26,30,26,21,23,29,24,4,241,236,250,11,11,21,35,28,8,248,246,0,10,9,246,214,202,223,252,9,4,251,6,16,16,13,2,238,219,213,215,222,246,25,45,36,18,3,251,244,223,203,195,202,233,12,33,30,17,16,11,254,249,255,255,251,255,6,19,28,37,42,27,13,9,21,27,10,249,243,238,233,240,252,3,7,12,13,4,243,244,246,239,230,226,243,3,6,13,17,11,0,246,238,233,235,251,9,3,250,242,234,233,231,239,253,255,1,3,6,8,7,6,251,230,223,242,7,23,32,29,27,22,16,13,252,236,237,249,8,13,13,23,24,14,11,14,18,16,4,243,224,213,231,254,8,4,246,245,254,1,3,1,239,217,206,209,231,1,31,51,43,22,3,245,244,234,224,222,221,236,254,13,17,10,4,3,251,238,237,240,252,12,23,31,32,26,31,25,17,13,16,23,17,254,246,244,242,246,255,254,249,245,249,255,245,244,250,252,254,251,255,11,12,10,11,2,245,236,235,237,239,247,10,10,252,234,219,220,230,243,4,8,7,11,16,19,17,9,3,244,225,227,240,7,30,37,31,13,251,252,250,243,246,252,10,16,16,16,21,19,21,19,14,2,247,243,240,227,233,250,4,2,245,239,245,255,8,11,253,234,225,226,237,249,9,35,36,19,252,233,229,233,236,238,232,232,241,250,0,0,1,8,11,251,243,241,254,21,36,39,27,11,9,6,5,12,20,24,15,250,233,234,243,1,5,255,247,247,5,14,5,0,3,3,254,243,237,242,1,11,17,7,247,235,229,228,227,234,3,17,7,241,224,224,244,11,21,13,1,253,1,6,9,9,9,4,241,229,233,252,17,25,17,255,247,0,4,2,1,9,23,31,27,10,3,1,7,10,9,5,1,255,249,231,229,245,1,253,239,227,229,253,19,25,11,247,234,233,241,249,1,21,30,15,249,233,232,243,251,244,232,229,238,248,254,255,255,6,13,4,247,248,9,31,41,35,18,9,9,7,253,253,6,16,20,3,233,226,238,0,9,4,255,0,9,15,1,247,255,6,5,249,235,236,3,19,19,4,241,229,221,221,221,231,3,26,17,247,225,229,253,21,19,1,245,246,253,5,10,8,8,9,249,231,234,1,26,35,22,254,246,0,7,4,4,14,28,39,34,6,247,249,254,2,0,252,250,255,254,242,235,249,6,3,243,225,221,248,18,22,11,252,239,233,239,244,253,16,27,11,233,214,213,232,253,250,242,241,252,4,9,11,5,6,11,1,237,238,11,35,48,39,17,5,4,0,248,244,254,12,21,15,245,237,253,10,11,4,1,1,11,14,254,239,244,3,7,254,232,225,248,15,17,5,244,229,220,223,225,234,4,29,24,252,231,230,252,18,11,250,238,240,250,3,9,3,1,6,253,233,235,5,29,35,22,252,242,249,7,13,13,18,27,39,39,11,247,249,248,247,243,246,247,1,3,251,243,253,11,10,248,223,212,238,12,19,17,7,249,241,243,247,255,13,27,6,225,205,207,230,0,1,245,243,250,3,5,5,253,249,1,253,234,243,18,44,53,40,16,4,3,6,255,247,250,6,21,21,253,238,255,9,6,0,252,254,8,9,251,238,243,5,10,1,236,229,253,19,16,2,243,233,226,226,224,229,253,28,28,254,232,230,252,20,17,253,244,243,249,251,253,248,249,4,2,234,236,7,30,37,22,248,235,243,0,10,17,30,40,51,46,15,248,254,1,247,238,235,242,3,9,1,243,243,252,250,239,220,213,237,12,16,13,10,8,2,252,246,244,3,27,21,240,215,206,226,254,3,247,245,243,245,246,254,3,8,16,3,229,229,6,39,55,43,12,254,254,4,9,6,7,8,11,8,244,235,4,21,13,1,249,2,17,20,4,240,237,255,7,3,238,226,246,17,13,1,247,237,225,216,213,221,249,28,31,0,231,225,249,27,30,11,252,244,240,241,250,1,10,16,6,229,219,246,20,36,23,248,232,237,253,13,22,31,35,38,35,10,247,3,12,255,242,236,243,4,16,11,253,247,254,0,249,232,218,234,3,7,4,11,13,8,251,238,233,248,16,17,237,211,201,224,4,19,12,3,248,236,231,238,252,8,18,9,234,226,2,39,60,49,17,249,242,248,1,7,16,17,16,9,247,239,5,21,9,250,242,249,7,15,7,246,241,1,12,15,253,236,243,7,10,3,1,251,242,229,221,222,243,20,27,254,226,212,230,7,23,14,0,242,232,230,239,1,17,27,20,243,227,247,16,33,26,253,230,228,244,9,25,37,40,38,28,2,242,255,13,8,252,241,244,5,21,21,4,246,247,247,246,233,222,227,246,252,251,3,10,13,5,249,241,250,19,24,252,223,205,212,244,15,19,11,251,234,226,228,244,2,13,5,230,219,246,30,61,64,38,8,247,250,4,13,17,14,8,1,245,242,7,26,20,2,240,238,249,7,4,245,238,247,6,18,14,254,251,2,4,253,251,250,243,233,226,222,239,13,25,8,238,219,226,254,17,19,5,246,233,229,236,253,14,26,22,249,229,238,2,23,19,255,233,226,241,6,25,39,42,37,30,10,252,4,17,13,253,239,241,254,16,24,11,253,246,245,246,238,224,222,231,239,245,2,18,25,19,9,251,248,8,11,247,219,203,212,242,17,30,25,10,241,226,222,231,242,254,253,234,226,246,28,55,57,36,7,243,242,248,5,13,12,11,14,6,1,12,28,24,6,246,242,245,251,254,244,241,249,9,20,19,3,254,254,253,244,241,241,242,235,231,230,239,5,21,14,248,227,227,242,2,9,5,255,242,233,233,244,4,19,25,7,243,239,255,16,18,3,240,227,232,248,17,39,48,46,38,18,0,0,9,9,251,236,235,249,12,27,23,10,252,245,243,239,228,223,226,231,236,253,20,34,31,16,0,246,252,1,247,222,203,204,229,4,23,27,19,255,233,224,226,234,244,247,238,231,245,23,55,64,47,21,252,244,246,0,6,9,5,6,6,6,16,28,30,14,249,240,241,249,1,254,250,249,0,10,16,8,1,254,250,240,235,237,242,242,237,233,233,253,14,19,6,243,234,242,254,5,1,251,241,234,233,242,253,11,19,11,250,238,242,3,12,7,248,233,237,253,24,42,48,43,34,22,9,7,10,10,255,239,234,246,10,28,26,11,251,243,243,247,238,228,223,227,235,250,13,29,30,20,3,245,242,247,250,235,215,208,223,251,20,27,19,2,243,232,232,237,241,242,238,233,240,10,38,50,42,20,254,247,253,5,7,1,251,255,8,18,26,34,35,23,3,247,247,254,4,255,246,240,248,6,16,14,5,253,249,245,236,233,235,238,238,237,239,250,8,18,13,253,240,239,248,254,250,243,235,233,234,243,255,6,13,10,0,243,244,2,12,10,251,238,241,3,25,40,42,36,25,17,9,6,3,5,252,237,231,244,11,34,38,23,0,243,246,253,255,240,227,222,231,246,11,27,32,19,255,240,232,235,241,237,220,212,218,245,16,31,27,13,250,238,235,239,241,240,239,241,246,9,34,45,41,18,251,241,244,252,3,0,254,253,7,23,33,36,36,21,253,241,241,251,3,2,249,240,244,4,17,23,11,250,240,236,234,241,249,253,249,241,239,245,2,20,18,253,235,227,236,251,0,251,243,232,231,236,248,4,8,11,3,243,243,2,16,19,4,244,241,0,23,40,40,31,18,11,13,11,8,6,248,232,227,236,7,31,38,25,255,242,246,254,4,248,228,220,224,241,11,29,35,23,1,241,231,232,243,239,223,211,213,239,15,33,31,13,247,236,235,242,246,241,237,238,240,1,27,42,43,20,253,242,246,0,7,0,251,247,2,24,40,45,42,26,5,246,241,251,1,255,243,231,235,1,20,31,25,0,236,228,226,234,243,248,248,243,243,251,9,27,28,7,241,224,226,242,250,248,241,232,231,238,249,6,9,9,6,247,241,253,8,15,4,246,243,3,26,41,38,25,9,3,10,15,9,4,248,235,232,242,9,30,37,23,251,235,242,1,12,5,235,216,218,236,6,27,31,19,255,241,231,231,242,247,232,218,213,233,12,35,37,21,252,241,237,241,244,232,228,233,239,251,18,31,35,21,2,247,252,5,13,4,249,243,251,22,42,48,42,27,5,248,244,253,3,2,245,231,227,248,17,33,30,5,237,228,227,236,246,253,252,244,243,243,251,14,24,11,245,228,229,245,255,251,240,229,230,241,255,10,9,9,8,253,244,250,5,10,0,241,236,253,25,45,42,24,3,252,10,19,18,11,2,246,240,245,8,25,33,20,248,230,236,1,16,10,236,213,216,233,3,19,25,17,3,247,239,237,246,252,238,220,214,227,1,26,27,10,245,237,238,242,244,234,231,237,245,255,17,32,37,27,10,2,3,12,16,3,244,236,245,15,37,39,33,23,9,251,247,253,1,1,249,236,234,253,23,38,34,7,236,227,226,231,238,248,253,249,247,243,247,7,21,13,247,229,225,239,253,255,248,243,243,245,248,253,253,0,3,252,241,239,253,6,4,248,244,1,25,39,37,21,5,1,15,24,21,13,7,2,250,249,3,16,25,19,251,231,233,253,15,15,244,220,215,230,249,9,18,19,8,253,243,238,248,4,255,234,219,221,244,13,20,10,253,245,243,243,243,234,231,239,246,249,0,15,25,25,16,6,4,13,17,6,246,239,244,13,33,39,34,26,17,4,251,251,1,2,251,236,229,243,13,33,34,14,245,232,231,235,239,247,251,249,244,240,242,2,19,19,253,232,224,232,246,253,250,247,248,251,254,255,254,0,5,2,244,237,245,1,5,254,249,255,15,27,25,11,0,0,13,26,26,19,14,9,255,251,1,16,28,26,4,235,232,251,12,14,248,224,216,227,245,5,17,20,14,255,243,233,240,254,3,243,227,225,240,3,14,9,253,246,241,237,234,231,233,246,253,253,255,11,22,24,17,8]),le=Uint8Array.from([1,248,0,64,0,0,0,2,0,0,14,13,244,15,255,12,16,225,201,213,242,23,44,5,27,80,29,31,64,27,9,43,254,224,10,39,223,235,31,65,86,46,6,236,192,167,207,229,36,44,43,83,54,44,21,31,30,24,24,21,217,214,3,238,239,63,56,54,54,15,232,201,198,224,33,247,8,60,69,20,51,55,42,23,3,33,16,21,252,205,213,246,18,70,36,252,243,34,10,215,232,2,249,12,61,70,37,22,48,12,242,22,53,248,241,1,3,7,246,17,8,14,20,31,15,245,253,3,14,227,17,43,38,35,33,24,255,17,12,8,7,5,6,10,24,15,15,14,12,5,18,44,1,253,5,246,246,21,41,27,12,9,42,18,8,20,0,248,3,38,20,17,12,30,0,250,20,21,10,4,7,5,8,9,24,3,9,26,26,33,18,17,6,1,12,243,29,31,21,16,17,16,5,6,21,2,247,12,23,22,1,251,9,1,19,45,40,14,7,28,251,1,23,25,2,7,21,20,13,20,253,246,5,22,35,16,14,8,253,9,11,22,26,17,19,7,16,24,11,2,13,14,19,30,35,12,248,0,5,9,6,26,27,1,12,12,8,12,23,24,8,12,25,19,6,6,4,4,17,35,33,20,12,9,3,8,14,18,8,10,10,2,16,21,12,10,15,22,31,28,20,5,245,2,22,20,23,28,27,8,6,15,10,3,12,20,9,14,27,9,251,5,15,16,29,33,27,9,9,2,6,7,14,22,16,21,23,14,13,10,8,2,15,33,22,12,9,3,252,7,25,25,15,34,23,6,3,12,13,254,17,28,19,20,23,13,252,253,22,22,20,25,16,2,0,10,12,10,23,21,22,17,18,20,4,255,12,16,17,29,26,10,6,14,0,7,22,18,15,15,18,7,2,19,10,9,21,27,25,13,12,7,0,7,21,23,16,20,25,6,2,16,12,10,15,21,17,12,18,13,6,6,14,23,19,18,22,10,6,14,18,12,19,28,12,12,20,12,7,15,13,7,15,25,17,15,16,13,9,11,19,20,16,14,17,10,7,11,23,15,13,23,20,11,16,17,6,6,16,19,15,16,19,14,7,14,19,14,13,19,15,14,21,17,11,13,15,10,14,20,20,12,15,11,11,17,19,16,12,11,15,16]),he=Uint8Array.from([9,228,0,64,0,0,0,2,0,0,12,12,12,12,12,12,12,12,12,12,12,12,12,8,12,12,12,16,20,40,40,40,40,44,40,36,36,28,28,28,16,20,20,16,16,8,8,4,12,0,12,4,4,4,20,4,0,20,28,12,0,244,228,196,184,180,176,168,164,160,160,160,164,176,196,204,212,220,224,232,236,244,248,252,4,4,36,60,60,68,80,92,92,92,100,104,104,92,100,100,108,104,108,120,116,104,100,108,108,88,104,88,52,56,72,88,88,60,8,220,196,156,128,128,128,128,128,128,128,128,128,128,128,140,152,156,164,168,188,208,216,240,8,12,12,16,24,32,40,72,92,108,124,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,124,127,127,116,104,92,76,60,44,40,44,48,52,52,36,28,20,28,32,32,12,0,244,228,204,188,180,180,168,148,128,128,128,128,132,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,132,132,140,160,192,212,208,228,236,240,248,16,32,76,100,104,108,120,127,127,127,127,127,108,100,88,52,44,52,56,44,20,20,32,44,56,52,52,60,60,60,44,56,84,112,127,127,127,127,127,116,120,120,124,108,116,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,116,76,76,76,48,20,20,4,16,28,244,204,172,132,136,128,128,128,132,168,128,128,128,132,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,172,128,128,164,252,20,0,0,248,60,112,100,48,236,52,127,68,127,127,127,127,127,127,127,127,127,112,127,127,127,127,127,127,127,127,127,127,112,104,76,104,127,127,127,72,60,68,44,92,104,48,24,48,248,68,76,84,72,32,20,236,224,244,12,32,252,28,28,4,92,60,20,64,204,188,244,0,44,236,236,132,128,156,204,144,128,140,128,128,128,180,236,144,196,56,172,188,172,128,132,164,148,204,204,212,16,148,164,220,172,204,8,244,228,4,236,76,12,4,52,40,36,80,40,24,28,0,12,28,72,116,84,60,28,224,204,4,216,212,216,244,72,68,60,84,60,127,64,28,108,108,127,127,92,100,72,80,32,0,48,12,20,40,44,80,112,108,84,84,108,84,40,92,60,127,116,127,127,92,124,88,88,60,216,16,204,204,160,136,164,188,140,204,240,200,176,140,188,212,128,128,148,148,132,168,128,248,208,224,188,128,128,180,132,212,156,160,212,200,0,204,20,212,8,232,68,76,236,16,28,4,36,80,44,84,100,116,60,36,0,32,36,80,120,104,36,40,68,92,88,84,92,124,127,100,252,44,8,88,36,80,212,4,72,76,80,76,224,220,220,76,216,40,96,200,44,204,148,192,92,84,68,28,236,36,240,204,28,228,127,28,212,172,160,156,236,216,28,248,32,4,216,216,228,196,20,204,212,208,160,220,184,128,232,0,44,236,228,36,127,232,20,212,220,244,236,68,116,28,160,156,204,204,4,196,20,108,127,16,160,28,127,88,68,88,76,28,8,52,244,204,16,228,248,80,24,16,60,12,48,68,204,212,72,112,200,32,84,12,208,248,96,172,228,232,56,232,252,244,212,52,84,12,20,116,68,20,12,0,12,200,52,84,108,127,48,232,24,208,176,8,32,208,56,52,204,127,28,20,44,48,220,224,244,52,40,200,172,168,20,172,144,188,204,212,212,212,228,12,20,252,208,236,28,36,12,8,236,20,112,44,196,132,204,164,44,36,160,12,116,4,228,12,4,220,28,244,212,252,204,148,212,84,36,8,204,212,244,68,84,12,24,40,240,24,104,40,96,108,68,196,20,100,116,124,92,127,127,127,32,88,127,40,127,88,104,24,84,4,8,228,20,52,8,220,228,8,60,36,172,236,244,204,244,28,228,12,244,208,232,208,220,188,160,236,180,180,40,216,244,220,188,40,68,240,248,224,252,200,28,76,236,0,248,0,200,204,220,188,208,172,224,204,244,248,240,8,16,28,236,48,40,68,52,144,52,60,196,224,204,0,52,248,52,180,52,60,52,236,252,124,52,204,12,76,16,68,32,20,60,120,100,80,32,76,127,32,36,52,12,28,40,4,72,4,92,96,16,28,24,16,236,32,16,172,224,16,12,208,204,36,228,188,232,88,0,188,0,76,244,188,244,40,220,180,236,36,240,4,228,176,240,176,200,60,44,184,184,220,240,16,216,236,44,8,248,200,244,44,12,12,16,224,220,40,28,32,56,252,52,244,8,60,100,44,196,228,228,204,8,127,60,236,20,216,20,72,28,116,28,24,116,52,244,224,68,68,88,76,80,40,76,72,8,8,64,100,60,44,20,76,64,92,16,252,60,40,244,244,8,236,0,52,40,128,240,220,244,252,212,240,52,232,236,188,144,136,52,244,156,172,196,220,212,204,244,228,228,44,212,8,236,60,16,20,36,0,68,52,44,248,12,28,68,92,252,36,20,212,36,127,240,52,228,200,232,240,44,220,12,40,164,188,20,96,244,44,244,232,20,232,28,4,40,96,12,12,40,68,60,24,76,76,104,4,232,40,12,44,124,88,92,76,104,127,96,108,48,236,12,252,224,48,52,0,8,28,248,172,204,12,8,44,232,8,12,180,212,196,0,236,204,228,16,228,248,160,172,208,244,20,4,196,232,220,0,8,240,208,216,212,16,224,8,28,248,204,244,248,20,4,28,32,4,216,236,0,20,20,236,36,244,16,4,196,20,48,40,60,204,48,68,68,16,60,76,12,76,44,72,80,92,44,36,127,72,76,36,48,24,64,36,12,244,68,48,72,40,24,252,220,220,52,252,232,236,76,80,244,232,32,24,12,32,32,44,232,236,16,224,252,28,60,36,28,60,28,12,28,188,172,4,80,20,228,248,236,204,228,212,224,216,244,244,212,180,188,200,252,204,208,236,228,240,236,204,208,224,148,184,232,36,4,204,12,228,236,212,0,228,8,24,0,236,236,236,40,212,236,44,68,68,44,48,84,120,112,60,52,124,127,68,44,92,84,76,68,92,32,20,28,92,120,52,60,52,64,64,84,60,4,20,20,44,44,44,44,12,212,52,8,228,0,20,20,4,12,220,228,244,36,236,200,180,204,216,188,208,224,236,196,248,196,228,212,196,20,244,220,220,176,160,228,12,248,12,236,180,172,236,12,216,28,48,60,12,212,12,248,244,252,40,60,40,48,60,56,4,4,244,24,80,12,248,36,240,52,32,12,8,244,24,216,220,20,36,236,4,44,248,48,28,44,12,12,28,24,36,52,60,44,56,60,28,56,60,40,88,84,36,36,68,48,16,236,44,28,28,20,248,12,8,0,4,248,232,0,20,220,244,228,220,240,244,236,228,32,28,228,0,220,244,244,232,248,40,20,0,4,92,28,224,4,240,244,12,36,228,240,220,244,248,224,12,236,236,248,228,212,8,4,228,240,20,244,244,240,8,8,4,4,228,232,252,20,20,12,36,44,52,20,12,12,44,20,248,28,16,12,20,20,28,68,48,20,28,4,36,68,24,36,28,252,240,236,252,236,12,248,4,252,240,232,12,44,32,228,252,24,244,252,12,24,8,240,4,12,0,12,12,40,28,244,8,12,16,20,28,40,44,252,28,24,16,4,12,36,52,20,12,28,28,0,228,252,12,40,240,236,232,252,0,228,0,244,36,24,224,12,252,240,20,4,20,232,236,12,8,16,0,240,236,4,20,236,28,16,12,20,224,244,0,24,4,252,228,228,224,0,4,240,240,16,0,4,16,12,28,8,0,16,4,12,248,4,20,4,252,32,36,20,28,44,28,240,40,68,12,20,64,52,28,8,12,40,32,32,20,12,4,12,44,28,12,4,16,24,20,16,44,44,28,4,0,252,24,16,28,36,12,40,20,4,248,28,12,24,24,248,252,8,212,252,236,228,224,244,12,232,232,232,188,236,4,236,236,224,228,4,16,12,248,248,236,220,244,12,12,244,12,4,240,252,12,32,20,28,40,52,40,24,32,84,60,28,36,36,40,60,40,28,24,28,20,0,12,20,240,252,36,12,0,244,4,36,28,244,8,236,244,12,248,236,244,12,244,236,236,24,24,8,224,244,12,32,12,0,0,16,28,0,236,12,16,20,16,12,248,248,12,12,12,12,12,4,28,48,36,12,228,244,8,20,12,0,0,12,8,0,236,4,28,20,8,28,36,44,24,16,32,12,32,60,36,32,32,56,56,24,20,28,24,36,44,12,20,36,0,236,244,236,216,216,232,224,180,196,240,236,208,212,224,228,224,228,220,12,12,0,0,16,32,20,20,24,20,20,20,16,8,36,44,40,36,52,48,48,52,52,56,44,28,28,52,24,4,20,16,20,20,0,228,236,228,252,16,12,12,20,32,4,12,44,32,20,4,8,16,44,44,20,36,0,236,252,16,12,0,16,8,244,0,244,0,252,8,24,244,0,12,12,248,248,16,12,16,228,232,252,4,24,12,12,4,24,24,20,4,12,16,32,12,16,40,52,48,52,44,32,28,28,44,64,60,36,36,28,24,20,36,20,236,252,4,248,244,228,228,252,4,248,236,248,248,244,0,240,0,244,236,16,4,252,8,4,0,236,0,0,0,20,16,12,4,32,28,36,20,248,8,40,20,12,36,44,24,12,36,52,4,248,236,12,28,24,0,4,40,28,20,36,24,20,32,16,16,36,28,4,12,20,28,28,28,40,36,32,44,36,20,4,28,44,36,36,0,248,252,24,244,236,252,4,228,228,244,240,248,28,20,20,4,4,0,4,28,28,8,244,240,248,20,252,244,16,16,24,32,36,20,28,56,40,36,20,52,68,32,36,20,16,40,36,12,24,4,244,248,20,248,220,228,236,228,4,252,236,244,252,252,252,228,228,240,224,212,232,228,228,248,240,228,236,228,228,244,248,252,4,20,4,0,248,20,16,20,32,32,20,8,4,32,44,28,12,28,28,12,28,28,0,4,248,32,36,44,60,28,40,52,32,44,32,48,44,40,40,36,36,60,60,52,52,52,60,36,60,60,60,52,52,44,36,24,12,28,28,20,244,252,12,12,0,248,252,4,12,0,248,248,236,236,232,240,220,228,244,240,240,244,4,220,236,236,220,224,236,236,244,236,232,240,228,220,196,196,228,244,4,244,240,8,36,20,28,28,20,48,44,8,8,28,20,12,0,8,24,16,4,4,8,20,4,16,12,0,44,52,28,12,28,32,44,28,44,56,68,44,28,32,68,72,28,24,28,36,60,40,36,56,40,24,28,28,28,44,20,4,16,36,24,244,252,36,36,20,252,4,240,244,248,236,228,236,248,244,236,228,4,244,236,232,252,244,244,12,12,4,4,0,0,12,0,252,0,4,236,236,236,244,4,20,12,4,224,228,244,220,232,8,236,244,236,228,244,8,12,8,252,240,240,0,248,252,252,248,248,8,12,252,248,4,20,24,12,12,32,40,52,36,36,28,40,52,56,44,40,32,28,28,28,32,32,36,24,12,32,40,36,12,12,44,28,20,4,8,28,36,16,4,24,24,8,4,24,36,20,4,248,228,0,0,4,8,252,244,252,240,240,0,8,244,228,244,236,236,236,232,244,232,216,220,228,240,236,240,4,244,232,252,252,228,232,244,244,4,236,240,228,232,16,12,244,236,0,20,12,12,4]),ce=Uint8Array.from([9,46,0,32,0,0,0,2,0,0,3,3,3,6,6,10,0,16,5,12,4,7,8,239,244,235,252,227,33,16,16,8,34,14,39,58,53,56,45,56,25,11,206,218,202,210,206,235,11,22,20,5,4,237,241,184,205,203,213,233,243,34,41,42,19,26,58,50,31,59,66,79,60,46,8,20,255,231,240,246,13,245,14,254,8,5,221,196,201,177,183,204,230,248,13,32,255,58,64,79,47,87,76,74,57,246,244,218,209,191,212,232,2,254,11,248,6,240,198,184,202,179,207,223,9,39,45,33,31,70,89,64,95,103,108,98,58,14,8,233,207,204,206,237,228,243,240,243,0,229,185,221,176,191,195,223,1,19,45,6,60,73,88,55,101,90,95,80,12,254,223,197,185,181,203,228,226,11,231,23,2,218,210,216,194,215,226,13,36,63,46,45,59,88,54,78,96,86,106,49,21,248,224,202,188,193,216,209,245,225,243,4,237,199,222,194,201,201,227,9,31,57,28,49,78,70,58,85,84,102,92,45,20,246,218,196,191,197,210,219,244,227,12,15,230,217,212,202,203,217,3,14,63,44,41,51,67,54,57,85,78,107,69,36,4,230,204,187,185,202,199,231,222,233,3,0,220,226,216,204,207,235,249,37,44,43,30,59,59,46,67,76,91,106,68,42,12,232,209,192,201,201,215,231,230,248,27,240,231,224,204,198,207,236,255,37,45,32,35,55,45,42,70,66,102,90,56,37,0,227,202,192,205,199,222,228,218,7,4,234,233,212,209,191,226,235,25,39,53,28,57,58,45,63,67,83,107,76,58,32,248,232,195,211,198,209,222,220,229,14,241,239,218,215,188,201,215,243,19,49,28,33,50,40,41,56,62,93,98,69,59,16,254,212,207,208,205,215,231,214,251,4,242,240,218,216,191,219,225,6,35,54,36,50,57,44,53,56,71,93,88,66,46,8,243,207,212,201,202,216,219,214,255,243,245,220,224,194,203,210,237,7,45,42,34,50,44,38,49,55,73,99,74,72,33,12,230,216,211,208,207,231,211,235,0,251,238,228,216,197,208,221,247,23,51,40,41,60,40,51,52,58,87,87,76,56,23,0,224,213,210,196,213,220,203,244,247,248,230,226,201,197,201,225,246,34,45,30,51,42,39,46,48,63,89,84,81,48,25,248,222,221,210,203,235,208,231,246,3,245,241,224,206,196,215,224,3,37,38,31,52,38,44,50,44,75,80,88,66,44,17,241,222,219,198,218,218,213,228,247,251,241,234,214,198,198,212,227,11,39,27,45,44,38,50,42,58,75,91,85,65,40,10,234,222,216,199,232,215,226,237,3,246,248,227,214,193,209,210,239,21,33,27,42,36,35,48,34,63,73,90,78,58,34,6,228,234,196,219,218,220,219,246,252,250,242,226,204,199,206,217,247,34,30,37,49,32,53,36,51,63,85,91,75,54,29,248,235,220,201,222,219,218,227,251,248,251,232,224,197,204,207,217,7,28,27,39,36,36,44,35,51,67,87,88,72,49,28,240,246,202,215,219,221,213,234,247,251,242,236,208,202,201,204,223,15,27,28,48,31,52,40,43,56,71,93,84,65,52,4,251,226,207,215,223,215,219,241,248,249,242,226,208,199,207,201,243,18,19,37,32,40,42,40,44,58,81,91,81,64,44,2,0,219,213,223,224,213,227,241,253,244,242,218,204,203,197,207,253,18,23,38,33,42,44,36,47,61,83,92,68,70,18,10,238,215,212,223,216,214,227,248,244,250,232,219,201,208,195,219,9,11,35,30,39,44,41,41,50,68,93,82,79,56,23,4,238,214,222,227,214,221,233,248,246,244,232,208,207,198,192,235,1,21,28,34,38,44,38,39,53,70,94,73,82,40,22,0,226,212,225,216,216,216,243,240,249,240,224,208,207,196,199,249,5,27,31,35,45,44,38,46,51,89,77,87,68,40,18,252,222,220,227,219,214,229,241,247,245,242,217,210,208,182,221,241,13,22,29,37,41,40,36,42,61,84,77,83,60,32,14,244,216,226,221,219,214,234,243,244,249,232,216,213,196,191,227,253,17,28,33,41,46,36,46,39,79,75,86,80,52,30,10,232,221,222,224,209,222,232,243,245,246,230,212,216,185,203,229,254,18,24,34,41,38,42,32,55,71,78,83,73,44,27,2,226,224,227,219,215,223,242,239,249,244,218,222,200,191,209,237,5,21,30,37,45,39,44,35,63,74,81,87,66,40,26,245,228,221,228,212,216,228,237,241,249,236,219,219,194,192,215,239,7,22,25,44,33,50,30,47,63,74,83,84,56,41,16,243,222,230,220,217,219,235,239,244,254,224,229,210,193,199,221,247,13,19,35,36,43,40,33,52,68,75,88,78,51,40,7,238,225,228,220,214,223,235,235,253,242,227,224,206,191,203,226,250,18,19,41,32,49,33,38,55,66,77,89,66,55,29,6,229,229,226,216,216,225,235,239,0,235,231,224,201,195,210,230,6,10,31,31,41,43,33,41,58,67,84,84,63,48,28,250,231,229,225,216,217,233,228,250,248,233,231,216,198,197,213,239,6,15,32,30,44,38,32,45,58,67,88,73,62,43,22,243,230,230,221,213,222,228,233,252,242,233,230,212,195,203,215,251,2,24,26,35,44,35,35,52,57,79,84,75,56,44,12,240,232,230,221,216,230,226,243,252,238,234,228,205,199,200,225,248,7,22,25,37,42,30,39,49,61,81,81,68,56,38,4,238,232,230,216,223,226,230,249,248,238,236,224,203,199,202,233,248,13,19,27,39,37,28,45,47,70,81,80,64,56,32,254,236,234,225,216,226,223,237,251,246,237,238,216,206,193,214,233,255,13,20,29,43,30,36,42,53,72,82,74,62,52,20,250,235,237,219,223,224,225,241,251,239,240,230,214,200,197,220,237,5,14,20,35,39,29,40,43,59,75,83,69,64,44,16,242,239,232,219,227,222,230,246,248,238,242,224,215,194,205,221,244,6,15,23,42,33,34,39,46,62,79,78,68,61,38,6,240,240,224,221,223,222,233,250,241,243,236,225,206,194,209,225,249,9,14,31,39,33,36,39,50,67,81,73,69,57,32,0,242,238,222,225,223,223,242,248,243,244,234,224,200,199,210,229,252,8,15,35,36,33,36,41,51,71,76,71,65,52,22,248,245,232,224,225,222,227,247,244,246,242,235,217,199,200,215,233,3,4,23,36,34,34,37,42,57,74,75,70,64,46,12,249,243,229,224,228,218,237,245,246,247,241,234,212,199,204,215,242,0,6,25,33,33,32,38,40,62,71,73,68,62,40,6,251,240,228,229,224,223,241,244,248,244,243,228,210,198,208,219,249,253,11,27,32,31,35,35,47,64,74,72,67,62,32,6,249,240,228,233,220,231,242,246,248,245,241,224,202,203,204,229,249,253,15,26,31,29,36,33,50,67,73,68,68,56,22,2,250,232,234,228,223,237,242,251,245,248,238,218,203,202,207,236,247,2,18,29,28,34,31,37,54,69,73,67,71,45,19,1,246,231,235,223,226,237,246,248,248,245,237,211,205,199,215,239,246,5,19,28,29,32,31,40,59,72,70,71,66,42,13,3,240,235,232,221,231,237,248,247,247,246,228,211,202,199,221,238,248,6,23,25,32,31,32,46,63,74,69,76,64,32,15,254,238,237,227,225,231,243,246,248,246,244,221,209,197,201,227,239,249,12,22,28,31,31,34,49,70,70,73,75,58,28,13,248,238,236,224,226,235,243,249,245,251,236,220,206,194,210,229,239,253,15,22,29,32,29,36,55,70,70,73,76,46,28,7,244,240,231,226,227,238,246,246,249,248,232,218,200,198,215,233,239,5,15,25,30,30,30,37,62,67,69,78,69,43,25,1,244,238,231,222,231,238,249,245,253,245,230,217,197,201,220,232,245,5,17,25,30,31,27,45,60,68,67,78,59,39,19,251,244,236,227,225,231,244,246,249,254,241,232,210,199,205,225,233,250,9,20,29,32,29,31,49,63,62,72,74,52,36,10,250,240,235,223,226,233,245,246,252,252,240,228,206,198,211,225,237,254,11,23,28,34,25,36,53,63,63,76,69,50,32,6,248,241,229,225,225,239,245,247,255,248,242,224,204,200,215,227,239,255,13,23,31,29,27,37,58,59,67,77,62,48,25,4,246,238,229,224,229,242,245,251,254,249,238,220,201,204,218,228,243,1,15,23,31,27,26,43,57,59,71,74,62,44,22,0,247,235,229,223,233,244,246,254,253,248,236,213,200,207,220,231,245,6,14,27,28,24,27,48,55,61,75,72,59,42,16,0,244,235,224,223,237,242,248,253,253,246,232,208,200,210,220,231,249,5,18,27,29,22,34,51,54,65,75,70,56,38,12,255,242,234,223,229,239,243,249,255,251,246,225,204,203,212,223,235,253,6,21,28,26,22,39,50,55,69,76,66,56,32,11,252,242,230,222,232,238,244,251,253,251,242,220,203,205,215,223,239,252,9,21,29,22,26,44,50,59,72,74,66,52,26,8,249,241,226,227,233,240,246,253,252,251,238,213,203,206,216,227,243,255,12,25,27,20,31,44,50,61,73,71,64,44,22,3,248,236,225,228,235,241,249,252,253,250,232,210,202,209,215,231,245,1,15,27,24,21,35,45,51,67,73,73,62,41,19,1,247,232,225,229,235,242,249,252,253,248,226,207,205,209,220,234,247,4,19,28,21,24,39,45,55,69,73,72,57,36,13,0,244,230,225,231,236,244,249,251,254,243,221,206,207,210,223,236,250,6,23,26,21,28,41,45,59,70,75,69,54,32,11,254,241,228,228,232,237,245,249,253,251,238,214,207,205,213,225,239,251,10,24,24,21,31,39,47,63,71,75,66,51,26,10,252,238,228,230,233,240,246,250,253,250,232,212,206,206,215,227,242,253,14,25,21,22,33,38,51,63,72,73,65,46,24,8,250,235,228,231,234,242,247,251,253,248,225,211,203,208,215,231,242,255,18,25,19,26,33,40,54,64,73,71,61,41,20,6,248,233,230,231,237,243,248,251,254,242,223,210,205,209,219,233,243,2,20,22,19,29,33,44,55,68,73,71,58,37,18,4,244,233,231,232,238,245,248,252,253,238,220,208,206,210,223,235,246,7,22,19,23,29,35,46,59,69,74,69,54,33,16,1,240,234,230,235,239,247,248,255,250,234,216,208,205,212,224,236,247,12,21,18,25,29,38,48,62,71,73,68,50,30,15,254,240,232,231,234,242,245,250,255,248,230,214,207,205,213,227,235,251,15,18,21,25,31,39,52,63]),ue=Uint8Array.from([3,70,0,64,0,0,0,2,0,0,15,10,15,8,21,13,17,22,8,11,23,250,14,23,6,15,15,19,17,250,40,255,14,35,253,20,31,242,28,15,0,55,247,4,27,243,28,15,6,15,18,255,20,13,16,11,244,79,207,40,234,43,255,16,47,228,19,255,18,15,22,7,47,212,36,255,0,24,17,0,23,2,17,250,47,234,24,255,12,4,48,255,36,227,48,255,0,63,239,28,252,23,239,40,247,43,3,7,16,34,239,24,47,217,33,8,31,236,44,252,5,12,44,240,31,10,2,23,12,242,52,255,248,25,19,9,252,85,175,16,55,210,49,8,7,9,12,23,4,254,36,0,29,16,16,7,25,3,5,6,7,15,24,23,0,36,223,32,7,248,31,0,63,210,42,7,12,5,32,15,232,39,13,12,15,29,239,28,0,19,14,0,43,245,8,31,208,80,251,232,63,224,32,5,28,238,28,2,43,227,32,23,224,88,223,32,17,239,28,6,39,250,7,31,225,44,255,10,31,6,255,0,47,235,26,8,43,219,32,27,232,48,247,8,35,239,32,255,39,251,18,10,21,254,14,23,17,247,17,9,21,255,16,31,234,26,12,255,25,28,255,21,6,5,17,25,250,18,11,4,27,14,4,19,21,255,4,39,236,36,255,0,43,230,32,8,6,11,8,27,0,28,11,4,9,12,15,6,12,19,7,3,31,243,32,13,248,32,11,248,38,255,20,15,9,9,14,27,228,64,247,0,34,255,17,0,43,250,10,17,22,3,12,27,252,7,8,31,226,64,251,0,35,251,16,22,5,18,6,6,44,239,16,23,248,32,255,16,10,11,18,5,23,12,13,8,14,18,8,23,5,12,15,4,16,21,4,29,239,44,255,0,31,3,18,8,9,24,11,0,30,255,8,255,44,253,8,31,242,20,23,244,45,255,2,47,240,7,16,23,253,32,255,12,14,6,8,25,251,18,23,248,24,11,23,248,22,7,12,19,8,7,4,15,9,16,8,31,236,24,23,248,31,5,4,23,255,24,15,8,12,8,16,4,22,9,22,2,14,18,15,246,50,239,16,31,247,22,12,14,22,251,19,4,17,17,6,31,251,18,15,4,20,7,4,31,243,24,9,22,6,10,19,252,26,7,12,28,239,20,21,241,48,255,8,28,239,24,8,19,9,12,23,240,40,7,8,29,253,16,21,253,40,255,4,28,247,24,7,30,7,8,23,244,28,7,11,12,26,6,6,25,4,16,4,20,7,10,31,238,40,255,9,15,16,7,8,24,2,20,0,28,5,11,6,31,239,24,15,12,14,6,19,2,13,20,4,19,11,15,4,27,255,12,19,6,14,14,15,9,11,14,6,18,11,10,17,11,9,12,14,7,17,8,17,15,9,12,23,250,26,7,22,255,24,15,2,23,5,16,4,25,6,17,2,29,255,8,27,254,24,10,17,7,20,14,12,13,13,14,3,22,9,16,3,26,6,8,27,255,17,11,10,14,10,15,6,22,6,6,21,5,20,11,7,18,10,17,2,28,9,7,30,0,16,13,12,18,10,14,13,18,7,8,15,14,17,8,23,6,14,13,15,16,7,16,16,8,14,9,16,11,16,10,20,6,16,15,13,9,14,11,18,7,14,19,5,21,8,13,13,14,11,18,9,11,16,14,11,11,16,8,23,3,19,10,21,3,16,15,5,20,13,14,11,19,10,14,16,7,16,23,252,28,13,2,26,11,11,15,15,12,14,10,17,10,17,9,16,15,11,23,11,12,14,15,10,17,11,14,12,16,14,8,20,11,14,20,4,22,10,16,14,12,15,2,27,7,16,19,8,20,7,18,7,16,15,8,20,11,14,15,14,16,11,17,16,14,13,8,20,11,14,15,16,13,12,19,12,16,15,12,14,14,15,0]),pe=Uint8Array.from([0,2,0,64,0,0,0,2,0,0]),de={sampleData:[ae,pe,ne,le,pe],moduleData:ee},fe={sampleData:[ae,oe,ne,ne,pe],moduleData:te},ye={sampleData:[ae,oe,he,le,pe],moduleData:se},me={sampleData:[ae,oe,le,ne,pe],moduleData:ie},ge={sampleData:[ae,oe,he,ce,ue],moduleData:re},be={sampleData:[ae,oe,he,ce,ue],moduleData:_e},Te=Uint16Array.from([1076,1016,960,906,856,808,762,720,678,640,604,570,538,508,480,453,428,404,381,360,339,320,302,285,269,254,240,226,214,202,190,180,170,160,151,143,135,127,120,113]),Ee=Uint8Array.from([80,79,76,89,0,10,0,2,255,255,0,27,0,0,0,2,0,13,0,38,0,24,0,0,0,37,0,23,0,0,0,2,0,13,0,38,0,24,0,0,0,37,0,23,0,0,0,2,0,13,0,38,0,24,0,0,0,37,0,23,0,0,0,2,0,13,0,38,0,24,0,0,0,37,0,23,0,0,0,2,0,13,0,38,0,24,0,0,0,37,0,23,0,0,0,2,0,13,0,38,0,24,0,0,0,37,0,23,0,0,0,2,0,13,0,38,0,24,0,0,0,37,0,23,0,0,0,2,0,13,0,38,0,24,0,0,0,37,0,23,0,0,0,2,0,13,0,38,0,24,0,0,0,37,0,23,0,0,0,2,0,13,0,38,0,24,0,0,0,37,0,23,0,0,0,2,0,13,0,38,0,24,0,0,0,37,0,23,0,0,0,2,0,13,0,38,0,24,0,0,0,37,0,23,0,0,0,3,0,13,0,38,0,24,0,0,0,37,0,23,0,1,255,184,255,189,0,0,0,3,0,13,0,38,0,24,0,0,0,37,0,23,0,2,255,240,255,207,0,0,0,4,0,13,0,38,0,24,0,0,0,37,0,23,0,2,0,28,255,226,0,7,0,0,0,0,0,0,0,4,0,13,0,38,0,24,0,0,0,37,0,23,0,3,0,3,255,221,0,8,0,0,0,0,0,0,0,4,0,13,0,38,0,24,0,0,0,37,0,23,0,3,0,13,255,226,0,9,0,0,0,0,0,0,0,4,0,13,0,38,0,24,0,0,0,37,0,23,0,4,0,2,255,234,0,10,0,0,0,0,0,0,0,4,0,13,0,20,0,29,0,0,0,33,0,15,0,5,0,3,255,242,0,9,0,0,0,0,0,0,0,4,0,13,255,237,0,33,0,0,0,15,255,255,0,5,255,237,255,229,0,8,0,0,0,0,0,0,0,4,0,0,255,247,255,247,0,5,255,213,255,221,0,13,255,198,0,39,0,7,0,0,0,0,0,0,0,2,0,0,255,205,255,234,0,6,255,230,255,244,0,0,0,2,0,0,255,146,255,215,0,6,255,175,255,227,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,20,0,0,0,0,0,40,0,0,0,0,0,0,0,90,0,0,0,120,0,20,255,255,0,14,0,153,0,59,0,69,0,48,0,89,0,48,0,136,0,53,0,153,0,60,0,134,0,55,0,77,0,35,0,42,0,105,0,71,0,98,0,84,0,98,0,109,0,98,0,83,0,112,0,58,0,62,0,146,0,81,255,255,0,0,0,180,0,90,0,0,0,180,0,90,0,0,0,180,0,90,0,0,0,180,0,90,0,0,0,180,0,90,0,0,0,180,0,90,0,0,0,180,0,90,0,0,0,180,0,90,0,0,0,180,0,90,0,0,0,180,0,90,0,0,0,180,0,90,0,0,0,180,0,90,0,0,0,180,0,90,0,0,0,180,0,90,0,0,0,180,0,90,0,0,0,180,0,90,0,0,0,180,0,90,0,0,0,180,0,90,0,0,0,180,0,90,0,0,0,180,0,90,0,0,0,180,0,90,0,0,0,180,0,90,0,0,0,180,0,90,0,0,0,180,0,90,0,0,0,180,0,90,0,0,0,180,0,90,0,0,0,180,0,90,0,0,0,180,0,90,0,0,0,180,0,90,0,0,0,180,0,90,0,0,0,180,0,90,0,0,0,180,0,90,0,0,0,180,0,90,0,0,0,180,0,90,0,0,0,180,0,90,0,0,0,180,0,90,0,0,0,180,0,90,0,0,0,180,0,90,0,0,0,180,0,90,0,0,0,180,0,90,0,0,0,180,0,90,0,0,0,180,0,90,0,0,0,180,0,90,0,0,0,180,0,90,0,0,0,180,0,90,0,0,0,180,0,90,0,0,0,180,0,90,0,0,0,180,0,90,0,0,0,180,0,90,0,0,0,180,0,90,0,0,0,180,0,90,0,3,0,180,0,90,0,0,0,180,0,90,0,0,0,180,0,90,0,10,0,180,0,90,0,0,0,180,0,90,0,0,0,180,0,90,0,0,0,180,0,90,0,14,0,189,0,90,0,0,0,180,0,90,0,16,0,180,0,90,0,0,0,180,0,90,0,1,0,25,0,0,0,0,1,4,0,0,0,0,1,1,0,0,0,0,0,239,0,0,0,239,0,127,0,0,0,127,0,0,0,0,1,3,0,53,0,0,11,11,0,53,0,0,0,239,0,0,0,239,0,56,0,0,0,0,1,4,0,16,0,109,11,11,0,16,0,109,0,239,0,116,0,239,0,127,0,24,0,127,0,0,0,0,1,7,0,0,0,42,8,8,0,112,0,42,0,109,0,47,0,100,0,51,0,78,0,55,0,51,0,58,0,0,0,60,0,0,0,47,0,0,0,0,1,10,255,254,0,25,5,5,0,104,0,25,0,113,0,28,0,114,0,34,0,112,0,42,0,106,0,47,0,87,0,51,0,68,0,53,0,32,0,50,255,254,0,46,255,254,0,35,0,0,0,0,1,10,0,47,0,1,3,3,0,59,0,1,0,63,0,2,0,70,0,8,0,87,0,18,0,101,0,23,0,109,0,28,0,103,0,34,0,95,0,37,0,78,0,40,0,47,0,39,0,0,0,0,1,20,0,4,0,9,2,2,0,49,0,9,0,56,0,8,0,65,0,12,0,70,0,19,0,78,0,23,0,86,0,25,0,73,0,31,0,55,0,33,0,52,0,34,0,48,0,37,0,49,0,39,0,34,0,40,0,27,0,41,0,20,0,41,0,5,0,40,0,1,0,38,255,255,0,35,255,255,0,30,255,255,0,24,0,2,0,9,0,0,0,0,1,9,0,10,0,7,4,4,0,8,0,6,0,52,0,7,0,49,0,8,0,40,0,16,0,33,0,23,0,21,0,25,0,13,0,21,0,7,0,14,0,5,0,8,0,0,0,0,1,4,0,4,0,48,5,5,255,255,0,47,0,33,0,50,0,12,0,52,0,4,0,51,0,0,0,0,1,6,0,4,0,0,7,7,0,57,255,255,0,56,0,7,0,39,0,10,0,17,0,11,0,1,0,6,255,255,255,255,0,0,0,0,1,5,0,68,0,5,2,2,0,63,0,4,0,70,0,10,0,88,0,19,0,89,0,21,0,73,0,12,0,0,0,0,1,10,0,46,0,12,3,3,0,63,0,12,0,65,0,14,0,70,0,20,0,78,0,24,0,84,0,25,0,80,0,27,0,74,0,29,0,68,0,30,0,56,0,28,0,46,0,23,0,0,0,0,1,4,0,10,0,15,3,3,0,5,0,14,0,8,0,19,0,16,0,24,0,9,0,20,0,0,0,0,1,2,0,92,0,22,2,2,0,90,0,21,0,87,0,24,0,0,0,0,1,6,0,30,0,41,9,9,0,37,0,41,0,47,0,42,0,48,0,47,0,52,0,52,0,30,0,50,0,30,0,43,0,0,0,0,1,9,0,0,0,38,9,9,0,0,0,38,0,2,0,40,0,7,0,41,0,14,0,43,0,29,0,43,0,33,0,50,0,12,0,52,0,6,0,52,0,0,0,49,0,0,0,0,1,2,0,18,0,31,10,10,0,26,0,31,0,18,0,31,0,0,0,0,1,2,0,49,0,34,10,10,0,51,0,34,0,49,0,37,0,0,0,0,1,2,0,48,0,37,10,10,0,49,0,37,0,48,0,39,0,0,0,0,1,2,0,31,0,28,10,10,0,37,0,28,0,31,0,30,0,0,0,0,1,2,0,27,0,30,10,10,0,31,0,30,0,27,0,31,0,0,0,0,1,2,0,25,0,25,10,10,0,25,0,25,0,28,0,25,0,0,0,0,1,13,0,36,0,8,3,3,0,50,0,9,0,53,0,8,0,57,0,9,0,62,0,12,0,62,0,16,0,51,0,16,0,47,0,19,0,41,0,24,0,38,0,25,0,37,0,24,0,36,0,23,0,38,0,22,0,42,0,17,0,0,0,0,1,5,0,0,0,0,7,7,0,0,0,69,0,23,0,115,0,25,0,122,0,25,0,127,0,0,0,127,0,0,0,0,0,0,0,0,0,0,1,1,0,0,6,136,10,170,12,204,6,102,10,168,14,168,6,106,4,102,8,134,8,136,4,136,10,138,13,221,14,238,15,255,0,0,14,0,15,0,0,0,0,1,14,0,88,0,52,10,10,0,177,0,78,0,134,0,78,0,125,0,75,0,119,0,71,0,116,0,64,0,116,0,57,0,126,0,47,0,135,0,43,0,149,0,41,0,163,0,44,0,173,0,49,0,184,0,57,0,191,0,65,0,189,0,73,0,0,0,0,1,4,0,104,0,84,14,14,0,132,0,78,0,166,0,77,0,173,0,73,0,178,0,78,0,0,0,0,1,7,0,103,0,52,11,11,0,131,0,45,0,145,0,41,0,159,0,42,0,170,0,47,0,155,0,55,0,141,0,55,0,138,0,52,0,0,0,0,1,8,0,92,0,64,13,13,0,132,0,77,0,126,0,65,0,120,0,62,0,136,0,53,0,154,0,55,0,163,0,63,0,172,0,72,0,165,0,76,0,0,0,0,1,5,0,145,0,75,13,13,0,173,0,73,0,191,0,64,0,191,0,68,0,189,0,73,0,179,0,78,0,0,0,0,1,6,0,88,0,68,14,14,0,116,0,57,0,124,0,60,0,132,0,78,0,124,0,75,0,119,0,72,0,116,0,66,0,0,0,0,1,6,0,88,0,52,12,12,0,124,0,59,0,116,0,56,0,126,0,46,0,131,0,44,0,143,0,41,0,138,0,52,0,0,0,0,1,3,0,112,0,64,12,12,0,140,0,53,0,154,0,55,0,148,0,61,0,0,0,0,1,3,0,113,0,81,14,14,0,148,0,77,0,141,0,77,0,148,0,70,0,0,0,0,1,5,0,132,0,70,12,12,0,173,0,72,0,160,0,59,0,178,0,59,0,188,0,61,0,190,0,63,0,0,0,0,1,2,0,127,0,66,12,12,0,159,0,59,0,155,0,55,0,0,0,0,1,2,0,118,0,64,10,10,0,157,0,54,0,146,0,53,0,0,0,0,1,2,0,148,0,66,14,14,0,148,0,70,0,148,0,66,0,0,0,0,1,2,0,121,0,72,12,12,0,149,0,61,0,149,0,74,0,0,0,0,0,0,0,0,0,0,1,1,0,0,8,136,4,136,0,0,8,100,12,134,14,168,8,170,4,102,4,72,12,204,10,170,6,102,4,68,2,34,4,102,0,0,9,0,0,0,0,1,18,0,51,0,27,6,6,0,68,0,36,0,80,0,30,0,86,0,29,0,100,0,34,0,117,0,44,0,116,0,46,0,108,0,48,0,94,0,47,0,99,0,53,0,109,0,58,0,124,0,69,0,138,0,78,0,140,0,82,0,138,0,84,0,134,0,85,0,121,0,81,0,110,0,75,0,50,0,72,0,0,0,0,1,12,0,0,0,0,4,4,0,50,0,2,0,60,0,28,0,67,0,35,0,68,0,43,0,64,0,57,0,57,0,66,0,49,0,72,0,44,0,72,0,36,0,66,0,19,0,66,0,0,0,55,255,255,0,2,0,0,0,0,1,9,0,51,0,70,6,6,0,50,0,72,0,106,0,74,0,116,0,84,0,129,0,89,0,130,0,90,0,130,0,92,0,126,0,94,0,112,0,94,0,106,0,91,0,0,0,0,1,5,0,53,0,72,6,6,0,52,0,74,0,103,0,91,0,102,0,93,0,99,0,95,0,93,0,95,0,0,0,0,1,5,0,56,0,75,6,6,0,55,0,77,0,87,0,93,0,83,0,95,0,77,0,95,0,64,0,89,0,0,0,0,1,2,0,97,0,80,5,5,0,96,0,82,0,107,0,92,0,0,0,0,1,2,0,83,0,87,5,5,0,82,0,89,0,87,0,93,0,0,0,0,1,2,0,93,0,42,5,5,0,92,0,44,0,97,0,51,0,0,0,0,0,0,0,0,0,0,1,1,0,0,8,136,4,136,6,66,8,100,12,134,14,168,8,170,4,102,4,72,0,224,2,32,4,68,6,102,0,0,4,102,0,0,10,0,0,0,0,1,7,0,105,0,54,6,6,0,117,0,54,0,141,0,80,0,144,0,89,0,143,0,93,0,140,0,94,0,127,0,86,0,105,0,65,0,0,0,0,1,9,0,117,0,53,6,6,0,117,0,53,0,151,0,69,0,159,0,79,0,167,0,88,0,167,0,92,0,163,0,93,0,154,0,88,0,147,0,82,0,139,0,77,0,0,0,0,1,12,0,109,0,31,6,6,0,115,0,33,0,123,0,32,0,129,0,31,0,145,0,43,0,147,0,46,0,144,0,48,0,162,0,61,0,173,0,73,0,173,0,77,0,171,0,80,0,153,0,71,0,109,0,48,0,0,0,0,1,14,0,6,0,0,4,4,0,104,0,0,0,113,0,8,0,112,0,24,0,114,0,31,0,112,0,34,0,116,0,41,0,118,0,48,0,115,0,56,0,107,0,65,0,100,0,68,0,96,0,70,0,70,0,62,0,24,0,23,0,6,0,0,0,0,0,0,1,7,0,98,0,67,6,6,0,105,0,67,0,126,0,86,0,129,0,92,0,128,0,95,0,124,0,96,0,101,0,79,0,98,0,70,0,0,0,0,1,2,0,130,0,38,5,5,0,130,0,38,0,138,0,46,0,0,0,0,1,2,0,138,0,46,5,5,0,138,0,46,0,144,0,48,0,0,0,0,1,2,0,160,0,84,5,5,0,161,0,84,0,160,0,88,0,0,0,0,1,2,0,156,0,88,5,5,0,160,0,88,0,156,0,89,0,0,0,0,0,0,0,0,0,0,1,1,0,0,8,136,4,136,6,66,8,100,12,134,14,168,8,170,4,102,4,72,0,224,2,32,4,68,6,102,0,0,4,102,0,0,12,0,0,0,0,1,9,0,135,0,68,6,6,0,149,0,68,0,166,0,89,0,165,0,90,0,166,0,98,0,163,0,105,0,158,0,101,0,155,0,93,0,146,0,88,0,135,0,75,0,0,0,0,1,8,0,150,0,68,6,6,0,150,0,68,0,173,0,83,0,178,0,90,0,180,0,94,0,179,0,104,0,176,0,106,0,174,0,102,0,174,0,97,0,0,0,0,1,16,0,151,0,50,6,6,0,157,0,50,0,178,0,59,0,180,0,62,0,192,0,70,0,195,0,73,0,200,0,81,0,199,0,83,0,195,0,84,0,198,0,89,0,198,0,94,0,197,0,98,0,194,0,98,0,191,0,91,0,189,0,88,0,175,0,82,0,151,0,68,0,0,0,0,1,12,0,73,0,0,4,4,0,148,0,0,0,155,0,13,0,156,0,18,0,158,0,34,0,156,0,43,0,156,0,55,0,152,0,64,0,145,0,72,0,133,0,74,0,116,0,67,0,86,0,27,0,73,0,0,0,0,0,0,1,4,0,155,0,102,6,6,0,157,0,102,0,162,0,105,0,157,0,107,0,155,0,105,0,0,0,0,1,2,0,182,0,72,5,5,0,182,0,72,0,191,0,77,0,0,0,0,1,2,0,191,0,77,5,5,0,191,0,77,0,195,0,83,0,0,0,0,1,2,0,176,0,98,5,5,0,176,0,99,0,178,0,98,0,0,0,0,1,2,0,178,0,94,5,5,0,178,0,98,0,180,0,94,0,0,0,0,1,2,0,160,0,102,5,5,0,160,0,102,0,162,0,102,0,0,0,0,1,2,0,162,0,100,5,5,0,162,0,102,0,165,0,100,0,0,0,0,0,0,0,0,0,0,1,1,0,0,8,136,4,136,6,66,8,100,12,134,14,168,8,170,4,102,4,72,0,224,2,32,4,68,6,102,0,0,4,102,0,0,10,0,0,0,0,1,6,0,148,0,66,6,6,0,167,0,66,0,188,0,98,0,176,0,92,0,158,0,89,0,152,0,84,0,148,0,75,0,0,0,0,1,13,0,92,0,0,4,4,0,165,0,0,0,167,0,6,0,166,0,31,0,162,0,49,0,167,0,61,0,164,0,69,0,160,0,72,0,149,0,75,0,140,0,75,0,130,0,57,0,123,0,55,0,105,0,29,0,92,0,0,0,0,0,0,1,9,0,168,0,61,6,6,0,168,0,61,0,201,0,78,0,201,0,81,0,204,0,83,0,208,0,91,0,212,0,96,0,215,0,104,0,212,0,105,0,203,0,92,0,0,0,0,1,3,0,168,0,63,6,6,0,168,0,63,0,205,0,92,0,190,0,89,0,0,0,0,1,7,0,167,0,64,6,6,0,167,0,64,0,196,0,95,0,198,0,98,0,195,0,114,0,191,0,120,0,189,0,117,0,190,0,101,0,0,0,0,1,6,0,170,0,91,6,6,0,176,0,91,0,180,0,101,0,176,0,113,0,173,0,119,0,170,0,118,0,173,0,98,0,0,0,0,1,3,0,159,0,89,6,6,0,159,0,89,0,176,0,90,0,173,0,101,0,0,0,0,1,2,0,193,0,78,5,5,0,193,0,78,0,202,0,81,0,0,0,0,1,2,0,190,0,89,5,5,0,190,0,89,0,191,0,90,0,0,0,0,0,0,0,0,0,0,1,1,0,0,8,136,4,136,6,66,8,100,12,134,14,168,8,170,4,102,4,72,0,224,2,32,4,68,6,102,0,0,4,102,0,0,11,0,0,0,0,1,3,0,136,0,30,6,6,0,154,0,48,0,199,0,89,0,151,0,66,0,0,0,0,1,11,0,58,0,6,4,4,0,145,0,6,0,151,0,44,0,153,0,47,0,154,0,61,0,148,0,71,0,137,0,77,0,132,0,74,0,115,0,72,0,74,0,44,0,65,0,36,0,58,0,6,0,0,0,0,1,11,0,139,0,29,6,6,0,154,0,47,0,160,0,48,0,175,0,52,0,186,0,59,0,201,0,67,0,210,0,80,0,207,0,82,0,202,0,82,0,210,0,95,0,207,0,98,0,197,0,88,0,0,0,0,1,9,0,137,0,49,6,6,0,152,0,67,0,178,0,79,0,176,0,82,0,182,0,91,0,184,0,96,0,185,0,103,0,182,0,105,0,177,0,104,0,175,0,96,0,0,0,0,1,3,0,134,0,50,6,6,0,151,0,68,0,177,0,95,0,149,0,83,0,0,0,0,1,9,0,123,0,50,6,6,0,150,0,68,0,164,0,90,0,166,0,94,0,166,0,99,0,162,0,101,0,160,0,100,0,158,0,95,0,146,0,87,0,138,0,76,0,0,0,0,1,2,0,172,0,53,5,5,0,187,0,71,0,202,0,80,0,0,0,0,1,2,0,187,0,62,5,5,0,202,0,80,0,202,0,82,0,0,0,0,1,2,0,165,0,79,5,5,0,184,0,97,0,180,0,99,0,0,0,0,1,2,0,163,0,80,5,5,0,180,0,99,0,178,0,98,0,0,0,0,0,0,0,0,0,0,1,1,0,0,8,136,4,136,6,66,8,100,12,134,14,168,8,170,4,102,4,72,0,224,2,32,4,68,6,102,0,0,4,102,0,0,11,0,0,0,0,1,8,0,69,0,12,6,6,0,82,0,12,0,101,0,48,0,106,0,64,0,105,0,66,0,102,0,68,0,92,0,64,0,81,0,57,0,69,0,43,0,0,0,0,1,9,0,0,0,0,4,4,0,77,0,0,0,82,0,11,0,83,0,22,0,80,0,32,0,71,0,41,0,65,0,45,0,32,0,45,0,0,0,30,0,0,0,0,0,0,0,0,1,12,0,81,0,0,6,6,0,81,0,4,0,94,0,0,0,98,0,0,0,110,0,9,0,109,0,13,0,119,0,17,0,125,0,22,0,146,0,35,0,155,0,45,0,154,0,47,0,152,0,48,0,141,0,40,0,0,0,0,1,3,0,81,0,5,6,6,0,81,0,5,0,144,0,41,0,120,0,33,0,0,0,0,1,8,0,82,0,6,6,6,0,82,0,6,0,123,0,35,0,125,0,41,0,144,0,52,0,148,0,54,0,152,0,60,0,150,0,63,0,117,0,45,0,0,0,0,1,3,0,146,0,61,6,6,0,146,0,61,0,149,0,63,0,147,0,64,0,0,0,0,1,9,0,81,0,7,6,6,0,81,0,7,0,121,0,46,0,116,0,50,0,121,0,62,0,126,0,64,0,126,0,68,0,122,0,70,0,114,0,67,0,104,0,54,0,0,0,0,1,2,0,99,0,7,5,5,0,99,0,7,0,113,0,15,0,0,0,0,1,2,0,118,0,66,5,5,0,118,0,67,0,121,0,66,0,0,0,0,1,2,0,121,0,63,5,5,0,121,0,66,0,122,0,63,0,0,0,0,0,0,0,122,0,63,1,1,0,0,8,136,4,136,6,66,8,100,12,134,14,168,8,170,4,102,4,72,0,224,2,32,4,68,6,102,0,0,4,102,0,0,4,0,0,0,0,1,3,0,26,0,123,8,8,0,26,0,123,0,83,0,127,0,26,0,127,0,0,0,0,1,3,0,24,0,114,8,8,0,24,0,114,0,84,0,127,0,26,0,122,0,0,0,0,1,7,0,0,0,84,9,9,0,0,0,84,0,8,0,88,0,14,0,96,0,24,0,117,0,25,0,122,0,25,0,127,0,0,0,127,0,0,0,0,0,0,0,0,0,0,1,1,0,0,8,136,4,136,6,66,8,100,12,134,14,168,8,170,4,102,4,72,0,224,2,32,4,68,6,102,0,0,4,102,0,0,5,0,0,0,0,1,8,0,17,0,101,8,8,0,17,0,101,0,62,0,112,0,99,0,119,0,112,0,116,0,121,0,118,0,122,0,122,0,126,0,127,0,27,0,127,0,0,0,0,1,5,0,0,0,69,9,9,0,0,0,69,0,15,0,98,0,26,0,125,0,26,0,127,0,0,0,127,0,0,0,0,1,6,0,113,0,120,8,8,0,138,0,120,0,141,0,121,0,142,0,124,0,135,0,127,0,113,0,127,0,127,0,122,0,0,0,0,1,5,0,103,0,113,8,8,0,121,0,113,0,126,0,114,0,126,0,117,0,120,0,122,0,103,0,119,0,0,0,0,0,0,0,0,0,0,1,1,0,0,8,136,4,136,6,66,8,100,12,134,14,168,8,170,4,102,4,72,0,224,2,32,4,68,6,102,0,0,4,102,0,0,9,0,0,0,0,1,6,0,124,0,104,8,8,0,140,0,104,0,147,0,104,0,151,0,105,0,153,0,109,0,133,0,107,0,124,0,105,0,0,0,0,1,5,0,154,0,109,8,8,0,159,0,109,0,168,0,115,0,168,0,119,0,161,0,115,0,154,0,109,0,0,0,0,1,4,0,130,0,121,8,8,0,157,0,121,0,168,0,127,0,158,0,127,0,130,0,125,0,0,0,0,1,10,0,13,0,67,8,8,0,13,0,92,0,54,0,101,0,86,0,105,0,134,0,106,0,149,0,108,0,160,0,112,0,167,0,120,0,141,0,123,0,163,0,134,0,34,0,134,0,0,0,0,1,4,0,0,0,69,9,9,0,0,0,69,0,25,0,119,0,26,0,123,0,10,0,112,0,0,0,0,1,3,0,0,0,71,9,9,0,0,0,71,0,13,0,114,0,0,0,112,0,0,0,0,0,1,0,39,0,122,8,8,0,39,0,122,0,0,0,0,1,3,0,26,0,90,8,8,0,26,0,115,0,35,0,134,0,26,0,134,0,0,0,0,0,0,0,0,0,0,1,1,0,0,8,136,4,136,6,66,8,100,12,134,14,168,8,170,4,102,4,72,0,224,2,32,4,68,6,102,0,0,4,102,0,0,6,0,0,0,0,1,12,0,10,0,85,8,8,0,10,0,85,0,64,0,96,0,106,0,102,0,119,0,101,0,137,0,105,0,168,0,105,0,184,0,107,0,198,0,112,0,200,0,119,0,192,0,124,0,179,0,127,0,30,0,127,0,0,0,0,1,3,0,0,0,69,9,9,0,0,0,69,0,20,0,107,0,10,0,99,0,0,0,0,1,3,0,0,0,71,9,9,0,0,0,71,0,9,0,99,0,0,0,97,0,0,0,0,1,5,0,199,0,111,8,8,0,214,0,118,0,201,0,115,0,199,0,112,0,211,0,111,0,218,0,116,0,0,0,0,1,4,0,25,0,117,8,8,0,25,0,117,0,30,0,127,0,26,0,127,0,26,0,123,0,0,0,0,0,0,0,0,0,0,1,1,0,0,8,136,4,136,6,66,8,100,12,134,14,168,8,170,4,102,4,72,0,224,2,32,4,68,6,102,0,0,4,102,0,0,2,0,0,0,0,1,8,0,16,0,98,8,8,0,16,0,98,0,62,0,111,0,101,0,113,0,127,0,111,0,146,0,117,0,150,0,121,0,145,0,127,0,27,0,127,0,0,0,0,0,0,0,0,0,0,1,1,0,0,8,136,4,136,6,66,8,100,12,134,14,168,8,170,4,102,4,72,0,224,2,32,4,68,6,102,0,0,4,102,0,0,3,0,0,0,0,1,5,0,0,0,69,9,9,0,63,0,67,0,78,0,96,0,89,0,123,0,89,0,125,0,63,0,125,0,0,0,0,1,7,0,27,0,0,9,9,0,27,0,0,0,40,0,8,0,46,0,16,0,56,0,37,0,57,0,42,0,57,0,47,0,27,0,46,0,0,0,0,0,0,0,0,0,0,1,1,0,0,8,136,4,136,6,66,8,100,12,134,14,168,8,170,4,102,4,72,0,224,2,32,4,68,6,102,0,0,4,102,0,0,2,0,0,0,0,1,11,0,105,0,71,8,8,0,186,0,76,0,188,0,78,0,188,0,81,0,183,0,83,0,151,0,90,0,132,0,92,0,120,0,90,0,106,0,82,0,105,0,76,0,113,0,72,0,117,0,71,0,0,0,0,0,0,0,0,0,0,1,1,0,0,8,136,4,136,0,0,8,100,12,134,14,168,8,170,4,102,4,72,12,204,10,170,6,102,4,68,2,34,4,102,0]),Ae=Uint8Array.from([115,0,25,142,0,0,130,145,157,78,79,173,0,0,137,0,0,137,130,145,157,142,0,0,142,0,0,130,145,157,0,0,137,45,46,158,130,145,157,130,145,157,142,0,0,116,0,25,142,0,0,239,61,50,247,165,160,254,253,253,147,147,233,55,55,214,242,242,252,232,40,40,232,40,40,242,242,252,116,117,226,244,245,252,249,187,183,240,69,59,240,78,69,142,0,0,130,145,157,242,167,166,236,67,58,240,104,96,252,232,231,167,167,237,242,242,252,232,40,40,232,40,40,249,249,254,252,242,242,242,125,119,235,59,48,241,149,147,247,239,245,115,115,190,3,3,138,153,153,234,246,234,239,238,133,130,232,64,55,246,183,180,251,251,254,232,40,40,232,40,40,255,252,252,233,72,64,237,115,111,245,224,228,161,161,236,71,71,217,0,0,137,130,145,157,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,232,40,40,232,40,40,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,130,145,157,142,0,0,230,25,25,230,25,25,230,25,25,230,25,25,230,25,25,230,25,25,230,25,25,230,25,25,230,25,25,230,25,25,230,25,25,230,25,25,230,25,25,230,25,25,142,0,0,142,0,0,230,25,25,230,25,25,230,25,25,230,25,25,230,25,25,230,25,25,230,25,25,230,25,25,230,25,25,230,25,25,230,25,25,230,25,25,230,25,25,230,25,25,142,0,0,130,145,157,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,232,40,40,232,40,40,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,130,145,157,0,0,137,135,135,230,241,214,219,216,72,69,236,167,165,246,248,252,248,248,254,232,40,40,232,40,40,254,254,255,242,195,193,215,65,61,238,196,200,143,143,232,63,63,216,0,0,137,130,145,157,232,171,173,210,57,53,244,207,206,228,230,248,86,87,220,242,242,252,232,40,40,232,40,40,244,244,253,219,220,247,248,226,225,213,68,65,227,143,144,247,246,252,69,69,169,142,0,0,212,75,72,250,235,235,208,209,245,64,64,216,55,55,214,242,242,252,232,40,40,232,40,40,242,242,252,58,58,214,189,190,241,253,246,246,218,103,100,213,83,82,142,0,0,116,0,25,142,0,0,148,149,206,0,0,137,0,0,137,0,0,137,130,145,157,142,0,0,142,0,0,130,145,157,0,0,137,0,0,137,108,109,187,130,145,157,142,0,0,116,0,25]),Se=Uint8Array.from([69,47,159,70,47,158,70,47,158,70,47,158,70,47,158,130,145,157,130,145,157,130,145,157,130,145,157,130,145,157,130,145,157,165,10,10,165,10,10,165,10,10,165,10,10,165,10,10,70,47,158,102,66,242,102,66,242,102,66,242,102,66,242,245,248,251,245,248,251,245,248,251,245,248,251,245,248,251,245,248,251,229,29,29,229,29,29,229,29,29,229,29,29,165,10,10,70,47,158,102,66,242,102,66,242,102,66,242,102,66,242,245,248,251,245,248,251,245,248,251,245,248,251,245,248,251,245,248,251,229,29,29,229,29,29,229,29,29,229,29,29,165,10,10,70,47,158,102,66,242,102,66,242,102,66,242,102,66,242,245,248,251,245,248,251,245,248,251,245,248,251,245,248,251,245,248,251,229,29,29,229,29,29,229,29,29,229,29,29,165,10,10,70,47,158,102,66,242,102,66,242,102,66,242,102,66,242,245,248,251,245,248,251,245,248,251,245,248,251,245,248,251,245,248,251,229,29,29,229,29,29,229,29,29,229,29,29,165,10,10,70,47,158,102,66,242,102,66,242,102,66,242,102,66,242,245,248,251,245,248,251,245,248,251,245,248,251,245,248,251,245,248,251,229,29,29,229,29,29,229,29,29,229,29,29,165,10,10,70,47,158,102,66,242,102,66,242,102,66,242,102,66,242,245,248,251,245,248,251,245,248,251,245,248,251,245,248,251,245,248,251,229,29,29,229,29,29,229,29,29,229,29,29,165,10,10,70,47,158,102,66,242,102,66,242,102,66,242,102,66,242,245,248,251,245,248,251,245,248,251,245,248,251,245,248,251,245,248,251,229,29,29,229,29,29,229,29,29,229,29,29,165,10,10,70,47,158,102,66,242,102,66,242,102,66,242,102,66,242,245,248,251,245,248,251,245,248,251,245,248,251,245,248,251,245,248,251,229,29,29,229,29,29,229,29,29,229,29,29,165,10,10,70,47,158,102,66,242,102,66,242,102,66,242,102,66,242,245,248,251,245,248,251,245,248,251,245,248,251,245,248,251,245,248,251,229,29,29,229,29,29,229,29,29,229,29,29,165,10,10,70,47,158,102,66,242,102,66,242,102,66,242,102,66,242,245,248,251,245,248,251,245,248,251,245,248,251,245,248,251,245,248,251,229,29,29,229,29,29,229,29,29,229,29,29,165,10,10,70,47,158,70,47,158,70,47,158,70,47,158,70,47,158,130,145,157,130,145,157,130,145,157,130,145,157,130,145,157,130,145,157,165,10,10,165,10,10,165,10,10,165,10,10,166,10,10]),we=Uint8Array.frome=Uint8Array.from([0,122,74,0,122,74,0,122,74,0,122,74,0,122,74,130,145,157,130,145,157,130,145,157,130,145,157,130,145,157,130,145,157,171,0,7,171,0,7,171,0,7,171,0,7,170,0,7,0,122,74,47,176,119,47,176,119,47,176,119,47,176,119,245,248,251,245,248,251,245,248,251,245,248,251,245,248,251,245,248,251,244,67,74,244,67,74,244,67,74,244,67,74,171,0,7,0,122,74,47,176,119,47,176,119,47,176,119,47,176,119,245,248,251,245,248,251,245,248,251,245,248,251,245,248,251,245,248,251,244,67,74,244,67,74,244,67,74,244,67,74,171,0,7,0,122,74,47,176,119,47,176,119,47,176,119,47,176,119,245,248,251,245,248,251,245,248,251,245,248,251,245,248,251,245,248,251,244,67,74,244,67,74,244,67,74,244,67,74,171,0,7,0,122,74,47,176,119,47,176,119,47,176,119,47,176,119,245,248,251,245,248,251,245,248,251,245,248,251,245,248,251,245,248,251,244,67,74,244,67,74,244,67,74,244,67,74,171,0,7,0,122,74,47,176,119,47,176,119,47,176,119,47,176,119,245,248,251,245,248,251,245,248,251,245,248,251,245,248,251,245,248,251,244,67,74,244,67,74,244,67,74,244,67,74,171,0,7,0,122,74,47,176,119,47,176,119,47,176,119,47,176,119,245,248,251,245,248,251,245,248,251,245,248,251,245,248,251,245,248,251,244,67,74,244,67,74,244,67,74,244,67,74,171,0,7,0,122,74,47,176,119,47,176,119,47,176,119,47,176,119,245,248,251,245,248,251,245,248,251,245,248,251,245,248,251,245,248,251,244,67,74,244,67,74,244,67,74,244,67,74,171,0,7,0,122,74,47,176,119,47,176,119,47,176,119,47,176,119,245,248,251,245,248,251,245,248,251,245,248,251,245,248,251,245,248,251,244,67,74,244,67,74,244,67,74,244,67,74,171,0,7,0,122,74,47,176,119,47,176,119,47,176,119,47,176,119,245,248,251,245,248,251,245,248,251,245,248,251,245,248,251,245,248,251,244,67,74,244,67,74,244,67,74,244,67,74,171,0,7,0,122,74,47,176,119,47,176,119,47,176,119,47,176,119,245,248,251,245,248,251,245,248,251,245,248,251,245,248,251,245,248,251,244,67,74,244,67,74,244,67,74,244,67,74,171,0,7,0,122,73,0,122,74,0,122,74,0,122,74,0,122,74,130,145,157,130,145,157,130,145,157,130,145,157,130,145,157,130,145,157,171,0,7,171,0,7,171,0,7,171,0,7,171,0,7]),Pe=Uint8Array.from([130,146,157,130,145,157,130,145,157,130,145,157,130,145,157,130,145,157,130,145,157,130,145,157,130,145,157,130,145,157,130,145,157,130,145,157,130,145,157,130,145,157,130,145,157,131,145,157,130,145,157,245,248,251,245,248,251,245,248,251,245,248,251,245,248,251,245,248,251,245,248,251,245,248,251,245,248,251,245,248,251,245,248,251,245,248,251,245,248,251,245,248,251,130,145,157,130,145,157,245,248,251,245,248,251,245,248,251,245,248,251,245,248,251,245,248,251,245,248,251,245,248,251,245,248,251,245,248,251,245,248,251,245,248,251,245,248,251,245,248,251,130,145,157,130,145,157,245,248,251,245,248,251,245,248,251,245,248,251,244,242,244,223,112,109,209,25,19,209,25,19,223,112,109,244,242,244,245,248,251,245,248,251,245,248,251,245,248,251,130,145,157,130,145,157,245,248,251,245,248,251,245,248,251,245,248,251,225,124,122,208,17,11,208,17,11,208,17,11,208,17,11,225,124,122,245,248,251,245,248,251,245,248,251,245,248,251,130,145,157,130,145,157,245,248,251,245,248,251,245,248,251,245,248,251,211,38,33,208,17,11,208,17,11,208,17,11,208,17,11,211,38,32,245,248,251,245,248,251,245,248,251,245,248,251,130,145,157,130,145,157,245,248,251,245,248,251,245,248,251,245,248,251,212,40,35,208,17,11,208,17,11,208,17,11,208,17,11,212,39,34,245,248,251,245,248,251,245,248,251,245,248,251,130,145,157,130,145,157,245,248,251,245,248,251,245,248,251,245,248,251,227,133,132,208,17,11,208,17,11,208,17,11,208,17,11,227,133,132,245,248,251,245,248,251,245,248,251,245,248,251,130,145,157,130,145,157,245,248,251,245,248,251,245,248,251,245,248,251,244,244,247,225,125,123,212,39,34,212,39,34,225,125,123,244,244,247,245,248,251,245,248,251,245,248,251,245,248,251,130,145,157,130,145,157,245,248,251,245,248,251,245,248,251,245,248,251,245,248,251,245,248,251,245,248,251,245,248,251,245,248,251,245,248,251,245,248,251,245,248,251,245,248,251,245,248,251,130,145,157,130,145,157,245,248,251,245,248,251,245,248,251,245,248,251,245,248,251,245,248,251,245,248,251,245,248,251,245,248,251,245,248,251,245,248,251,245,248,251,245,248,251,245,248,251,130,145,157,153,164,175,130,145,157,130,145,157,130,145,157,130,145,157,130,145,157,130,145,157,130,145,157,130,145,157,130,145,157,130,145,157,130,145,157,130,145,157,130,145,157,130,145,157,152,164,175]),ve=Uint8Array.from([142,3,0,141,3,0,141,3,0,141,3,0,141,3,0,141,3,0,141,3,0,141,3,0,141,3,0,141,3,0,141,3,0,141,3,0,141,3,0,141,3,0,141,3,0,141,3,0,141,3,0,255,47,41,255,47,41,255,47,41,255,47,41,255,47,41,255,47,41,255,47,41,255,47,41,255,47,41,255,47,41,255,47,41,255,47,41,255,47,41,255,47,41,141,3,0,141,3,0,255,47,41,255,47,41,255,47,41,255,47,41,255,47,41,255,47,41,255,47,41,255,47,41,255,47,41,255,47,41,255,47,41,255,47,41,255,47,41,255,47,41,141,3,0,202,128,0,255,212,57,255,212,57,214,173,53,207,172,70,181,154,91,193,163,86,203,171,81,227,188,66,255,212,57,255,212,57,255,212,57,255,212,57,255,212,57,255,212,57,202,128,0,202,128,0,255,212,57,255,212,57,255,211,57,191,142,114,229,40,30,234,229,224,202,187,158,254,213,68,255,212,57,255,212,57,255,212,57,255,212,57,255,212,57,255,212,57,202,128,0,202,128,0,255,212,57,255,212,57,207,174,79,229,222,213,244,186,182,229,40,30,219,211,197,209,181,103,255,212,57,255,212,57,255,212,57,255,212,57,255,212,57,255,212,57,202,128,0,202,128,0,255,212,57,255,212,57,193,164,85,225,218,207,172,152,122,170,120,89,195,181,173,184,154,87,255,212,57,255,212,57,255,212,57,255,212,57,255,212,57,255,212,57,202,128,0,202,128,0,255,212,57,255,212,57,247,205,61,223,200,132,171,143,82,192,163,86,227,202,126,251,210,65,255,212,57,255,212,57,255,212,57,255,212,57,255,212,57,255,212,57,202,128,0,202,128,0,255,212,57,255,212,57,255,212,57,255,212,57,251,208,59,255,212,57,255,212,57,255,212,57,255,212,57,255,212,57,255,212,57,255,212,57,255,212,57,255,212,57,202,128,0,141,3,0,255,47,41,255,47,41,255,47,41,255,47,41,255,47,41,255,47,41,255,47,41,255,47,41,255,47,41,255,47,41,255,47,41,255,47,41,255,47,41,255,47,41,141,3,0,141,3,0,255,47,41,255,47,41,255,47,41,255,47,41,255,47,41,255,47,41,255,47,41,255,47,41,255,47,41,255,47,41,255,47,41,255,47,41,255,47,41,255,47,41,141,3,0,141,3,0,141,3,0,141,3,0,141,3,0,141,3,0,141,3,0,141,3,0,141,3,0,141,3,0,141,3,0,141,3,0,141,3,0,141,3,0,141,3,0,141,3,0,142,3,0]);t._namesTableDOS=["DEBUT","OBJET","CARTE","GEN","CHUTE","CODE","DESINTEG","INTRO1","STREM","HOLOSEQ","CARTEID","PONT","ASC","MAP","METRO","MISSIONS","GENMIS","MEMO","TAXI","ACCROCHE","VOYAGE","TELEPORT","LIFT","ESPIONS","LOG","FIN","GENEXP","LOGOS","OVER","SCORE","INTRO2","SERRURE","HOLOCUBE","CHUTE2","LOGOSSSI"],t._offsetsTableDOS=i,t._offsetsTableAmiga=r,t._amigaDemoOffsetsTable=_,t._ssiOffsetsTable=a,t._cosTable=o,t._sinTable=n,t._creditsDataDOS=l,t._creditsDataAmiga=h,t._creditsCutSeq=c,t._musicTable=u,t._protectionShapeData=p,t._frTextsTable=[{num:1,str:"VOUS RAMASSEZ L'HOLOCUBE"},{num:2,str:"VOUS RAMASSEZ LA CLE"},{num:4,str:"VOUS RAMASSEZ LE PISTOLET"},{num:5,str:"VOTRE BOUCLIER EST RECHARGE"},{num:10,str:"VOUS RAMASSEZ||LA CARTE DE CREDITS"},{num:14,str:"LA PILE EST RECHARGEE"},{num:15,str:"VOUS RAMASSEZ LA PILE"},{num:16,str:"VOUS RAMASSEZ LE TELEPORTEUR"},{num:18,str:"VOUS RAMASSEZ LA CARTE ID"},{num:21,str:"VOUS LUI DONNEZ LE TELEPORTEUR"},{num:32,str:"LA RECEPTIONNISTE VOUS DONNE||UN PAQUET"},{num:33,str:"VOUS DONNEZ LE COLIS"},{num:34,str:"LE GOUVERNEUR VOUS DONNE||LA CARTE DE TRAVAIL"},{num:35,str:"LE FAUSSAIRE VOUS DONNE||LA FAUSSE CARTE ID"},{num:36,str:"VOUS RAMASSEZ LE FUSIBLE"},{num:43,str:"VOUS LUI TENDEZ||VOS PAPIERS"},{num:44,str:"VOUS LUI DONNEZ L'ARGENT"},{num:49,str:"IL VOUS DONNE||UNE CEINTURE ANTI-G"},{num:60,str:"VOUS RAMASSEZ LE TELE RECEPTEUR"},{num:-1,str:null}],t._enTextsTable=[{num:1,str:"YOU PICK UP THE HOLOCUBE"},{num:2,str:"YOU PICK UP THE KEY"},{num:3,str:"YOU PICK UP THE GUN"},{num:5,str:"YOUR SHIELD IS RECHARGED"},{num:10,str:"YOU PICK UP THE CREDIT CARD"},{num:14,str:"THE CARTRIDGE IS RECHARGED"},{num:15,str:"YOU PICK UP THE CARTRIDGE"},{num:16,str:"YOU PICK UP THE TELEPORTER"},{num:18,str:"YOU PICK UP THE I.D. CARD"},{num:21,str:"YOU GIVE HIM THE TELEPORTER"},{num:32,str:"THE RECEPTIONIST GIVES YOU||A PACKAGE"},{num:33,str:"YOU GIVE THE PARCEL"},{num:34,str:"THE GOVERNOR GIVES YOU||A WORKING PERMIT"},{num:35,str:"THE FORGER GIVES YOU||A FAKE I.D. CARD"},{num:36,str:"YOU PICK UP THE FUSE"},{num:43,str:"YOU GIVE HIM||YOUR PAPERS"},{num:44,str:"YOU GIVE HIM MONEY"},{num:49,str:"HE GIVES YOU||AN ANTI-G BELT"},{num:60,str:"YOU PICK UP THE TELE RECEPTER"},{num:-1,str:null}],t._demoInputs=[{name:"demo1.bin",level:0,room:51,x:96,y:70},{name:"demo51.bin",level:5,room:0,x:96,y:214},{name:"demo3.bin",level:2,room:255,x:0,y:0}],t._gameLevels=[{name:"level1",name2:"level1",nameAmiga:"level1",cutscene_id:0,sound:1,track:3},{name:"level2",name2:"level2",nameAmiga:"level2",cutscene_id:47,sound:1,track:4},{name:"level3",name2:"level3",nameAmiga:"dt",cutscene_id:65535,sound:3,track:5},{name:"level4",name2:"level4_1",nameAmiga:"level3_1",cutscene_id:52,sound:3,track:6},{name:"level4",name2:"level4_2",nameAmiga:"level3_2",cutscene_id:57,sound:3,track:6},{name:"level5",name2:"level5_1",nameAmiga:"level4_1",cutscene_id:53,sound:4,track:7},{name:"level5",name2:"level5_2",nameAmiga:"level4_2",cutscene_id:65535,sound:4,track:7}],t.scoreTable=d,t._monsterListLevel1=f,t._monsterListLevel2=y,t._monsterListLevel3=m,t._monsterListLevel4_1=g,t._monsterListLevel4_2=b,t._monsterListLevel5_1=T,t._monsterListLevel5_2=E,t._monsterListLevels=A,t._monsterPals=S,t._monsterNames=[["junky","mercenai","replican","glue"],["junky","garde","replicant","glue"]],t._stringsTableFR=w,t._stringsTableEN=R,t._stringsTableDE=P,t._stringsTableSP=v,t._stringsTableIT=C,t._stringsTableJP=L,t._gameSavedSoundLen=8005,t._textsTableFR=["CONTINUER OU ABANDONNER ?","TEMPS","CONTINUER","ABANDONNER","TERMINEE","NIVEAU","START","DIFFICULTE","MOT DE PASSE","INFO","QUITTER","NIVEAU DE DIFFICULTE :","FACILE","NORMAL","EXPERT","ENTREZ LE MOT DE PASSE POUR","ACCEDER AU NIVEAU SOUHAITE:","REPRENDRE","ABANDONNER","CHARGER","SAUVEGARDER","PARTIE","DEMO"],t._textsTableEN=["CONTINUE OR ABORT THIS GAME ?","TIME","CONTINUE","ABORT","COMPLETED","LEVEL","START","SKILL","PASSWORD","INFO","QUIT","SKILL LEVEL :","EASY","NORMAL","EXPERT","Enter password for desired","level :","RESUME GAME","ABORT GAME","LOAD GAME","SAVE GAME","SLOT","DEMO"],t._textsTableDE=["WEITERSPIELEN ODER ABBRECHEN ?","ZEIT : ","WEITERSPIELEN","ABBRECHEN","FERTIG","LEVEL","START","SKILL","PASSWORD","INFO","END","SKILL LEVEL :","LEICHT","NORMAL","PROFI","GEBEN SIE DAS PASSWORT F[R","DAS GEW[NSCHTE LEVEL EIN :","WEITERSPIELEN","SPIEL ABBRECHEN","LADEN","SPEICHERN","SPIEL","DEMO"],t._textsTableSP=["CONTINUAR O TERMINAR JUEGO ?","TIEMPO","SEGUIR","PARAR","PUNTOS","NIVEL","EMPEZAR","DIFICULTAD","CONTRASE}A","INFO","SALIR","NIVEL DE DIFICULTAD :","SENCILLO","NORMAL","EXPERTO","ESCRIBA LA CONTRASE}A","PARA EL NIVEL DESEADO :","REANUDAR JUEGO","PARAR JUEGO","CARGAR DATOS","GUARDAR DATOS","JUEGO","DEMO"],t._textsTableIT=["CONTINUA O ABBANDONA GIOCO","TEMPO","CONTINUA","ESCI","ABBANDONA","LIVELLO","INIZIO","ABILITA","PASSWORD","INFORMAZIONI","ESCI","LIVELLO ABILITA :","FACILE","NORMAL","EXPERTO","INSERISCI LA PASSWORD PER","IL LIVELLO DESIDERATO :","RIPRENDI GIOCO","ESCI DAL GIOCO","CARICA IL GIOCO","SALVA IL GIOCO","SLOT","DEMO"],t._level1TbnJP=O,t._level2TbnJP=D,t._level3TbnJP=N,t._level41TbnJP=I,t._level42TbnJP=k,t._level51TbnJP=x,t._level52TbnJP=M,t._cineBinJP=U,t._cineTxtJP=B,t._voicesOffsetsTable=G,t._spmOffsetsTable=F,t._splNames=["pneuma05.spl","bip00105.spl","bip00205.spl","laser205.spl","tir2","explo.spl","mort0105.spl","mort0310.spl","bouclier.spl","asc_debut","asc_milieu","asc_fin","verre_casse","chalu110.spl","saut.spl","trappe.spl","impact_shield.spl","stby0105.spl","teletower.spl","desint.spl","recharge.spl","mitrail.spl","touche.spl","coup","chenille.spl","robot","tombe.spl","porte_ferme.spl","canon_down","elec.spl","mater210.spl","mater07.spl","mur_bouge.spl","taxi.spl","souris.spl","et.spl","et_touche.spl","et_transform.spl","alien_move.spl","jungle2","jungle1","piaf2","goute_eau","piaf1","pas1","pas2","croa","alien1","alien2","alien3","ventilo","poussiere","bip","electri","machine","alarme2","cerveau","reflet","roule_boule","hehe3","recept","bestiole","lampe","mine","effort","frappe",null],t._gameSavedSoundData=H,t._pge_modKeysTable=j,t._protectionCodeData=W,t._protectionWordData=$,t._protectionNumberDataAmiga=V,t._protectionCodeDataAmiga=z,t._protectionPal=K,t._levelNames=["Titan / The Jungle","Titan / New Washington","Titan / Death Tower Show","Earth / Surface","Earth / Paradise Club","Planet Morphs / Surface","Planet Morphs / Inner Core"],t._passwordsDOS=["JAGUAR","COMBEL","ANTIC","NOLAN","ARTHUR","SHIRYU","RENDER","BELUGA","BANTHA","SHIVA","KASYYK","SARLAC","MAENOC","SULUST","NEPTUN","BELUGA","TOHOLD","PICOLO","FUGU","CAPSUL","ZZZAP","MANIAC","NO WAY","BELUGA"],t._passwordsFrAmiga=["BACK","LOUP","CINE","GOOD","SPIZ","BIOS","HALL","PLAY","TOIT","ZAPP","LYNX","SCSI","GARY","PONT","CLOP","CARA","CALE","FONT","HASH","FIBO","TIPS"],t._passwordsEnAmiga=["WIND","SPIN","KAVA","HIRO","TEST","GOLD","WALL","FIRE","BURN","EGGS","GURT","CHIP","TREE","BOLD","MINE","YOUR","NEST","LINE","LISA","MARY","MICE"],t._passwordsMac=["QUENCH","GHOST","LEGEND","SPHERE","BULLET","DISRUPT","TRAUMA","OPAQUE","HICK","FRGO","JERK","KOIK","KIMO","LEDUX","MORDO","OPAQUE","CURIOUS","IMPACT","LETHAL","PERSIST","MORTAL","VERDICT","KNIGHT","OPAQUE"],t._conradPal1=J,t._conradPal2=q,t._textPal=Y,t._palSlot0xF=X,t._font8Jp=Q,t._periodTable=Z,t._modulesFiles=[["intro","mod.flashback-introb"],["options","mod.flashback-options2"],["journal","mod.flashback-options1"],["ceinture","mod.flashback-ceinturea"],["desinteg","mod.flashback-desintegr"],["reunion","mod.flashback-reunion"],["voyage","mod.flashback-voyage"],["level4","mod.flashback-teleporta"],["planetexplo","mod.flashback-teleport2"],["fin","mod.flashback-fin"],["ascenseur","mod.flashback-ascenseur"],["logo","mod.flashback-logo"],["game_over","mod.flashback-game_over"],["holocube","mod.flashback-holocube"],["memoire","mod.flashback-memoire"],["chute","mod.flashback-chute"],["debut","mod.flashback-jungle"],["missions","mod.flashback-missionca"],["taxi","mod.flashback-taxi"],["donneobj","mod.flashback-donneobjt"],["missions2","mod.flashback-fin2"]],t._namesTable=["WAKEUP","TKHOLOCB","TAKEKEY0",null,"TKGUN","RECHARG0","FALLJUNG",null,null,"DISINTEG","TKCRED0",null,null,"INTRO","RCHGBATT","TAKEBATT","TKTELER0","HOLOCUBE","TKCARD",null,"BRIDGE","GVTELER",null,null,null,"HOLOMAP","MAP1","MAP2","MAP3","MAP4",null,null,"GIVEPACK","GIVEPACK","GETWORKP","GETID","TKFUSE","MISSION1","MISSION2","MISSION2","MISSION3","MISSION4","MISSION5","GIVEID1","GVCREDS1","MISSVALD",null,"ANTIG","MEMORY","GETANTIG","TAXI",null,"VOYAGE","TELEPORT","LIFTUP","LIFTDOWN",null,"SPY","GETDYNAM","JOURNAL","TKTELEX0","END","GENEXPL","BADEND",null,"GAMEOVER","MISSEND1","MISSEND1","MISSEND2","MISSEND3","MISSEND4","MISSEND5",null,null,null],t._musicData68=ee,t._musicData70=te,t._musicData72=se,t._musicData73=ie,t._musicData74=re,t._musicData75=_e,t._musicDataSample1=ae,t._musicDataSample2=oe,t._musicDataSample3=ne,t._musicDataSample4=le,t._musicDataSample5=he,t._musicDataSample6=ce,t._musicDataSample7=ue,t._musicDataSample8=pe,t._module68=de,t._module70=fe,t._module72=ye,t._module73=me,t._module74=ge,t._module75=be,t._sfxPeriodTable=Te,t._caillouSetData=Ee,t._flagEn16x12=Ae,t._flagFr16x12=Se,t._flagDe16x12=we,t._flagIt16x12=Re,t._flagJp16x12=Pe,t._flagSp16x12=ve},16:function(e,t,s){t.__esModule=!0;var i=e(6),r=e(25);const _=(e,t,s,i,r)=>0,a=(e,t,s,i,r)=>e.index!==i?(r.pge_updateGroup(t.index,e.index,s),1):0,o=(e,t,s,i,r)=>e!==t&&(1&e.flags)==(1&t.flags)&&(r._pge_compareVar2=1,r.pge_updateGroup(t.index,e.index,s),0===t.index)?65535:0,n=(e,t,s,i,r)=>e!==t&&(1&e.flags)!=(1&t.flags)&&(r._pge_compareVar1=1,r.pge_updateGroup(t.index,e.index,s),0===t.index)?65535:0,l=(e,t,s,i,r)=>e.init_PGE.object_type===i&&r._res.getAniData(e.obj_type)[3]===s?1:0,h=(e,t,s,i,r)=>e!==t&&r._res.getAniData(e.obj_type)[3]===s?1:0,c=(e,t,s,i,r)=>(e!==t&&(r.pge_updateGroup(t.index,e.index,s),r._pge_compareVar1=65535),0),u=(e,t,s,i,r)=>{if(10===s){if(e.init_PGE.object_type===s&&e.life>=0)return 1}else if(e.init_PGE.object_type===s)return 1;return 0},p=(e,t,s,i,r)=>e.init_PGE.object_type===s&&(1&e.flags)!=(1&t.flags)?1:0,d=(e,t,s,i,r)=>e.init_PGE.object_type===s&&(1&e.flags)==(1&t.flags)?1:0,f=(e,t,s,i,r)=>{let _=e.collision_slot;for(;255!==_;){let a=r._col_slotsTable[_];if(null===a)return 0;let o=_;for(_=255;null!==a;){if(0!==s(a.live_pge,e,t,i,r))return 1;if(e===a.live_pge&&(_=255&a.index),a=a.prev_slot,_===o)return 0}}return 0},y=(e,t,s,i)=>{let r=e.init_PGE.unk1C;if(!(128&e.room_location)&&e.room_location<64){const _=i._res._ctData.subarray(256);let a=112*e.room_location,o=(e.pos_y/36>>0&-2)+t,n=e.pos_x+8>>4;a+=n+16*o;let l=i._col_slots2Next,h=255;n=h,i._pge_currentPiegeFacingDir&&(h=r-1,a-=h);for(;l;){if(l.unk2.buffer===_.buffer&&l.unk2.byteOffset===_.byteOffset+a){if(l.data_size=r-1,r>=112)throw`Assertion failed: ${r} < 0x70`;return _.subarray(a).fill(s,0,r),a+=r,1}if(++h,l=l.next_slot,0==--h)break}const c=i._col_slots2.findIndex((e=>e===i._col_slots2Cur));if(c<255){l=i._col_slots2Cur,l.unk2=_.subarray(a),l.data_size=r-1;const e=l.data_buf,t=_.subarray(a);let o=0,n=0,h=r;if(h>=16)throw`Assertion failed: ${h} < 0x10`;for(;h--;)e[n++]=255&t[o],t[o++]=s<<24>>24;i._col_slots2Cur=i._col_slots2[c+1],l.next_slot=i._col_slots2Next,i._col_slots2Next=l}}return 1},m=(e,t)=>{const s=t._pgeLive[e.a],i=e.pge;return i.pos_x=s.pos_x,i.pos_y=s.pos_y,i.room_location=s.room_location,i.flags&=254,1&s.flags&&(i.flags|=1),t.pge_reorderInventory(e.pge),65535},g=(e,t,s,i)=>{if(s<1||s>4)throw`Assertion failed: ${s} >= 1 1 && ${s} <= 4`;const r=e.init_PGE.counter_values[s-1];let _=i._pge_groupsTable[e.index];for(;_;){if(_.group_id===t&&_.index===r)return 1;_=_.next_entry}return 0},b=[null,(e,t)=>1===t._pge_inpKeysMask?65535:0,(e,t)=>{let s=8;return t._pge_currentPiegeFacingDir&&(s=4),s===t._pge_inpKeysMask?65535:0},(e,t)=>2===t._pge_inpKeysMask?65535:0,(e,t)=>{let s=4;return t._pge_currentPiegeFacingDir&&(s=8),s===t._pge_inpKeysMask?65535:0},(e,t)=>{if(e.a>=3)throw`Assertion failed: ${e.a} < 3`;return(1|i.Game._pge_modKeysTable[e.a])===t._pge_inpKeysMask?65535:0},(e,t)=>{if(e.a>=3)throw`Assertion failed: ${e.a} < 3`;let s=i.Game._pge_modKeysTable[e.a];return t._pge_currentPiegeFacingDir?s|=4:s|=8,s===t._pge_inpKeysMask?65535:0},(e,t)=>{if(e.a>=3)throw`Assertion failed: ${e.a} < 3`;return(2|i.Game._pge_modKeysTable[e.a])===t._pge_inpKeysMask?65535:0},(e,t)=>{if(e.a>=3)throw`Assertion failed: ${e.a} < 3`;let s=i.Game._pge_modKeysTable[e.a];return t._pge_currentPiegeFacingDir?s|=8:s|=4,s===t._pge_inpKeysMask?65535:0},(e,t)=>0===t._pge_inpKeysMask?65535:0,(e,t)=>{if(e.a>=3)throw`Assertion failed: ${e.a} < 3`;const s=i.Game._pge_modKeysTable[e.a];return(15&t._pge_inpKeysMask|s)===t._pge_inpKeysMask?65535:0},(e,t)=>t.col_getGridData(e.pge,0,-e.a),(e,t)=>t.col_getGridData(e.pge,0,0),(e,t)=>t.col_getGridData(e.pge,0,e.a),(e,t)=>t.col_getGridData(e.pge,1,-e.a),(e,t)=>t.col_getGridData(e.pge,1,0),(e,t)=>t.col_getGridData(e.pge,1,e.a),(e,t)=>t.col_getGridData(e.pge,2,-e.a),(e,t)=>t.col_getGridData(e.pge,2,0),(e,t)=>t.col_getGridData(e.pge,2,e.a),(e,t)=>65535&t.col_getGridData(e.pge,0,-e.a)?0:65535,(e,t)=>65535&t.col_getGridData(e.pge,0,0)?0:65535,(e,t)=>65535&t.col_getGridData(e.pge,0,e.a)?0:65535,(e,t)=>65535&t.col_getGridData(e.pge,1,-e.a)?0:65535,(e,t)=>65535&t.col_getGridData(e.pge,1,0)?0:65535,null,(e,t)=>65535&t.col_getGridData(e.pge,2,-e.a)?0:65535,(e,t)=>65535&t.col_getGridData(e.pge,2,0)?0:65535,(e,t)=>65535&t.col_getGridData(e.pge,2,e.a)?0:65535,(e,t)=>65535&t.col_getGridData(e.pge,0,e.a)&&0===t.col_getGridData(e.pge,0,e.a+1)&&0===t.col_getGridData(e.pge,-1,e.a)?65535:0,(e,t)=>65535&t.col_getGridData(e.pge,2,e.a)&&0===t.col_getGridData(e.pge,2,e.a+1)&&0===t.col_getGridData(e.pge,1,e.a)?65535:0,(e,t)=>65535&t.col_getGridData(e.pge,0,e.a)&&0===t.col_getGridData(e.pge,0,e.a-1)&&0===t.col_getGridData(e.pge,-1,e.a)?65535:0,(e,t)=>65535&t.col_getGridData(e.pge,2,e.a)&&0===t.col_getGridData(e.pge,2,e.a-1)&&0===t.col_getGridData(e.pge,1,e.a)?65535:0,(e,t)=>65535&t.col_getGridData(e.pge,2,e.a-1)&&0===t.col_getGridData(e.pge,2,e.a)&&0===t.col_getGridData(e.pge,1,e.a-1)?65535:0,(e,t)=>{let s=t._pge_groupsTable[e.pge.index];for(;s;){if(s.group_id===e.a)return 65535;s=s.next_entry}return 0},(e,t)=>{const s=e.pge;return t.pge_updateGroup(s.index,s.init_PGE.counter_values[0],e.a),65535},(e,t)=>{const s=e.pge;return t.pge_updateGroup(s.index,s.init_PGE.counter_values[1],e.a),65535},(e,t)=>{const s=e.pge;return t.pge_updateGroup(s.index,s.init_PGE.counter_values[2],e.a),65535},(e,t)=>{const s=e.pge;return t.pge_updateGroup(s.index,s.init_PGE.counter_values[3],e.a),65535},(e,t)=>{const s=e.pge;return s.life<=0?(10===s.init_PGE.object_type&&(t._score+=100),1):0},(e,t)=>65535&t.col_getGridData(e.pge,1,e.a-1)&&0===t.col_getGridData(e.pge,2,e.a)?65535:0,(e,t)=>65535&t.col_getGridData(e.pge,1,e.a-1)&&0===t.col_getGridData(e.pge,1,e.a)?65535:0,(e,t)=>0===t.col_getGridData(e.pge,1,e.a-1)&&65535&t.col_getGridData(e.pge,1,e.a)?65535:0,(e,t)=>f(e.pge,e.a,p,0,t),(e,t)=>f(e.pge,e.a,d,0,t),(e,t)=>1^f(e.pge,e.a,u,0,t),(e,t)=>1,(e,t)=>{const s=t.col_findPiege(e.pge,3);return s?(t.pge_updateGroup(e.pge.index,s.index,e.a),65535):0},(e,t)=>(t.pge_updateInventory(t._pgeLive[e.a],e.pge),e.pge.room_location=255,65535),m,(e,t)=>{const s=t._pgeLive[0];return 255!==s.current_inventory_PGE&&t._res._pgeInit[s.current_inventory_PGE].object_id===e.a?1:0},(e,t)=>(255!==e.pge.current_inventory_PGE&&t.pge_updateGroup(e.pge.index,e.pge.current_inventory_PGE,e.a),1),(e,t)=>(15&t._pge_inpKeysMask|i.Game._pge_modKeysTable[0])===t._pge_inpKeysMask&&0===t.col_getGridData(e.pge,2,-e.a)?65535:0,(e,t)=>{if(e.a>=3)throw`Assertion failed: ${e.a} < 3`;return i.Game._pge_modKeysTable[e.a]===t._pge_inpKeysMask?65535:0},(e,t)=>y(e.pge,e.a,1,t),(e,t)=>y(e.pge,e.a,0,t),(e,t)=>g(e.pge,e.a,1,t),(e,t)=>g(e.pge,e.a,2,t),(e,t)=>g(e.pge,e.a,3,t),(e,t)=>g(e.pge,e.a,4,t),(e,t)=>f(e.pge,e.a,l,e.b,t),(e,t)=>f(e.pge,e.a,h,0,t),(e,t)=>(e.pge.counter_value=e.a,1),(e,t)=>(e.pge.counter_value-=1,e.a===e.pge.counter_value?65535:0),(e,t)=>{let s,r=e.pge.room_location;if(r<0||r>=64)return 0;if(t._currentRoom===r)s=1;else if(t._col_currentLeftRoom===r)s=0;else{if(t._col_currentRightRoom!==r)return 0;s=2}let _=e.pge.pos_x+8>>4,a=e.pge.pos_y/72>>0;if(a>=0&&a<=2){a*=16;let o,n=e.a;if(t._pge_currentPiegeFacingDir&&(n=-n),n>=0){n>16&&(n=16);let l=new Int8Array(t._res._ctData.buffer),h=t._res._ctData.byteOffset+256+112*r+2*a+16+_;const c=new Uint8Array(t._col_activeCollisionSlots.buffer);let u=t._col_activeCollisionSlots.byteOffset+48*s+a+_,p=_;--n;do{if(--p,p<0){if(--s,s<0)return 0;if(r=t._res._ctData[i.CT_LEFT_ROOM+r],r<0)return 0;p=15,l=new Int8Array(t._res._ctData.buffer),h=t._res._ctData.byteOffset+257+112*r+2*a+15+16,u-=31}if(--u,o=c[u]<<24>>24,o>=0){let s=t._col_slotsTable[o];do{if(e.pge!==s.live_pge&&4&s.live_pge.flags&&s.live_pge.init_PGE.object_type===e.b)return 1;s=s.prev_slot}while(s)}if(--h,0!==l[h])return 0;--n}while(n>=0)}else{n=-n,n>16&&(n=16);let l=t._res._ctData.subarray(257+112*r+2*a+16+_),h=0;const c=new Uint8Array(t._col_activeCollisionSlots.buffer);let u=t._col_activeCollisionSlots.byteOffset+1+48*s+a+_,p=_;--n;do{if(++p,16===p){if(++s,s>2)return 0;if(r=t._res._ctData[i.CT_RIGHT_ROOM+r],r<0)return 0;p=0,l=t._res._ctData.subarray(257+112*r+2*a+16),h=0,u+=32}if(u++,o=c[u]<<24>>24,o>=0){let s=t._col_slotsTable[o];do{if(e.pge!==s.live_pge&&4&s.live_pge.flags&&s.live_pge.init_PGE.object_type===e.b)return 1;s=s.prev_slot}while(s)}if(o=l[h],++h,0!==o)return 0;--n}while(n>=0)}}return 0},(e,t)=>{if(e.a<=3){const s=e.pge.init_PGE.counter_values[e.a];if(s>=0){const e=t._pgeLive[s];e.flags|=4,t._pge_liveTable2[s]=e}}return 1},(e,t)=>{if(e.a<=3){const s=e.pge.init_PGE.counter_values[e.a];s>=0&&(t._pge_liveTable2[s]=null,t._pgeLive[s].flags&=-5)}return 1},(e,t)=>{const s=()=>(t._pge_playAnimSound=!1,1),r=()=>(_.flags&=-5,_.collision_slot=255,t._pge_liveTable2[_.index]=null,s()),_=e.pge;return 4&_.init_PGE.flags?128&t._currentRoom?s():128&_.room_location||_.room_location>63?r():_.room_location===t._currentRoom||_.room_location===t._res._ctData[i.CT_UP_ROOM+t._currentRoom]||_.room_location===t._res._ctData[i.CT_DOWN_ROOM+t._currentRoom]||_.room_location===t._res._ctData[i.CT_RIGHT_ROOM+t._currentRoom]||_.room_location===t._res._ctData[i.CT_LEFT_ROOM+t._currentRoom]?s():r():r()},(e,t)=>(e.pge.counter_value=e.pge.init_PGE.counter_values[e.a],1),(e,t)=>f(e.pge,e.a,_,0,t),(e,t)=>(t._pge_compareVar1=0,f(e.pge,e.a,n,0,t),t._pge_compareVar1),(e,t)=>(t._pge_compareVar2=0,f(e.pge,e.a,o,0,t),t._pge_compareVar2),(e,t)=>{const s=t.col_findPiege(t._pgeLive[0],e.pge.init_PGE.counter_values[0]);return s&&s.life===e.pge.life?(t.pge_updateGroup(e.pge.index,s.index,e.a),1):0},(e,t)=>f(t._pgeLive[0],e.a,a,e.pge.init_PGE.counter_values[0],t),(e,t)=>{const s=e.pge;s.room_location=254,s.flags&=-5,t._pge_liveTable2[s.index]=null;const i=t.pge_getInventoryItemBefore(t._pgeLive[e.a],s);if(i===t._pgeLive[e.a]){if(s.index!==i.current_inventory_PGE)return 1}else if(s.index!==i.next_inventory_PGE)return 1;return t.pge_removeFromInventory(i,s,t._pgeLive[e.a]),1},(e,t)=>{const s=e.pge;return s.room_location=254,s.flags&=-5,t._pge_liveTable2[s.index]=null,10===s.init_PGE.object_type&&(t._score+=200),65535},(e,t)=>e.pge.room_location===t._currentRoom?1:0,(e,t)=>e.pge.room_location===t._currentRoom?0:1,(e,t)=>{let s=e.pge;e.pge.pos_y+=e.a;let i=s.current_inventory_PGE;for(;255!==i;)s=t._pgeLive[i],s.pos_y+=e.a,i=s.next_inventory_PGE;return 1},(e,t)=>(0===t._deathCutsceneCounter&&(t._deathCutsceneCounter=e.a),1),(e,t)=>f(e.pge,e.a,u,0,t),null,(e,t)=>r.col_detectHit(e.pge,e.a,e.b,r.col_detectHitCallback4,r.col_detectHitCallback1,0,0,t),(e,t)=>r.col_detectHit(e.pge,e.a,e.b,r.col_detectHitCallback5,r.col_detectHitCallback1,0,0,t),(e,t)=>null!==t.col_findPiege(t._pgeLive[0],e.a)?1:0,(e,t)=>(e.pge.life=e.a,1),(e,t)=>(e.pge.life+=e.a,1),(e,t)=>{if(e.a<0||e.a>=4)throw`Assertion failed: ${e.a} >= 0 && ${e.a} < 4`;const s=e.pge.init_PGE.counter_values[e.a];return e.pge.room_location=s,1===s&&(t._loadMap=!0),t.pge_setupDefaultAnim(e.pge),1},(e,t)=>(t._pgeLive[e.a].life=e.pge.init_PGE.counter_values[0],1),(e,t)=>(e.pge.life=t._pgeLive[e.a].life-1,1),(e,t)=>(0===t._deathCutsceneCounter&&(t._cut._id=e.a),1),null,null,null,null,(e,t)=>{const s=e.pge;let r,_=s.room_location;if(_<0||_>=64)return 0;let a=s.init_PGE.counter_values[0];a<=0?(r=1,a=-a):r=-1,t._pge_currentPiegeFacingDir&&(r=-r);let o=s.pos_x+8>>4,n=0;do{let a=t.col_getGridData(s,1,-n);if(!(0===a||2&a&&1===e.a))return s.room_location=_,s.pos_x=16*o,1;if(o<0){if(_=t._res._ctData[i.CT_LEFT_ROOM+_],_<0||_>=64)return 0;o+=16}else if(o>15){if(_=t._res._ctData[i.CT_RIGHT_ROOM+_],_<0||_>=64)return 0;o-=16}o+=r,++n}while(n<=a);return 0},(e,t)=>{let s=t._pge_groupsTable[e.pge.index];for(;s;){if(s.group_id===e.a)return e.a=s.index,e.b=0,m(e,t),1;s=s.next_entry}return 0},(e,t)=>{let s=65535&e.a;return 0!==s&&t.getRandomNumber()%s==0?1:0},(e,t)=>r.col_detectHit(e.pge,e.a,e.b,r.col_detectHitCallback3,r.col_detectHitCallback1,0,-1,t),(e,t)=>r.col_detectHit(e.pge,e.a,e.b,r.col_detectHitCallback2,r.col_detectHitCallback1,0,-1,t),(e,t)=>r.col_detectGunHit(e.pge,e.a,e.b,r.col_detectGunHitCallback3,r.col_detectGunHitCallback1,1,-1,t),null,null,(e,t)=>2&t.col_getGridData(e.pge,1,-e.a)?65535:0,(e,t)=>y(e.pge,e.a,2,t),null,(e,t)=>{let s,r=e.pge,_=r.room_location;if(_<0||_>=64)return 0;let a=0,o=null,n=0;if(t._currentRoom===_)a=1;else if(t._col_currentLeftRoom===_)a=0;else{if(t._col_currentRightRoom!==_)return 0;a=2}let l=r.pos_x+8>>4,h=r.pos_y/72>>0;if(h>=0&&h<=2){h*=16;let c=e.a;if(t._pge_currentPiegeFacingDir&&(c=-c),c>=0){c>16&&(c=16),o=t._res._ctData,n=256+112*_+2*h+16+l;const u=new Uint8Array(t._col_activeCollisionSlots.buffer);let p=t._col_activeCollisionSlots.byteOffset+48*a+h+l;++p,++n;let d=l;do{if(--d,d<0){if(--a,a<0)return 0;if(_=t._res._ctData[i.CT_LEFT_ROOM+_],_<0)return 0;d=15,n=257+112*_+2*h+16+d,p-=31}if(--p,s=u[p]<<24>>24,s>=0){let i=t._col_slotsTable[s];do{if(r=i.live_pge,e.pge!==r&&4&r.flags&&r.life>=0&&(1===r.init_PGE.object_type||10===r.init_PGE.object_type))return 1;i=i.prev_slot}while(i)}if(--n,0!==o[n])return 0;--c}while(c>=0)}else{c=-c,c>16&&(c=16),o=t._res._ctData,n=257+112*_+2*h+16+l;const u=t._col_activeCollisionSlots;let p=1+48*a+h+l,d=l,f=!0;do{if(!f&&(++d,16===d)){if(++a,a>2)return 0;if(_=t._res._ctData[i.CT_RIGHT_ROOM+_],_<0)return 0;d=0,n=256+112*_+2*h+16+d,p+=32}if(f=!1,s=u[p]<<24>>24,++p,s>=0){let i=t._col_slotsTable[s];do{if(r=i.live_pge,e.pge!==r&&4&r.flags&&r.life>=0&&(1===r.init_PGE.object_type||10===r.init_PGE.object_type))return 1;i=i.prev_slot}while(i)}if(s=o[n]<<24>>24,++n,0!==s)return 0;--c}while(c>=0)}}return 0},(e,t)=>{const s=e.pge;let i=t._pge_groupsTable[s.index];if(i)if(0===e.a)do{if(1===i.group_id||2===i.group_id)return 1;i=i.next_entry}while(i);else do{if(3===i.group_id||4===i.group_id)return 1;i=i.next_entry}while(i);return 0},null,(e,t)=>{const{obj:s}=t.col_findCurrentCollidingObject(e.pge,3,255,255);return s===e.a?1:0},null,(e,t)=>{const s=e.pge;let i=t._pge_groupsTable[s.index];for(;i;){if(e.a===i.group_id)return t.pge_updateGroup(s.index,i.index,12),1;i=i.next_entry}return 0},null,null,null,(e,t)=>{const s=t.col_findPiege(e.pge,e.a);return null!==s?(t.pge_updateInventory(s,e.pge),65535):0},null,null,null,null,(e,t)=>{const s=e.pge,r=t._pgeLive[0];if(s.pos_y/72>>0==(r.pos_y-8)/72>>0)if(s.room_location===r.room_location)if(0===e.a){if(t._pge_currentPiegeFacingDir){if(s.pos_x<r.pos_x)return 65535}else if(s.pos_x>r.pos_x)return 65535}else{let i;if(i=t._pge_currentPiegeFacingDir?r.pos_x-s.pos_x:s.pos_x-r.pos_x,i>0&&i<16*e.a)return 65535}else if(0===e.a&&!(128&s.room_location)&&s.room_location<64)if(t._pge_currentPiegeFacingDir){if(r.room_location===t._res._ctData[i.CT_RIGHT_ROOM+s.room_location])return 65535}else if(r.room_location===t._res._ctData[i.CT_LEFT_ROOM+s.room_location])return 65535;return 0},(e,t)=>{const s=e.pge,r=t._pgeLive[0];if(s.pos_y/72>>0==(r.pos_y-8)/72>>0)if(s.room_location===r.room_location)if(0===e.a){if(t._pge_currentPiegeFacingDir){if(s.pos_x>r.pos_x)return 65535}else if(s.pos_x<=r.pos_x)return 65535}else{let i;if(i=t._pge_currentPiegeFacingDir?s.pos_x-r.pos_x:r.pos_x-s.pos_x,i>0&&i<16*e.a)return 65535}else if(0===e.a&&!(128&s.room_location)&&s.room_location<64)if(t._pge_currentPiegeFacingDir){if(r.room_location===t._res._ctData[i.CT_LEFT_ROOM+s.room_location])return 65535}else if(r.room_location===t._res._ctData[i.CT_RIGHT_ROOM+s.room_location])return 65535;return 0},null,null,(e,t)=>{let s=t.col_findPiege(e.pge,3);return null===s&&(s=t.col_findPiege(e.pge,5),null==s&&(s=t.col_findPiege(e.pge,9),null===s&&(s=t.col_findPiege(e.pge,65535)))),null!==s&&t.pge_updateGroup(e.pge.index,s.index,e.a),0},(e,t)=>{const s=255&e.a,i=e.a>>8;return t.playSound(s,i),65535},(e,t)=>(t._pge_compareVar1=0,f(e.pge,e.a,c,0,t),t._pge_compareVar1),(e,t)=>{const s=e.pge;let i=s.collision_slot,r=s.index;for(;255!==i;){let s=t._col_slotsTable[i];for(;s;){if(s.live_pge!==e.pge&&3===s.live_pge.init_PGE.object_type&&r!==s.live_pge.unkF)return 0;s.live_pge===e.pge&&(i=255&s.index),s=s.prev_slot}}return 65535},null,null,null,(e,t)=>{let s=t._pgeLive[0],i=s.current_inventory_PGE;for(;255!==i;){if(s=t._pgeLive[i],s.init_PGE.object_id===e.a)return 65535;i=s.next_inventory_PGE}return 0},null,null,(e,t)=>r.col_detectGunHit(e.pge,e.a,e.b,r.col_detectGunHitCallback2,r.col_detectGunHitCallback1,1,0,t),(e,t)=>{if(e.a>=4)throw`Assertion failed: ${e.a} < 4`;const s=65535&e.pge.init_PGE.counter_values[e.a],i=255&s,r=s>>8;return t.playSound(i,r),65535},(e,t)=>{const s=e.pge;return s.pos_x&=65520,70!==s.pos_y&&142!=s.pos_y&&214!==s.pos_y&&(s.pos_y=72*(1+(s.pos_y/72>>0))-2),65535},null,(e,t)=>(t._pge_opTempVar1=e.a,65535),(e,t)=>t._pge_opTempVar1!==e.a?0:65535];t._pge_opcodeTable=b},17:function(e,t,s){t.__esModule=!0;class i{constructor(){this._areaPoints=new Int16Array(2*i.AREA_POINTS_SIZE)}static calcPolyStep1(e,t){if(0===t)throw`Assertion failed: ${t} !== 0`;let s=256*e;return s=s>>16<t?256*(s/t>>0):(s/256>>0)/t>>0>>0&4294901760,s}static calcPolyStep2(e,t){if(0===t)throw`Assertion failed: ${t} !== 0`;let s=256*e;return s=s>>16<t?256*(s/t>>0):(s/256>>0)/t>>0<<16,s}drawPolygonHelper1(e,t,s,r,_){const a=this._areaPoints;let o,n,l=!0;e=a[r],t=a[r+1];do{l?l=!1:e=a[r],o=a[--r]-t,n=a[--r]-e}while(o<=0&&_<r);return e<<=16,o>0&&(s=i.calcPolyStep1(n,o)),{x:e,y:t,step:s,pts:r,start:_}}drawPolygonHelper2(e,t,s,r,_){const a=this._areaPoints;let o,n,l=!0;e=a[_++],t=a[_++];do{l?l=!1:(e=a[_],_+=2),o=a[_+1]-t,n=a[_]-e}while(o<=0&&_<r);return e<<=16,o>0&&(s=i.calcPolyStep2(n,o)),{x:e,y:t,step:s,pts:r,start:_}}setLayer(e,t){this._layer=e,this._layerPitch=t}setClippingRect(e,t,s,i){this._crx=e,this._cry=t,this._crw=s,this._crh=i}addEllipseRadius(e,t,s){e>=0&&e<=this._crh&&(e=2*(e-this._areaPoints[0]),t<0&&(t=0),s>=this._crw&&(s=this._crw-1),this._areaPoints[e+1]=t,this._areaPoints[e+2]=s)}drawEllipse(e,t,s,i,r){let _=!1,a=s.y-r;if(a<0&&(a=0),a<this._crh&&s.y+r>=0){this._areaPoints[0]=a;let o,n,l,h,c=0,u=i*i*2,p=i*i*4,d=r*r*2,f=r*r*4,y=0,m=i*((65535&d)+(d>>16)),g=2*m;for(o=n=f/2-g+i*i,l=h=u-m+r*r;n<0;){let e=s.x+i,t=s.x-i,r=s.y+c,_=s.y-c;t!==e&&(this.addEllipseRadius(r,t,e),_<r&&this.addEllipseRadius(_,t,e)),c+=1,y+=p,l=y,h<0?(h+=l+u,n+=l):(--i,g-=f,o=g,h+=l+u-o,n+=l+d-o)}for(;i>=0;){let e=!1,t=s.x+i,r=s.x-i,a=s.y+c,h=s.y-c;_||r===t||(e=!0,this.addEllipseRadius(a,r,t),h<a&&this.addEllipseRadius(h,r,t)),e&&(_=!0),--i,g-=f,l=g,n<0?(++c,_=!1,y+=p,n+=y-l+d,o=y-l+d):(n+=d-l,o=d-l)}for(_&&++c;c<=r;){let e=s.y-c,t=s.y+c;e<t&&this.addEllipseRadius(e,s.x,s.x),this.addEllipseRadius(t,s.x,s.x),++c}a=s.y+r+1,a>this._crh&&(a=this._crh),a=2*(a-this._areaPoints[0]),this._areaPoints[a+1]=-1,this.fillArea(e,t)}}fillArea(e,t){const s=this._areaPoints,i=this._layer;let r=0,_=(this._cry+s[r++])*this._layerPitch+this._crx,a=s[r++];if(a>=0)if(t&&e>199)do{const t=Math.min(this._crw-1,s[r++]);for(;a<=t;++a)i[_+a]|=8&e;_+=this._layerPitch,a=s[r++]}while(a>=0);else do{const t=Math.min(this._crw-1,s[r++]);if(a<=t){const s=t-a+1;i.fill(e,_+a,_+a+s)}_+=this._layerPitch,a=s[r++]}while(a>=0)}drawSegment(e,t,s,i,r){let _,a,o,n;_=a=i[0].x,o=n=i[0].y;for(let e=1;e<r;++e){let t=i[e].x,s=i[e].y;(_<<16)+o>(t<<16)+s&&(_=t,o=s),(a<<16)+n<(t<<16)+s&&(a=t,n=s)}_<0&&(_=0),a>=this._crw&&(a=this._crw-1),this._areaPoints[0]=s,this._areaPoints[1]=_,this._areaPoints[2]=a,this._areaPoints[3]=-1,this.fillArea(e,t)}drawPoint(e,t,s=!1){t.x>=0&&t.x<this._crw&&t.y>=0&&t.y<this._crh&&(s&&e>199?this._layer[(t.y+this._cry)*this._layerPitch+t.x+this._crx]|=8&e:this._layer[(t.y+this._cry)*this._layerPitch+t.x+this._crx]=e)}drawLine(e,t,s){let i=1,r=1,_=s.x-t.x;_<0&&(i=-1,_=-_);let a,o,n,l,h=s.y-t.y;h<0&&(r=-1,h=-h),_<h?(a=0,o=1,n=_,l=h,r<0&&(o=-1)):(a=1,o=0,n=h,l=_,i<0&&(a=-1));const c={x:t.x,y:t.y};let u=2*n-2*l,p=2*n,d=2*n-l;if(l>=0)for(this.drawPoint(e,c);--l>=0;)d>=0?(c.x+=i,c.y+=r,d+=u):(c.x+=a,c.y+=o,d+=p),this.drawPoint(e,c)}drawPolygon(e,t,s,r){if(4*r>=256)throw`Assertion failed: ${4*r} < 0x100`;const _=this._areaPoints;let a,o,n,l,h=i.AREA_POINTS_SIZE,c=i.AREA_POINTS_SIZE+2*r;a=o=s[0].x,n=l=s[0].y;let u=h;_[h++]=_[c++]=s[0].x,_[h++]=_[c++]=s[0].y;for(let e=1;e<r;++e){let t=s[e].x,i=s[e].y;n>i&&(n=i,u=h),l<i&&(l=i),_[h++]=_[c++]=t,_[h++]=_[c++]=i,a>t&&(a=t),o<t&&(o=t)}let p=0;if(o<0||a>=this._crw||l<0||n>=this._crh)return;if(2===r)return void this.drawLine(e,s[0],s[1]);if(l===n)return void this.drawSegment(e,t,l,s,r);const d=()=>(_[p++]=-1,this.fillArea(e,t),0),f=()=>{if(A=l-n,A>=0)do{S=w,S<0&&(S=0),b=P>>16,b>o&&(b=o),_[p++]=S>>16,_[p++]=b,w+=v,P+=C,--A}while(A>=0);return d()},y=()=>(R=v,R>=0&&R>=L&&(R=R/2>>0,w-=R),R=C,R<0&&(R=R/2>>0,P-=R),S=w,S<0&&(S=0),b=P>>16,b>o&&(b=o),_[p++]=S>>16,_[p++]=b,d()),m=()=>{let e=this.drawPolygonHelper2(P,n,C,h,u);return P=e.x,n=e.y,C=e.step,h=e.pts,u=e.start,u>=h?(w=_[h]<<16,A=_[h+1],A<=l?y():d()):(e=this.drawPolygonHelper1(w,n,v,h,u),w=e.x,n=e.y,v=e.step,h=e.pts,u=e.start,R=v,R<0&&(R>=O&&(R=L),R=R/2>>0,w+=R),R=C,R>=0&&(R<=L&&(R=L),R=R/2>>0,P+=R),R=w,R<0&&(R=0),b=P>>16,b>o&&(b=o),_[p++]=R>>16,_[p++]=b,++n,R=v,R>=0&&(R<=L&&(R=L),R=R/2>>0),w+=R,R=C,R<0&&(R>=O&&(R=L),R/=2),P+=R,g())},g=()=>{for(;A=_[h+1],!(u>=h);)if(A>_[u+1]){if(A=_[u+1],A>l)return f();if(A-=n,A>0){--A;do{S=w,S<0&&(S=0),b=P>>16,b>o&&(b=o),_[p++]=S>>16,_[p++]=b,w+=v,P+=C,--A}while(A>=0)}const e=this.drawPolygonHelper2(P,n,C,h,u);P=e.x,n=e.y,C=e.step,h=e.pts,u=e.start,R=C,R>=0?(R<=L&&(R=L),R=R/2>>0,P+=R):(R=w,R<0&&(R=0),b=P>>16,b>o&&(b=o),_[p++]=R>>16,_[p++]=b,++n,R=C,R>=O&&(R=L),R=R/2>>0,P+=R,w+=v)}else{if(A==_[u+1]){if(A>l)return f();if(A-=n,A>0){--A;do{S=w,S<0&&(S=0),b=P>>16,b>o&&(b=o),_[p++]=S>>16,_[p++]=b,w+=v,P+=C,--A}while(A>=0)}return m()}if(A>l)return f();{if(A-=n,A>0){--A;do{S=w,S<0&&(S=0),b=P>>16,b>o&&(b=o),_[p++]=S>>16,_[p++]=b,w+=v,P+=C,--A}while(A>=0)}const e=this.drawPolygonHelper1(w,n,v,h,u);w=e.x,n=e.y,v=e.step,h=e.pts,u=e.start,R=v,R<0?(R>=O&&(R=L),R=R/2>>0,w+=R):(R=w,R<0&&(R=0),b=P>>16,b>o&&(b=o),_[p++]=R>>16,_[p++]=b,++n,R=v,R<=L&&(R=L),R=R/2>>0,w+=R,P+=C)}}if(A>l)return f();if(A-=n,A<0)return d();if(A>0){--A;do{S=w,S<0&&(S=0),b=P>>16,b>o&&(b=o),_[p++]=S>>16,_[p++]=b,w+=v,P+=C,--A}while(A>=0)}return w=P=_[h]<<16|_[h+1],y()};let b,T,E,A,S,w,R,P,v=0,C=0;h=u+2*r,o=this._crw-1,l=this._crh-1;let L=65536,O=-65536;if(n<0){let e,t;do{--h,t=_[h],--h,e=_[h]}while(t<0);if(b=_[h+2],E=_[h+3],A=t-E,T=e-b,v=A<<16|T,0===A)throw`Assertion failed: ${A} !== 0`;S=E*T/A>>0,w=b-S<<16,R=v=i.calcPolyStep1(T,A),R<0&&(R=-R),R<L&&(R=O),R=R/2>>0,w-=R;do{e=_[u++],t=_[u++]}while(_[u+1]<0);if(A=_[u+1]-t,T=_[u]-e,C=A<<16|T,0===A)throw`Assertion failed: ${A} !== 0`;return S=t*T/A>>0,P=e-S<<16,R=C=i.calcPolyStep2(T,A),R<0&&(R=-R),R<L&&(R=L),R=R/2>>0,P+=R,n=0,_[p++]=0,g()}return _[p++]=n,m()}}i.AREA_POINTS_SIZE=512,t.Graphics=i},18:function(e,t,s){t.__esModule=!0;t.CpcPlayer=class{constructor(e,t){this._mix=e,this._fs=t}playTrack(e){return console.log("cpcPlayer::playTrack: not implemented!"),!1}stopTrack(){}pauseTrack(){throw"CpcPlayer::pauseTrack() not implemented!"}resumeTrack(){throw"CpcPlayer::resumeTrack() not implemented!"}nextChunk(){}readSampleData(){}mix(e,t){}static mixCallback(e,t,s){}}},19:function(e,t,s){t.__esModule=!0;var i=e(15);class r{contructor(){this._playing=!1,this._modInfo={songName:"",samples:[],numPatterns:0,patternOrderTable:[],patternsTable:[]}}findPeriod(e,t){for(let s=0;s<36;++s)if(_._periodTable[s]===e)return 36*t+s;return console.error("Invalid period=%d",e),0}init(e){this._mixingRate=e}}class _{constructor(e,t){this._playing=!1,this._mix=e,this._fs=t,this._impl=new r}play(e){}stop(){throw"ModPlayer::stop() not implemented!"}}_._periodTable=i._periodTable,_._modulesFiles=i._modulesFiles,_._modulesFilesCount=i._modulesFiles.length,t.ModPlayer=_},20:function(e,t,s){t.__esModule=!0;t.OggPlayer=class{constructor(e,t){this._mix=e,this._fs=t,this._impl=null}playTrack(e){return!1}pauseTrack(){throw"OggPlayer::pauseTrack() not implemented!"}resumeTrack(){throw"OggPlayer::resumeTrack() not implemented!"}}},21:function(e,t,s){t.__esModule=!0;var i=e(15);class r{constructor(e){this._samples=new Array(3),this._mod=null,this._playing=!1,this._mix=e}play(e){if(console.log(`SfxPlayer::play(${e})`),!this._playing){if(e<68||e>75)throw`Assertion failed: ${e} >= 68 && ${e} <= 75`;const t=[r._module68,r._module68,r._module70,r._module70,r._module72,r._module73,r._module74,r._module75][e-68];this._mix._stub.postMessageToSFXProcessor({message:"play",module:t})}}stop(){throw"SfxPlayer::stop() not implemented!"}}r._musicData68=i._musicData68,r._musicData70=i._musicData70,r._musicData72=i._musicData72,r._musicData73=i._musicData73,r._musicData74=i._musicData74,r._musicData75=i._musicData75,r._musicDataSample1=i._musicDataSample1,r._musicDataSample2=i._musicDataSample2,r._musicDataSample3=i._musicDataSample3,r._musicDataSample4=i._musicDataSample4,r._musicDataSample5=i._musicDataSample5,r._musicDataSample6=i._musicDataSample6,r._musicDataSample7=i._musicDataSample7,r._musicDataSample8=i._musicDataSample8,r._module68=i._module68,r._module70=i._module70,r._module72=i._module72,r._module73=i._module73,r._module74=i._module74,r._module75=i._module75,r._periodTable=i._sfxPeriodTable,t.SfxPlayer=r},22:function(e,t,s){t.__esModule=!0;var i=e(2);const r=(e,t,s,i,r,_)=>{(t+=_.y)>=0&&t<_.h&&(_.xflip&&(e=s-1-e),(e+=_.x)>=0&&e<_.w&&_.setPixel(_,e,t,r))};t.decodeC103=(e,t,s,_)=>{const a=4095;let o=0,n=1,l=0,h=0,c=new Uint8Array(4096),u=0;for(let p=0;p<s;++p)for(let s=0;s<t;++s){if(0===l){let d=1&n;if(n>>=1,0===n&&(n=e[u++],d&&(n|=256),d=1&n,n>>=1),!d){const i=e[u++];c[o]=i,++o,o&=a,r(s,p,t,0,i,_);continue}h=i.READ_BE_UINT16(e,u),u+=2,l=3+(h>>12),h&=a,h=o-h-1&a}const d=c[h++];h&=a,c[o++]=d,o&=a,r(s,p,t,0,d,_),--l}},t.decodeC211=(e,t,s,_)=>{const a=new Array(512);let o=0,n=0,l=0,h=0;for(;;){let s=e[h++];0!=(128&s)&&(++o,n=0);let c=31&s;if(0===c&&(c=i.READ_BE_UINT16(e,h),h+=2),0==(64&s))if(0==(32&s))if(1===c){if(l<=0)throw`assertion failed: ${l} > 0`;--a[l-1].repeatCount,a[l-1].repeatCount>=0?(e=a[l-1].ptr,h=0):--l}else{if(l>=i.ARRAYSIZE(a))throw`assertion failed: ${l} < ${i.ARRAYSIZE(a)}`;a[l].ptr=e,a[l].repeatCount=c-1,++l}else n+=c;else if(0==(32&s)){if(1===c)return;const s=e[h++];for(let e=0;e<c;++e)r(n++,o,t,0,s,_)}else for(let s=0;s<c;++s)r(n++,o,t,0,e[h++],_)}}},23:function(e,t,s){t.__esModule=!0;var i=e(4),r=e(24);class _{constructor(e){this._f=new i.File,this._fs=e,this._entries=null,this._entriesCount=0}async readEntries(){const e=this._f;if(await e.open(_.FILENAME,"rb",this._fs)){if(this._entriesCount=e.readUint16BE(),this._entries=new Array(this._entriesCount),!this._entries.length)throw`Failed to allocate ${this._entriesCount} entries`;const t=e.readUint16BE();if(30!==t)throw`Assertion failed: ${t} === 30`;let s=0;const i=this._entries;for(let t=0;t<this._entriesCount;++t){i[t]={name:e.readString(14),offset:e.readUint32BE(),compressedSize:e.readUint32BE(),size:e.readUint32BE()};const r=e.readUint32BE();if(r!==_.TAG)throw`Assertion failed: ${r} === ${_.TAG}`;if(0!==t&&s!==i[t].offset)throw`Assertion failed: ${s} === ${i[t].offset}`;s=i[t].offset+i[t].compressedSize,i.sort(_.compareAbaEntry)}}}findEntry(e){return this._entries.find((t=>t.name.toLowerCase()===e.toLowerCase()))||null}loadEntry(e){const t={dat:null,size:0},s=this.findEntry(e);if(s){t.size=s.size;const i=new Uint8Array(s.compressedSize);if(!i)throw`Failed to allocate ${s.compressedSize} bytes`;if(this._f.seek(s.offset),this._f.read(i.buffer,s.compressedSize),s.compressedSize===s.size)t.dat=i;else{if(t.dat=new Uint8Array(s.size),!t.dat)throw`Failed to allocate ${s.size} bytes`;if(!r.bytekiller_unpack(t.dat,s.size,i,s.compressedSize))throw`Bad CRC for '${e}'`}return t}}}_.FILENAME="DEMO_UK.ABA",_.TAG=1143885102,_.compareAbaEntry=(e,t)=>e.name.toLowerCase().localeCompare(t.name.toLowerCase()),t.ResourceAba=_},24:function(e,t,s){t.__esModule=!0;var i=e(2);const r=e=>{let t=0!=(1&e.bits);if(e.bits=e.bits>>>1,0===e.bits){const s=i.READ_BE_UINT32(e.src.buffer,e.src_offset);e.src_offset-=4,e.crc=(e.crc^s)>>>0,t=0!=(1&s),e.bits=(1<<31|s>>>1)>>>0}return t},_=(e,t)=>{let s=0;for(let i=0;i<t;++i)s=(s|(r(e)?1:0)<<t-1-i)>>>0;return s},a=(e,t)=>{e.size-=t,e.size<0&&(t+=e.size,e.size=0);for(let s=0;s<t;++s){const t=_(e,8);e.dst[e.dst_offset-s]=t}e.dst_offset-=t},o=(e,t,s)=>{e.size-=t,e.size<0&&(t+=e.size,e.size=0);for(let i=0;i<t;++i)e.dst[e.dst_offset-i]=e.dst[e.dst_offset-i+s];e.dst_offset-=t};t.bytekiller_unpack=(e,t,s,n)=>{const l={src:s,src_offset:s.byteOffset+n-4,size:0,dst:null,dst_offset:0,bits:0,crc:0};if(l.size=i.READ_BE_UINT32(l.src.buffer,l.src_offset),l.src_offset-=4,l.size>t)return console.warn(`Unexpected unpack size ${l.size} buffer size ${t}`),!1;l.dst=e,l.dst_offset=l.size-1,l.crc=i.READ_BE_UINT32(l.src.buffer,l.src_offset),l.src_offset-=4,l.bits=i.READ_BE_UINT32(l.src.buffer,l.src_offset),l.src_offset-=4,l.crc=(l.crc^l.bits)>>>0;do{if(r(l)){switch(_(l,2)){case 3:a(l,_(l,8)+9);break;case 2:const e=_(l,8)+1;o(l,e,_(l,12));break;case 1:o(l,4,_(l,10));break;case 0:o(l,3,_(l,9))}}else r(l)?o(l,2,_(l,8)):a(l,_(l,3)+1)}while(l.size>0);if(0!==l.size)throw`Assertion failed: ${l.size} === 0`;return 0===l.crc}},25:function(e,t,s){t.__esModule=!0;var i=e(6);const r=(e,t,s)=>{const i=e.init_PGE;if(i.obj_node_number>=s._res._numObjectNodes)throw`Assertion error: ${i.obj_node_number} < ${s._res._numObjectNodes}`;const r=s._res._objectNodesMap[i.obj_node_number];let _=r.objects[e.first_obj_number],a=e.first_obj_number;for(;e.obj_type===_.type&&r.last_obj_number>a;){if(107===_.opcode2){if(0===_.opcode_arg2&&(1===t||2===t))return 65535;if(1===_.opcode_arg2&&(3===t||4===t))return 65535}else if(34===_.opcode2&&_.opcode_arg2===t)return 65535;if(107===_.opcode1){if(0===_.opcode_arg1&&(1===t||2===t))return 65535;if(1===_.opcode_arg1&&(3===t||4===t))return 65535}else if(34===_.opcode1&&_.opcode_arg1===t)return 65535;++a,_=r.objects[a]}return 0};t.col_detectHitCallbackHelper=r,t.col_detectHitCallback1=(e,t,s,i,r)=>0!==r.col_getGridData(e,1,t)?1:0,t.col_detectHitCallback2=(e,t,s,i,_)=>e!==t&&4&e.flags&&e.init_PGE.object_type===i&&(1&e.flags)==(1&t.flags)&&0===r(e,s,_)?1:0,t.col_detectHitCallback3=(e,t,s,i,_)=>e!==t&&4&e.flags&&e.init_PGE.object_type===i&&(1&e.flags)!=(1&t.flags)&&0===r(e,s,_)?1:0,t.col_detectHitCallback4=(e,t,s,i,_)=>e!==t&&4&e.flags&&e.init_PGE.object_type===i&&(1&e.flags)!=(1&t.flags)&&0===r(e,s,_)?(_.pge_updateGroup(t.index,e.index,s),1):0,t.col_detectHitCallback5=(e,t,s,i,_)=>e!==t&&4&e.flags&&e.init_PGE.object_type===i&&(1&e.flags)==(1&t.flags)&&0===r(e,s,_)?(_.pge_updateGroup(t.index,e.index,s),1):0,t.col_detectHit=(e,t,s,r,_,a,o,n)=>{let l,h,c,u,p=0,d=e.room_location<<24>>24;if(d<0||d>=64)return 0;let f=e.init_PGE.counter_values[0];f>0?(l=-1,h=-1):(l=1,h=1,f=-f),n._pge_currentPiegeFacingDir&&(l=-l);let y=e.pos_x+8>>4,m=e.pos_y/72>>0;if(m>=0&&m<=2)for(m*=16,p=0,c=0,u=0,0!==a&&(c=h,y+=l,u=1);u<=f;){if(y<0){if(d=n._res._ctData[i.CT_LEFT_ROOM+d],d<0)break;y+=16}if(y>=16){if(d=n._res._ctData[i.CT_RIGHT_ROOM+d],d<0)break;y-=16}let a=n.col_findSlot(m+y+64*d);if(a>=0){let i=n._col_slotsTable[a];for(;i;)p+=r(i.live_pge,e,t,s,n),i=i.prev_slot}if(0!==_(e,c,u,t,n))break;y+=l,++u,c+=h}return-1===o?p:0},t.col_detectGunHitCallback1=(e,t,s,i,r)=>{const _=r.col_getGridData(e,1,t);return 0===_||2&_&&1===i?0:_},t.col_detectGunHitCallback2=(e,t,s,i,_)=>{if(e!==t&&4&e.flags&&(1===e.init_PGE.object_type||10===e.init_PGE.object_type)){let i;if((1&e.flags)!=(1&t.flags)?(i=4,0===s&&(i=3)):(i=2,0===s&&(i=1)),0!==r(e,i,_))return _.pge_updateGroup(t.index,e.index,i),1}return 0},t.col_detectGunHitCallback3=(e,t,s,i,_)=>{if(e!==t&&4&e.flags&&(1===e.init_PGE.object_type||12===e.init_PGE.object_type||10===e.init_PGE.object_type)){let i;if((1&e.flags)!=(1&t.flags)?(i=4,0===s&&(i=3)):(i=2,0===s&&(i=1)),0!==r(e,i,_))return _.pge_updateGroup(t.index,e.index,i),1}return 0},t.col_detectGunHit=(e,t,s,r,_,a,o,n)=>{let l,h,c,u=e.room_location;if(u<0||u>=64)return 0;l=-1===o?e.init_PGE.counter_values[0]:e.init_PGE.counter_values[3],l>0?(h=-1,c=-1):(h=1,c=1,l=-l),n._pge_currentPiegeFacingDir&&(h=-h);let p=e.pos_x+8>>4,d=(e.pos_y-8)/72>>0;if(d>=0&&d<=2){d*=16;let o=0,f=0;for(0!==a&&(o=c,p+=h,f=1);f<=l;){if(p<0){if(u=n._res._ctData[i.CT_LEFT_ROOM+u],u<0)return 0;p+=16}if(p>=16){if(u=n._res._ctData[i.CT_RIGHT_ROOM+u],u<0)return 0;p-=16}let a=n.col_findSlot(64*u+p+d);if(a>=0){let i=n._col_slotsTable[a];for(;i;){const _=r(i.live_pge,e,t,s,n);if(0!==_)return _;i=i.prev_slot}}if(0!==_(e,o,f,t,n))break;p+=h,++f,o+=c}}return 0}}},(function(){__fuse.r(1)}));